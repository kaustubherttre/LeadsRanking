{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","views/Common/RadioOptions.jsx","views/ITAssetSurvey/Success.jsx","views/ITAssetSurvey/UserDetails.jsx","views/ITAssetSurvey/TabletDetails.jsx","views/ITAssetSurvey/LaptopDetails.jsx","views/ITAssetDetailSurvey.jsx"],"names":["_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","DropDown","props","state","items","nextProps","this","setState","item","key","Id","Display","visible","onChange","className","map","text","id","name","changed","type","checked","isSelected","htmlFor","React","Component","Success","class","UserDetails","saveAndContinue","e","preventDefault","values","onValidation","noasset","SaveAssetDetails","nextStep","QuestionOneAnswer","errors","Form","Col","md","Label","Control","placeholder","email","disabled","handleChange","style","color","empname","Text","question1","Button","onClick","bind","AssetDetails","back","prevStep","QuestionTwoAnswer","showdetails","serialno","question2","connect","CommonData","InsertData","ITAssetDetailSurvey","handleValidation","part","fields","formIsValid","test","step","input","event","target","alert","json","moment","format","sid","uid","root","body","c","entries","index","includes","console","log","toString","UpdateData","querydata","PageTitle","hover","hoverImg","stepOnePart","getUrlParameter","GetCommonspData","params","result","data","Eligible","IsComplete","TabletDetails","LaptopDetails","Error","UserInfo","modelno","Row","Card","CardHeader","CardBody","renderSwitch","Modal","show","onHide","dialogClassName","Header","closeButton","Title","Body","src","Footer","GetCommonData"],"mappings":"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","file":"static/js/93.f601409e.chunk.js","sourcesContent":["import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","\r\nimport React from \"react\";\r\nimport { Form } from 'react-bootstrap';\r\nimport { connect } from \"react-redux\";\r\n// reactstrap components\r\n\r\nimport {\r\n    GetCommonData\r\n} from \"../../store/actions/CommonAction\";\r\nclass DropDown extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            items: [],\r\n        }\r\n    }\r\n    componentDidMount() {\r\n    }\r\n    componentWillReceiveProps(nextProps) {\r\n        this.setState({ items: nextProps.items });\r\n\r\n    }\r\n\r\n    displayoption(item) {\r\n        return <option key={item.Id} value={item.Id}>{item.Display}</option>\r\n    }\r\n\r\n    render() {\r\n\r\n\r\n        let { value, onChange, visible, items } = this.props;\r\n        if (!items) {\r\n            items = [];\r\n        }\r\n        if (visible == false) {\r\n            return null;\r\n        }\r\n        return (\r\n\r\n            <div className=\"RadioButton\">\r\n                {\r\n                items.map(([text, value], i) => (\r\n                <div key={value+\"_\"+i }>\r\n                <input id={value+\"_\"+i} name={this.props.name} onChange={this.props.changed} value={value} type=\"radio\" checked={this.props.value ? this.props.value === value : this.props.isSelected === value} />\r\n                <label htmlFor={value+\"_\"+i}>{text}</label>\r\n                </div>\r\n                ))\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default DropDown;\r\n\r\n","import React, { Component } from 'react';\r\n\r\nclass Success extends Component{\r\n    render(){\r\n        return(\r\n            <p class=\"survey-response success\">Your response is submitted successfully</p>  \r\n        )\r\n    }\r\n}\r\n\r\nexport default Success;","import React, { Component } from 'react';\r\nimport RadioButton from '../Common/RadioOptions';\r\nimport { ButtonGroup, Button, Modal, Form } from 'react-bootstrap';\r\nimport {\r\n    Card,\r\n    CardHeader,\r\n    CardBody,\r\n    CardTitle,\r\n    Table,\r\n    Row,\r\n    Col\r\n} from \"reactstrap\";\r\n\r\nclass UserDetails extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n     saveAndContinue = (e) => {\r\n        e.preventDefault()\r\n        const { values } = this.props;\r\n\r\n         if (this.props.onValidation(\"part1\", values)) {\r\n             if(values.noasset){\r\n                this.props.SaveAssetDetails(values);   \r\n                this.props.nextStep(values);\r\n             }else{              \r\n                 this.props.nextStep(values)\r\n             }\r\n         }\r\n    }\r\n\r\n    render(){\r\n        this.QuestionOneAnswer = [[\"Laptop\", \"Laptop\"], [\"Tablet\", \"Tablet\"]]   \r\n        const { values, errors } = this.props;\r\n        return(\r\n            \r\n            <Form>\r\n                <Col md={12} className=\"pull-left mt-4 mb-4\">\r\n                    <Form.Label>Email address <span>*</span></Form.Label>\r\n                    <Form.Control type=\"text\" placeholder=\"Your email\" name=\"email\" value={(values.noasset) ? \"\" : values.email} className=\"surveytextfield\" id=\"email\"\r\n                    disabled={(values.noasset) ? \"disabled\" : \"\"}\r\n                    onChange={this.props.handleChange( \"email\")} />\r\n                    <span style={{color: \"red\"}}>{errors.email}</span>\r\n                    </Col>\r\n                    <Col md={12} className=\"pull-left mt-4\">\r\n                    <Form.Label>Employee Name <span>*</span></Form.Label>\r\n                    <Form.Control type=\"text\" placeholder=\"Your answer\" name=\"empname\" value={(values.noasset) ? \"\" : values.empname} className=\"surveytextfield\" id=\"empname\" \r\n                    disabled={(values.noasset) ? \"disabled\" : \"\"}\r\n                    onChange={this.props.handleChange(\"empname\")} />\r\n                    <span style={{color: \"red\"}}>{errors.empname}</span>\r\n                    </Col>\r\n                    <Col md={12} className=\"pull-left mt-4\">\r\n                    <Form.Text className=\"questions\" id=\"question1\">\r\n                        <p class=\"survey-text mb-3\">Which device is issued?  <span>*</span></p>\r\n                    </Form.Text>\r\n                    <RadioButton \r\n                    name= \"question1\"\r\n                    changed={this.props.handleChange(\"question1\")}\r\n                    items = {this.QuestionOneAnswer}\r\n                    isSelected={ (values.noasset) ? \"\" :values.question1} \r\n                    disabled={(values.noasset) ? \"disabled\" : \"\"}\r\n                    />\r\n                    <span style={{color: \"red\"}}>{errors.question1}</span>\r\n                </Col>\r\n \r\n                <Col md={12} className=\"pull-left mt-4 mb-4\">                                   \r\n                <div className=\"OrITasset\"><h2> OR</h2></div>\r\n                </Col>\r\n                <Col md={12} className=\"pull-left mt-4\">\r\n                <input type=\"checkbox\"\r\n                    onChange={this.props.handleChange(\"noasset\")}\r\n                    checked={values.noasset}\r\n                    name=\"noasset\" id=\"noasset\" />\r\n                    <Form.Label><b>&nbsp; I Don't have any company asset <span>*</span></b></Form.Label>                   \r\n                    <span style={{color: \"red\"}}>{errors.noasset}</span>\r\n \r\n                </Col>\r\n                <Button onClick={this.saveAndContinue.bind(this)}>Save And Continue </Button>\r\n            </Form>\r\n          \r\n        )\r\n    }\r\n}\r\n\r\nexport default UserDetails;","import React, { Component } from 'react';\r\nimport { throws } from 'assert';\r\nimport RadioButton from '../Common/RadioOptions';\r\nimport { ButtonGroup, Button, Modal, Form } from 'react-bootstrap';\r\nimport {InsertData} from \"../../store/actions/CommonAction\";\r\nimport {\r\n    Row,\r\n    Col\r\n} from \"reactstrap\";\r\nimport moment from 'moment';\r\nimport { connect } from \"react-redux\";\r\n\r\n\r\n\r\nclass AssetDetails extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    saveAndContinue = (e) => {\r\n        e.preventDefault();\r\n        const { values } = this.props;\r\n\r\n        if (this.props.onValidation(\"part2\", values)) {\r\n        this.props.SaveAssetDetails(values);   \r\n        this.props.nextStep(values);\r\n         }\r\n    }\r\n\r\n\r\n    back  = (e) => {\r\n        e.preventDefault();\r\n        this.props.prevStep();\r\n    }\r\n\r\n    render(){\r\n        this.QuestionTwoAnswer = [[\"8 Inch\", \"8-Inch\"], [\"10 Inch\", \"10-Inch\"]]       \r\n\r\n        const { values, errors } = this.props\r\n        return(\r\n        <Form color='blue' >\r\n            <Col md={12} className=\"pull-left mt-4\">\r\n            <Form.Label>Serial Number <span>* </span> <span style={{color: \"blue\"}}><a onClick={this.props.showdetails.bind(this)} >\r\n            What's this ?</a></span></Form.Label>\r\n            <Form.Control type=\"text\" placeholder=\"Your answer\" name=\"serialno\" value={values.serialno} className=\"surveytextfield\" id=\"serialno\" onChange={this.props.handleChange(\"serialno\")} />\r\n            <span style={{color: \"red\"}}>{errors.serialno}</span>\r\n            </Col>                                        \r\n            <Col md={12} className=\"pull-left mt-4\">\r\n            <Form.Text className=\"questions\" id=\"question2\">\r\n                    <p class=\"survey-text mb-3\">Tablet Size <span>*</span></p>\r\n            </Form.Text>\r\n            <RadioButton \r\n                name= \"question2\"\r\n                changed={this.props.handleChange(\"question2\")}//{ this.setAnswerTwo.bind(this) } \r\n                items = {this.QuestionTwoAnswer}\r\n                isSelected={ values.question2} \r\n            />\r\n            <span style={{color: \"red\"}}>{errors.question2}</span>\r\n            </Col>\r\n           \r\n            <Col md={4} className=\"pull-left mt-4\">\r\n            <Button onClick={this.back}>Back</Button>\r\n            </Col>\r\n            <Col md={6} className=\"pull-left mt-4\">\r\n            <Button onClick={this.saveAndContinue}>Submit Details </Button>\r\n            </Col>\r\n        </Form>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        CommonData: state.CommonData\r\n    };\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    {\r\n        InsertData,\r\n    }\r\n)(AssetDetails)\r\n","import React, { Component } from 'react';\r\nimport { throws } from 'assert';\r\nimport RadioButton from '../Common/RadioOptions';\r\nimport { ButtonGroup, Button, Modal, Form } from 'react-bootstrap';\r\nimport {InsertData} from \"../../store/actions/CommonAction\";\r\nimport {\r\n    Card,\r\n    CardHeader,\r\n    CardBody,\r\n    CardTitle,\r\n    Table,\r\n    Row,\r\n    Col\r\n} from \"reactstrap\";\r\nimport moment from 'moment';\r\nimport { connect } from \"react-redux\";\r\n\r\nclass AssetDetails extends Component{\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    saveAndContinue = (e) => {\r\n        e.preventDefault();\r\n        const { values } = this.props;\r\n\r\n        if (this.props.onValidation(\"part2\", values)) {\r\n            this.props.SaveAssetDetails(values);                 \r\n            this.props.nextStep(values);\r\n         }\r\n    }\r\n\r\n\r\n    back  = (e) => {\r\n        e.preventDefault();\r\n        this.props.prevStep();\r\n    }\r\n\r\n    render(){\r\n\r\n        const { values, errors } = this.props\r\n        return(\r\n        <Form color='blue' >\r\n            <Col md={12} className=\"pull-left mt-4\">\r\n            <Form.Label>Enter Serial Number <span>* </span> <span style={{color: \"blue\"}}><a onClick={this.props.showdetails.bind(this)} >\r\n            What's this ?</a></span></Form.Label>\r\n            <Form.Control type=\"text\" placeholder=\"Your answer\" value={values.serialno} name=\"serialno\" className=\"surveytextfield\" id=\"serialno\" onChange={this.props.handleChange(\"serialno\")} />\r\n            <span style={{color: \"red\"}}>{errors.serialno}</span>\r\n            </Col>                                                                            \r\n            <Col md={12} className=\"pull-left mt-4\">\r\n            <Form.Label>Enter Model Number <span>*</span></Form.Label>\r\n            <Form.Control type=\"text\" placeholder=\"Your answer\" value={values.question2} name=\"modelno\" className=\"surveytextfield\" id=\"modelno\" onChange={this.props.handleChange(\"question2\")} />\r\n            <span style={{color: \"red\"}}>{errors.question2}</span>\r\n            </Col>\r\n            \r\n            <Col md={4} className=\"pull-left mt-4\">\r\n            <Button onClick={this.back}>Back</Button>\r\n            </Col>\r\n            <Col md={6} className=\"pull-left mt-4\">\r\n            <Button onClick={this.saveAndContinue}>Submit Details </Button>\r\n            </Col>\r\n        </Form>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        CommonData: state.CommonData\r\n    };\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    {\r\n        InsertData,\r\n    }\r\n)(AssetDetails)","import React from \"react\";\r\nimport { GetCommonData, InsertData, UpdateData, GetCommonspData } from \"../store/actions/CommonAction\";\r\nimport { connect } from \"react-redux\";\r\nimport RadioButton from './Common/RadioOptions';\r\nimport { getUrlParameter } from '../utility/utility.jsx';\r\nimport { If, Then, Else } from 'react-if';\r\nimport moment from 'moment';\r\nimport UserDetails from './ITAssetSurvey/UserDetails';\r\nimport TabletDetails from './ITAssetSurvey/TabletDetails';\r\nimport LaptopDetails from './ITAssetSurvey/LaptopDetails';\r\nimport Success from './ITAssetSurvey/Success';\r\n\r\n// reactstrap components\r\nimport {\r\n    Card,\r\n    CardHeader,\r\n    CardBody,\r\n    CardTitle,\r\n    Table,\r\n    Row,\r\n    Col\r\n} from \"reactstrap\";\r\nimport { ButtonGroup, Button, Modal, Form } from 'react-bootstrap';\r\n\r\nclass ITAssetDetailSurvey extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            root: \"\",\r\n            PageTitle: \"\",\r\n            uid: '',\r\n            errors: {},\r\n            fields: {},\r\n            hover: false,\r\n            hoverImg: '/IT-Asset-Details-Submission.png',\r\n            step: 1,\r\n            stepOnePart: 1,\r\n            email: '',\r\n            empname: '',\r\n            question1: '',\r\n            serialno: '',\r\n            question2: '',\r\n            sid: '',\r\n            noasset: '',\r\n        };\r\n        this.handleValidation = this.handleValidation.bind(this);\r\n\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        let uid = getUrlParameter(\"u\");\r\n        let sid = getUrlParameter(\"sid\");\r\n        if (uid) {\r\n            this.props.GetCommonspData({\r\n                root: 'CheckSurveyAgent',\r\n                c: \"L\",\r\n                params: [{ \"UserId\": uid , \"SurveyId\" : sid}],\r\n            }, function (result) {\r\n                if (result.data && result.data.data[0].length > 0 ) {console.log(result.data.data[0][0].Eligible,result.data.data[0][0].IsComplete)\r\n                    if (result.data.data[0][0].Eligible == true && result.data.data[0][0].IsComplete == false) {\r\n                    this.setState({ uid: uid, sid: sid, stepOnePart: 4 });\r\n                } else if (result.data.data[0][0].Eligible == true && result.data.data[0][0].IsComplete == true){\r\n                    this.setState({ stepOnePart: 3 });\r\n                } else{\r\n                    this.setState({ stepOnePart: 2 });\r\n                }\r\n            }\r\n            }.bind(this));\r\n\r\n        } else {\r\n            this.setState({ stepOnePart: 2 });\r\n        }\r\n\r\n    }\r\n\r\n    handleValidation = (part, values) => {\r\n        \r\n\r\n        let fields = this.state.fields;\r\n        let errors = {};\r\n        let formIsValid = true;\r\n        if(!values.noasset){\r\n       if (part == 'part1') { \r\n        if(!values.email){\r\n           formIsValid = false;\r\n           errors[\"email\"] = \"This field is required\";\r\n        }else if (\r\n            !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)\r\n          ) {\r\n            formIsValid = false;\r\n            errors[\"email\"] = 'Invalid email address';\r\n          }\r\n\r\n        if(!values.empname){\r\n            formIsValid = false;\r\n            errors[\"empname\"] = \"This field is required\";\r\n         }\r\n\r\n        if(!values.question1){\r\n        formIsValid = false;\r\n        errors[\"question1\"] = \"This field is required\";\r\n        }\r\n    }\r\n\r\n    if(part == 'part2'){\r\n            if(!values.serialno){\r\n            formIsValid = false;\r\n            errors[\"serialno\"] = \"This field is required\";\r\n            }\r\n            if(!values.question2){\r\n            formIsValid = false;\r\n            errors[\"question2\"] = \"This field is required\";\r\n            }\r\n    }\r\n    } \r\n       this.setState({errors: errors});\r\n       return formIsValid;\r\n   }\r\n\r\n    showdetails() {\r\n        \r\n        this.setState({ hover: true });\r\n    }\r\n\r\n    nextStep = (values) => {debugger;\r\n        const { step } = this.state\r\n        if(values.noasset){\r\n            this.setState({step : step + 2})\r\n        }else{\r\n            this.setState({step : step + 1})\r\n        }\r\n    }\r\n\r\n    prevStep = () => {\r\n        const { step } = this.state\r\n        this.setState({\r\n            step: step - 1\r\n        })\r\n    }\r\n\r\n    handleChange = input => event => {\r\n        if (event.target && event.target.type == \"checkbox\") {\r\n            this.setState({ [input] : event.target.checked })\r\n        }else{\r\n        this.setState({ [input] : event.target.value })\r\n        }\r\n    }\r\n\r\n    SaveAssetDetails = (values) => {\r\n            alert('Form submitted successfully');\r\n\r\n           if(values.noasset){\r\n            var json = { 'AnswerText': values.noasset, \r\n            'CreatedOn': moment().format(\"YYYY-MM-DD HH:mm:ss\"),\r\n            'SurveyId': this.state.sid,\r\n            'UserId': this.state.uid,\r\n            'QuestionId': 22,\r\n            'Description': '',\r\n            'AnswerId': 1,\r\n            'IsActive':1,\r\n        }\r\n        this.props.InsertData({\r\n            root: \"SurveyResponse\",\r\n            body: json,\r\n            c: \"L\",\r\n          });\r\n        }else{\r\n        Object.entries(values).map(([key, value], index) => {\r\n            index = index + 5;\r\n            if (values['question1'].includes('Tablet') && index == 9) {\r\n                index = index + 1;\r\n            }\r\n            console.log('key', key, 'value', value.toString(), index + 1)\r\n            var json = {\r\n                'AnswerText': value.toString(),\r\n                'CreatedOn': moment().format(\"YYYY-MM-DD HH:mm:ss\"),\r\n                'SurveyId': this.state.sid,\r\n                'UserId': this.state.uid,\r\n                'QuestionId': index + 1,\r\n                'Description': '',\r\n                'AnswerId': 1,\r\n                'IsActive': 1,\r\n            }\r\n            if(key != \"noasset\"){\r\n            this.props.InsertData({\r\n                root: \"SurveyResponse\",\r\n                body: json,\r\n                c: \"L\",\r\n            });\r\n        }\r\n\r\n        })\r\n        }\r\n        // Update survey reponse completed\r\n        let res = this.props.UpdateData({\r\n            root: \"SurveyAgentMapping\",\r\n            body: {\r\n                'IsCompleted': 1,\r\n                'UpdatedOn': moment().format(\"YYYY-MM-DD HH:mm:ss\")\r\n            },\r\n            querydata: { \"UserId\": this.state.uid, \"SurveyId\": this.state.sid },\r\n            c: \"L\",\r\n        });\r\n    }\r\n\r\n    renderSwitch(step, values, errors, stepOnePart) {\r\n        \r\n        switch (step) {\r\n            case 1:\r\n                if (stepOnePart == 1)\r\n                    return <i class=\"fa fa-spinner fa-spin\"></i>\r\n\r\n                if (stepOnePart == 2)\r\n                    return <p class=\"survey-response info\">Invalid action</p>\r\n\r\n                if (stepOnePart == 3)\r\n                    return <p class=\"survey-response info\">Your survey response is already recorded</p>\r\n\r\n                if (stepOnePart == 4)\r\n                    return <UserDetails\r\n                        nextStep={this.nextStep}\r\n                        handleChange={this.handleChange}\r\n                        onValidation={this.handleValidation.bind(this)}\r\n                        SaveAssetDetails = {this.SaveAssetDetails.bind(this)}\r\n                        values={values}\r\n                        errors={errors}\r\n                    />\r\n            case 2:\r\n                if (values.question1.includes('Tablet'))\r\n                    return <TabletDetails\r\n                        nextStep={this.nextStep}\r\n                        prevStep={this.prevStep}\r\n                        handleChange={this.handleChange}\r\n                        onValidation={this.handleValidation.bind(this)}\r\n                        showdetails={this.showdetails.bind(this)}\r\n                        SaveAssetDetails={this.SaveAssetDetails.bind(this)}\r\n                        values={values}\r\n                        errors={errors}\r\n                    />\r\n                if (values.question1.includes('Laptop'))\r\n                    return <LaptopDetails\r\n                        nextStep={this.nextStep}\r\n                        prevStep={this.prevStep}\r\n                        handleChange={this.handleChange}\r\n                        onValidation={this.handleValidation.bind(this)}\r\n                        showdetails={this.showdetails.bind(this)}\r\n                        SaveAssetDetails={this.SaveAssetDetails.bind(this)}\r\n                        values={values}\r\n                        errors={errors}\r\n                    />\r\n\r\n            case 3:\r\n                return <Success />\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        const { Error, UserInfo } = this.state;\r\n        const { step } = this.state;\r\n    \tconst { email, empname, question1, serialno, question2, noasset, modelno, errors, uid, stepOnePart } = this.state;\r\n        const values = { email, empname, question1, serialno, question2, noasset };\r\n           return (\r\n            <div className=\"content\">\r\n                <Row>\r\n                    <Col>\r\n                        <Card className=\"surveyform col-md-6 col-xs-12\">\r\n                            <CardHeader>\r\n                                <Col md={6} className=\"col-md-12 text-center\">\r\n                                    <h3>Information || Company Assets</h3>\r\n                                </Col>\r\n                            </CardHeader>\r\n                            <CardBody>\r\n                                {this.renderSwitch(step, values, errors, stepOnePart)}\r\n                            </CardBody>\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n                <Modal show={this.state.hover} onHide={() => this.setState({ hover: false })} dialogClassName=\"modal-50w\">\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title></Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <div className=\"modalmoreinfodata\">\r\n                            <img src={this.state.hoverImg} />\r\n                        </div>\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n\r\n                    </Modal.Footer>\r\n                </Modal>\r\n            </div>\r\n        )\r\n\r\n    }\r\n}\r\n\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        CommonData: state.CommonData\r\n    };\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    {\r\n        GetCommonData,\r\n        InsertData,\r\n        UpdateData,\r\n        GetCommonspData\r\n    }\r\n)(ITAssetDetailSurvey);"],"sourceRoot":""}