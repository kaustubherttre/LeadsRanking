{"version":3,"sources":["views/QuickSightTL.jsx"],"names":["QuickSightTL","props","state","PageTitle","QuicksightUrl","ecode","mapping","console","log","getuser","EmployeeId","RoleId","this","DashboardId","parameters","TL","GetDashboardUrl","result","data","options","url","container","document","getElementById","scrolling","height","width","locale","footerPaddingEnabled","embedSession","GetCommonspData","limit","skip","root","c","params","UserId","UserID","SuperGroupId","ProductId","incentiveMonth","Source","PageName","EventName","e","department","className","md","tag","id","React","Component","connect","CommonData","GetCommonData"],"mappings":"6RA8BMA,E,kDACJ,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXC,UAAW,2BACXC,cAAe,IAEjB,EAAKC,MAAQ,KACb,EAAKC,QAAU,CAIb,eAAgB,CACd,YAAe,yCAZF,E,qDAkBnB,WACEC,QAAQC,IAAI,UAAWC,eACvB,IAAIJ,EAAQI,cAAUC,WACTD,cAAUE,OACvBC,KAAKP,MAAQA,EAEb,IAAIQ,EAAc,uCACdC,EAAa,CACfC,GAAIH,KAAKP,OA8BXW,YAAgB,CACd,OAAUJ,KAAKP,MACf,YAAeQ,IACd,SAACI,GAGF,GAFAV,QAAQC,IAAI,cAAeS,GAEvBA,GAAUA,EAAOC,MAAQD,EAAOC,KAAKd,cACvC,KAGIe,EAAU,CACZC,IAJaH,EAAOC,KAAKd,cAKzBiB,UAHiBC,SAASC,eAAe,sBAIzCT,WAAYA,EAEZU,UAAW,KACXC,OAAQ,QACRC,MAAO,OACPC,OAAQ,QACRC,sBAAsB,GAGRC,uBAAaV,OAIjC,IACEP,KAAKX,MAAM6B,gBAAgB,CACzBC,MAAO,GACPC,KAAM,EACNC,KAAM,0BACNC,EAAG,IACHC,OAAQ,CAAC,CACPC,OAAQ3B,cAAU4B,OAClBC,aAAc,EACdC,UAAW,EACXC,eAAgB,aAChBC,OAAQ,kBACRC,SAAU,aACVC,UAAW9B,MAGZ,eAIL,MAAO+B,O,wBAST,SAAWC,GACTtC,QAAQC,IAAI,uBAAwBqC,GAEpC7B,YAAgB,CACd,OAAUJ,KAAKP,MACf,YAAeO,KAAKN,QAAQuC,GAAb,cACd,SAAC5B,GAGF,GAFAV,QAAQC,IAAI,cAAeS,GAEvBA,GAAUA,EAAOC,MAAQD,EAAOC,KAAKd,cAC7Ba,EAAOC,KAAKd,iBAmB1B,IACEQ,KAAKX,MAAM6B,gBAAgB,CACzBC,MAAO,GACPC,KAAM,EACNC,KAAM,0BACNC,EAAG,IACHC,OAAQ,CAAC,CACPC,OAAQ3B,cAAU4B,OAClBC,aAAc,EACdC,UAAW,EACXC,eAAgB,aAChBC,OAAQ,kBACRC,SAAU,aACVC,UAAWE,MAGZ,eAIL,MAAOD,O,oBAGT,WACE,MAAqChC,KAAKV,MAAlCE,EAAR,EAAQA,cAAeD,EAAvB,EAAuBA,UAEvB,OADAI,QAAQC,IAAI,8BAA+BJ,GAEzC,oCACE,yBAAK0C,UAAU,WACb,kBAAC,IAAD,MACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKC,GAAG,MACN,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKA,GAAI,IACP,kBAAC,IAAD,CAAWC,IAAI,MAAM7C,MAI3B,kBAAC,IAAD,KACE,yBAAK8C,GAAG,iC,GAtLCC,IAAMC,WA+MlBC,uBANf,SAAyBlD,GACvB,MAAO,CACLmD,WAAYnD,EAAMmD,cAMpB,CACEC,kBACAxB,qBAJWsB,CAQbpD","file":"static/js/123.d73542f6.chunk.js","sourcesContent":["\nimport React from \"react\";\nimport { Button } from 'react-bootstrap';\n\nimport { GetCommonData, GetDashboardUrl, GetCommonspData, resolveRedirectURL } from \"../store/actions/CommonAction\";\n\n\nimport { connect } from \"react-redux\";\n\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\n\n// reactstrap components\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col\n} from \"reactstrap\";\nimport { getuser } from \"utility/utility\";\nimport { func } from \"prop-types\";\n\nimport { embedSession } from 'amazon-quicksight-embedding-sdk';\n\n\n\n\nclass QuickSightTL extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      PageTitle: \"QuickSight Visualization\",\n      QuicksightUrl: []\n    };\n    this.ecode = null;\n    this.mapping = {\n      // 'TL Dashboard': {\n      //   \"DashboardId\": \"3ee52d5c-44e6-4f2a-b97d-e91d3846ba99\",\n      // }\n      'TL Dashboard': {\n        \"DashboardId\": \"5128c8a7-4b7a-413b-a6e8-95208b346a43\",\n      }\n    };\n  }\n\n\n  componentDidMount() {\n    console.log(\"getuser\", getuser());\n    let ecode = getuser().EmployeeId;\n    let RoleId = getuser().RoleId;\n    this.ecode = ecode;\n\n    let DashboardId = \"5128c8a7-4b7a-413b-a6e8-95208b346a43\"\n    let parameters = {\n      TL: this.ecode\n    }\n\n    // if (RoleId == \"13\") { //TL\n    //   DashboardId = \"5128c8a7-4b7a-413b-a6e8-95208b346a43\"\n    //   parameters = {\n    //     TL: this.ecode\n    //   }\n    // }\n    // else if (RoleId == \"13\") { //AM\n    //   DashboardId = \"a6059828-f383-4196-99df-99da9af13c74\"\n    //   parameters = {\n    //     AM: this.ecode\n    //   }\n    // }\n    // else if (RoleId == \"13\") { //MANAGER\n    //   DashboardId = \"5128c8a7-4b7a-413b-a6e8-95208b346a43\"\n    //   parameters = {\n    //     TL: this.ecode\n    //   }\n    // }\n    // else if (RoleId == \"13\") { // Agent\n    //   DashboardId = \"5128c8a7-4b7a-413b-a6e8-95208b346a43\"\n    //   parameters = {\n    //     TL: this.ecode\n    //   }\n    // }\n\n\n\n    GetDashboardUrl({\n      \"userid\": this.ecode,\n      \"DashboardId\": DashboardId\n    }, (result) => {\n      console.log('-----result', result);\n      debugger\n      if (result && result.data && result.data.QuicksightUrl) {\n        let embedURL = result.data.QuicksightUrl\n\n        var containerDiv = document.getElementById(\"embeddingContainer\");\n        var options = {\n          url: embedURL,\n          container: containerDiv,\n          parameters: parameters,\n          //sheetId : \"e7cbd8ed-294f-40d9-ac1f-dcd24cf58e2e_177b567a-079f-4e42-a7e4-bdc937454b19\",\n          scrolling: \"no\",\n          height: \"700px\",\n          width: \"100%\",\n          locale: \"en-US\",\n          footerPaddingEnabled: true\n        };\n\n        const session = embedSession(options);\n\n      }\n    });\n    try {\n      this.props.GetCommonspData({\n        limit: 10,\n        skip: 0,\n        root: \"InsertAgentIncentiveLog\",\n        c: \"L\",\n        params: [{\n          UserId: getuser().UserID,\n          SuperGroupId: 0,\n          ProductId: 0,\n          incentiveMonth: '03-03-2021',\n          Source: 'MatrixDashboard',\n          PageName: 'QuickSight',\n          EventName: DashboardId\n\n        }]\n      }, function () {\n\n      })\n    }\n    catch (e) { }\n\n  }\n\n\n\n\n\n\n  handleOpen(department) {\n    console.log('----------department', department);\n\n    GetDashboardUrl({\n      \"userid\": this.ecode,\n      \"DashboardId\": this.mapping[department]['DashboardId']\n    }, (result) => {\n      console.log('-----result', result);\n      //debugger\n      if (result && result.data && result.data.QuicksightUrl) {\n        let url = result.data.QuicksightUrl\n\n\n        // resolveRedirectURL({\n        //   url\n        // }, function (data) {\n        //   console.log(data);\n        // })\n\n\n        // let url = result.data.QuicksightUrl + \"#p.TL=\" + this.ecode\n        // let win  = window.open(url, '_blank');\n        // setTimeout(function(){\n        //   debugger;\n        //   console.log(win);\n\n        // }, 2000)\n      }\n    });\n    try {\n      this.props.GetCommonspData({\n        limit: 10,\n        skip: 0,\n        root: \"InsertAgentIncentiveLog\",\n        c: \"L\",\n        params: [{\n          UserId: getuser().UserID,\n          SuperGroupId: 0,\n          ProductId: 0,\n          incentiveMonth: '03-03-2021',\n          Source: 'MatrixDashboard',\n          PageName: 'QuickSight',\n          EventName: department\n\n        }]\n      }, function () {\n\n      })\n    }\n    catch (e) { }\n  }\n\n  render() {\n    const { QuicksightUrl, PageTitle } = this.state;\n    console.log('-------QuicksightUrl-------', QuicksightUrl);\n    return (\n      <>\n        <div className=\"content\">\n          <ToastContainer />\n          <Row>\n            <Col md=\"12\">\n              <Card>\n                <CardHeader>\n                  <Row>\n                    <Col md={10}>\n                      <CardTitle tag=\"h3\">{PageTitle}</CardTitle>\n                    </Col>\n                  </Row>\n                </CardHeader>\n                <CardBody>\n                  <div id=\"embeddingContainer\"></div>\n\n                  {/* {QuicksightUrl && QuicksightUrl.map((item) => {\n                    return <div>\n                      <h5>{item.department}</h5>\n                      <Button onClick={() => this.handleOpen(item.department)} variant=\"primary\" style={{ marginBottom: \"3.5%\" }}>Click to view dashboard</Button>\n                    </div>\n                  })} */}\n                </CardBody>\n              </Card>\n            </Col>\n          </Row>\n        </div>\n      </>\n    );\n  }\n}\n\n\nfunction mapStateToProps(state) {\n  return {\n    CommonData: state.CommonData\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  {\n    GetCommonData,\n    GetCommonspData\n\n\n  }\n)(QuickSightTL);"],"sourceRoot":""}