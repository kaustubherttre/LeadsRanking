{"version":3,"sources":["views/RealTimePanel.jsx","views/Common/ManagerHierarchy.jsx"],"names":["RealTimePanel","props","state","PageTitle","AgentData","TotalData","items","key","SelectedSupervisors","winactive","handleShow","bind","statuschange","_handleKeyDown","userAgent","schdular","columnlist","name","selector","sortable","width","cell","row","className","indexOf","Status","onClick","e","bargecall","Barge","aria-hidden","displayStatus","AgentCode","LastUpdatedOn","utc","from","ServerTime","hhmmss","TotalTalkTime","user","getuser","this","setState","getUrlParameter","EmployeeId","UserList","setInterval","document","hasFocus","window","addEventListener","event","data","type","context","GetRealTimeTotalData","results","managerid","length","join","GetRealTimeAgentData","clearInterval","hangup","sessionStorage","setItem","BargeWith","getItem","unbargecall","toUpperCase","console","log","Display","User","Pass","Realm","Asterisk_Url","WSServer","LoginAsteriskServer","target","CallingCompany","DIDNo","call","getElementById","checked","onsuccess","onerror","config","media","remote","audio","ua","uri","wsServers","authorizationUser","password","Web","Simple","on","toast","stream","setTimeout","isRegistered","nextProps","CommonData","isError","value","alldata","forEach","element","Date","push","md","answered","unanswered","totalAgents","waitingCalls","totalAvailableAgents","columns","totalcolumnlist","filterdata","tag","Control","required","id","onKeyDown","onChange","username","placeholder","_handleOnClick","pagination","striped","noHeader","highlightOnHover","dense","React","Component","connect","GetCommonData","GetCommonspData","ManagerHierarchy","nodes","expanded","UserId","RoleId","UserID","GetDataDirect","root","ManagerId","statename","result","res","JSON","stringify","replace","parse","forceUpdate","style","right","checkeditem","index","splice","onMouseLeave","onMouseOut","onMouseEnter","onButtonClick","checkModel","showNodeIcon","onCheck","onExpand","showExpandAll"],"mappings":"2VAuBMA,E,kDACJ,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXC,UAAW,iBACXC,UAAW,GACXC,UAAW,GACXC,MAAO,GACPC,IAAK,MACLC,oBAAqB,GACrBC,UAAW,GAEb,EAAKC,WAAa,EAAKA,WAAWC,KAAhB,gBAClB,EAAKC,aAAe,EAAKA,aAAaD,KAAlB,gBACpB,EAAKE,eAAiB,EAAKA,eAAeF,KAApB,gBAEtB,EAAKG,UAAY,KACjB,EAAKL,UAAY,EACjB,EAAKM,SAAW,KAChB,EAAKC,WAAa,CAChB,CACEC,KAAM,UACNC,SAAU,UACVC,UAAU,EACVC,MAAO,OACPC,KAAM,SAAAC,GAAG,OACP,yBAAKC,UAAW,CAAC,OAAQ,WAAWC,QAAQF,EAAIG,SAAW,EAAI,GAAK,QAElE,4BAAQC,QAAS,SAACC,GAAD,OAAO,EAAKC,UAAUD,EAAGL,IAAMC,UAAWD,EAAIO,MAAQ,OAAS,QAAQ,uBAAGN,UAAU,kBAAkBO,cAAY,aAKzI,CACEb,KAAM,aACNC,SAAU,YAEVC,UAAU,GAEZ,CACEF,KAAM,SACNC,SAAU,SACVC,UAAU,EAEVE,KAAM,SAAAC,GAAG,OAAI,yBAAKC,UAAW,EAAKQ,cAAcT,GAAO,mBAAoB,EAAKS,cAAcT,MAEhG,CACEL,KAAM,aACNC,SAAU,YACVC,UAAU,GAEZ,CACEF,KAAM,UACNC,SAAU,SACVC,UAAU,GAEZ,CACEF,KAAM,YACNC,SAAU,YAEZ,CACED,KAAM,UACNC,SAAU,SACVC,UAAU,GAgBZ,CACEF,KAAM,QACNC,SAAU,gBACVC,UAAU,EACVC,MAAO,QACPC,KAAM,SAAAC,GAAG,OAAI,yBAAKC,UAAWD,EAAIU,WAAYV,EAAIW,cAAgB,kBAAC,IAAD,CAAQC,KAAK,EAAMC,KAAMb,EAAIc,YAAad,EAAIW,eAA0B,SAE3I,CACEhB,KAAM,UACNC,SAAU,aACVE,MAAO,OACPD,UAAU,GAEZ,CACEF,KAAM,UACNC,SAAU,cACVE,MAAO,OACPD,UAAU,GAEZ,CACEF,KAAM,UACNC,SAAU,iBACVE,MAAO,OACPD,UAAU,GAEZ,CACEF,KAAM,UACNC,SAAU,UACVC,UAAU,GAEZ,CACEF,KAAM,iBACNC,SAAU,iBACVC,UAAU,GAEZ,CACEF,KAAM,aACNC,SAAU,gBACVC,UAAU,EACVC,MAAO,QACPC,KAAM,SAAAC,GAAG,OAAIe,YAAOf,EAAIgB,iBAE1B,CACErB,KAAM,OACNC,SAAU,iBACVC,UAAU,GAEZ,CACEF,KAAM,QACNC,SAAU,QACVC,UAAU,IAhIG,E,qDAwInB,WAEE,IAAMoB,EAAOC,cACbC,KAAKC,SAAS,CAAElC,oBAAqB,CAAyB,IAAxBmC,YAAgB,KAAaJ,EAAKK,WAAaD,YAAgB,OAAS,WAC5GF,KAAKI,YACLlC,KAAK8B,OAEc,MAAjBA,KAAK1B,WACP0B,KAAK1B,SAAW+B,YAAY,YAGE,GAAxBL,KAAKvC,MAAMO,WAAkBsC,SAASC,aACxCP,KAAKI,YAYPlC,KAAK8B,MAAO,MAEdQ,OAAOC,iBAAiB,UAAW,SAAUC,GACpB,eAAnBA,EAAMC,KAAKC,OACbZ,KAAKC,SAAS,CAAEjC,UAAW0C,EAAMC,KAAK3C,YACtCgC,KAAKhC,UAAY0C,EAAMC,KAAK3C,YAE9BE,KAAK8B,U,uBAIX,WACE,IAAIa,EAAUX,YAAgB,KACf,IAAXW,GACFC,YAAqBD,EAAS,SAAUE,GACtCf,KAAKC,SAAS,CAAErC,UAAWmD,EAAQJ,QACnCzC,KAAK8B,S,sBAIX,WACE,IAAIgB,EAAYd,YAAgB,KAC5BW,EAAUX,YAAgB,KACxBJ,EAAOC,cACTC,KAAKvC,MAAMM,oBAAoBkD,OAAS,IAC1CD,EAAYhB,KAAKvC,MAAMM,oBAAoBmD,QAG5B,IAAbF,GAA8B,IAAXH,IACrBG,EAAYlB,EAAKK,WACjBH,KAAKC,SAAS,CAAElC,oBAAqB,CAACiD,MAGxCG,YAAqBH,EAAWH,EAAS,SAAUE,GACjDf,KAAKC,SAAS,CAAEtC,UAAWoD,EAAQJ,QACnCzC,KAAK8B,S,wBAIT,SAAWd,GACTc,KAAKC,SAAS,CAAElC,oBAAqBmB,EAAEnB,wB,kCAGzC,WACEqD,cAAcpB,KAAK1B,UACG,MAAlB0B,KAAK3B,YACP2B,KAAK3B,UAAUgD,SACfC,eAAeC,QAAQ,YAAa,O,2BAIxC,SAAc1C,GAKZ,IAAI2C,EAAYF,eAAeG,QAAQ,aAAeH,eAAeG,QAAQ,aAAe,GAM5F,OALID,GAAa3C,EAAIU,YAAyD,GAA5C,CAAC,OAAQ,WAAWR,QAAQF,EAAIG,QAChEgB,KAAK0B,cAEEF,GAAa3C,EAAIU,WAAaV,EAAIG,OAEpCH,EAAIG,OAAO2C,gB,yBAGpB,SAAYzC,GACNc,KAAK3B,YACP2B,KAAK3B,UAAUgD,SACfrB,KAAK3B,UAAY,MAEnBiD,eAAeC,QAAQ,YAAa,M,uBAItC,SAAUrC,EAAGL,GACX,IACE+C,QAAQC,IAAI,kBAAoBhD,EAAIU,WAEhCS,KAAK3B,YACP2B,KAAK3B,UAAUgD,SACfrB,KAAK3B,UAAY,KACjBiD,eAAeC,QAAQ,YAAa,KAEtCD,eAAeC,QAAQ,YAAa1C,EAAIU,WAGxC,IAAIO,EAAO,CACTgC,QAAS/B,cAAUI,WACnB4B,KAAMhC,cAAUI,WAChB6B,KAAMjC,cAAUI,WAChB8B,MAAOpD,EAAIqD,aACXC,SAAU,SAAWtD,EAAIqD,aAAe,YAE1ClC,KAAKoC,oBAAoBtC,EAAM,WAK7B,GAHA8B,QAAQC,IAAI,gBAAkBhD,EAAIU,WAClCqC,QAAQC,IAAI,yBAA2BP,eAAeG,QAAQ,cAE1DH,eAAeG,QAAQ,cAAgB5C,EAAIU,WACzCS,KAAK3B,UAAW,CAClB,IAAIgE,EAAS,OAASxD,EAAIU,UACA,OAAtBV,EAAIyD,gBAAiD,cAAtBzD,EAAIyD,iBACrCD,EAAS,OAASxD,EAAI0D,OAGxBvC,KAAK3B,UAAUmE,KAAKH,KAWxBnE,KAAK8B,MAAO,WACRM,SAASmC,eAAe5D,EAAIU,aAC9Be,SAASmC,eAAe5D,EAAIU,WAAWmD,SAAU,GAEnDpB,eAAeC,QAAQ,YAAa,KACpCrD,KAAK8B,OAUP,MAAOd,O,iCAMX,SAAoBY,EAAM6C,EAAWC,GAEnC,GAAI9C,EAAM,CACR,IAAI+C,EAAS,CACXC,MAAO,CACLC,OAAQ,CAGNC,MAAO1C,SAASmC,eAAe,iBAGnCQ,GAAI,CACFC,IAAKpD,EAAKiC,KAAO,IAAMjC,EAAKmC,MAC5BkB,UAAW,CAACrD,EAAKqC,UACjBiB,kBAAmBtD,EAAKgC,QACxBuB,SAAUvD,EAAKkC,OAIfsB,QACFtD,KAAK3B,UAAY,IAAIiF,MAAIC,OAAOV,GAIhC7C,KAAK3B,UAAUmF,GAAG,aAAa,SAAUtE,GACvCuE,YAAM,qBAAsB,CAAE7C,KAAM,eAEtCZ,KAAK3B,UAAUmF,GAAG,gBAAgB,SAAUtE,OAG5Cc,KAAK3B,UAAUmF,GAAG,cAAc,SAAUtE,GACpCyD,GACFA,OAIJ3C,KAAK3B,UAAUmF,GAAG,sBAAsB,SAAUtE,GAChDuE,YAAM,mCAAoC,CAAE7C,KAAM,aAEpDZ,KAAK3B,UAAUmF,GAAG,gBAAgB,SAAUtE,GAC1CuE,YAAM,6CAA8C,CAAE7C,KAAM,UACxDgC,GACFA,OAIJ5C,KAAK3B,UAAUmF,GAAG,mBAAmB,SAAUtE,OAG/Cc,KAAK3B,UAAUmF,GAAG,oBAAoB,SAAUtE,OAGhDc,KAAK3B,UAAUmF,GAAG,aAAa,SAAUtE,OAGzCc,KAAK3B,UAAUmF,GAAG,UAAU,SAAUtE,OAGtCc,KAAK3B,UAAUmF,GAAG,aAAa,SAAUE,OAGzC1D,KAAK3B,UAAUmF,GAAG,SAAS,SAAUE,QAWzC,OALAC,WAAW,WACL3D,KAAK3B,WAAa2B,KAAK3B,UAAU4E,IAA0C,GAApCjD,KAAK3B,UAAU4E,GAAGW,gBAC3DH,YAAM,mCAAoC,CAAE7C,KAAM,WAEpD1C,KAAK8B,MAAO,KACPA,KAAK3B,Y,uCAEd,SAA0BwF,GACnBA,EAAUC,WAAWC,U,0BAK5B,SAAa7E,GACXc,KAAKC,SAAS,CAAEnC,IAAKoB,EAAEmD,OAAO2B,U,wBAIhC,SAAW9E,GAAI,IAAD,OAER+E,EAAUjE,KAAKvC,MAAME,UAEzB,GAAuB,QAAnBqC,KAAKvC,MAAMK,IACb,OAAOmG,EAET,GAAuB,SAAnBjE,KAAKvC,MAAMK,IAAgB,CAC7B,IAAIH,EAAY,GAOhB,OANAsG,EAAQC,SAAQ,SAAAC,IACF,IAAIC,KAAS,IAAIA,KAAKD,EAAQ3E,gBAAkB,IACjD,IAAyB,SAAnB2E,EAAQnF,QACvBrB,EAAU0G,KAAKF,MAGZxG,EAGT,IAAIA,EAAY,GAMhB,OALAsG,EAAQC,SAAQ,SAAAC,GACV,EAAK1G,MAAMK,IAAIiB,QAAQoF,EAAQnF,SAAW,GAC5CrB,EAAU0G,KAAKF,MAGZxG,I,4BAET,SAAeuB,GAEC,UAAVA,EAAEpB,KACJkC,KAAKC,SAAS,CAAElC,oBAAqB,CAACmB,EAAEmD,OAAO2B,W,4BAInD,SAAe9E,GAGbc,KAAKC,SAAS,CAAElC,oBAAqB,CAACuC,SAASmC,eAAe,SAASuB,W,6BAIzE,WACE,IAAMnD,EAAUX,YAAgB,KAC5BtC,EAAYoC,KAAKvC,MAAMG,UAC3B,MAAe,IAAXiD,EACK,6BAEL,yBAAK/B,UAAU,aACb,kBAAC,IAAD,MACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKwF,GAAI,GAAG,0BAAMxF,UAAU,aAAhB,aAAuClB,EAAUiD,UAC7D,kBAAC,IAAD,CAAKyD,GAAI,GAAG,0BAAMxF,UAAU,aAAhB,cAAwClB,EAAU2G,WAC9D,kBAAC,IAAD,CAAKD,GAAI,GAAG,0BAAMxF,UAAU,aAAhB,gBAA0ClB,EAAU4G,aAChE,kBAAC,IAAD,CAAKF,GAAI,GAAG,0BAAMxF,UAAU,aAAhB,cAAwClB,EAAU6G,cAC9D,kBAAC,IAAD,CAAKH,GAAI,GAAG,0BAAMxF,UAAU,aAAhB,mBAA6ClB,EAAU8G,eACnE,kBAAC,IAAD,CAAKJ,GAAI,GAAG,0BAAMxF,UAAU,aAAhB,qBAA+ClB,EAAU+G,yBAGzE,8BAIK,O,oBAKX,WAAU,IAAD,OACDC,EAAU5E,KAAKzB,WAEfoC,GADeX,KAAK6E,gBACb7E,KAAK8E,cACZ9D,EAAYd,YAAgB,KAC5BW,EAAUX,YAAgB,KAEhC,EAA6BF,KAAKvC,MAAnBC,GAAf,EAAQG,MAAR,EAAeH,WACT8D,EAAYF,eAAeG,QAAQ,aAAeH,eAAeG,QAAQ,aAAe,GAE9F,OACE,oCACE,yBAAK3C,UAAU,WACb,kBAAC,IAAD,MACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKwF,GAAG,MACN,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKA,GAAI,GACP,kBAAC,IAAD,CAAWS,IAAI,MAAMrH,IAEvB,kBAAC,IAAD,CAAK4G,GAAI,GACP,kBAAC,IAAD,CAAWS,IAAI,MAAM/E,KAAKvC,MAAMM,oBAAoBmD,SAEtD,kBAAC,IAAD,CAAKoD,GAAI,GACP,yBAAKxF,UAAU,eAEb,kBAAC,IAAKkG,QAAN,CAAcC,UAAQ,EAACrE,KAAK,OAAOpC,KAAK,QAAQ0G,GAAG,QAAQC,UAAWnF,KAAK5B,eAAgBgH,SAAU,SAAClG,GAAD,OAAO,EAAKe,SAAS,CAAEoF,SAAUnG,EAAEmD,OAAO2B,SAAUA,MAAOhE,KAAKvC,MAAM4H,SAAUC,YAAa,wBAClM,yBAAKxG,UAAU,sBACb,4BAAQG,QAAS,SAACC,GAAD,OAAO,EAAKqG,eAAerG,IAAIJ,UAAU,sCAAqC,uBAAGA,UAAU,eAAeO,cAAY,aAK7I,kBAAC,IAAD,CAAKiF,GAAI,GACP,yBAAKxF,UAAU,cACb,4BAAQA,UAAU,eAAesG,SAAUpF,KAAK7B,cAC9C,4BAAQ6F,MAAM,OAAd,OACA,4BAAQA,MAAM,QAAd,QACA,4BAAQA,MAAM,QAAd,QACA,4BAAQA,MAAM,QAAd,QACA,4BAAQA,MAAM,sCAAd,SACA,4BAAQA,MAAM,SAAd,SACA,4BAAQA,MAAM,sBAAd,YAIY,IAAbhD,GAA8B,IAAXH,EAAiB,kBAAC,IAAD,CAAkB5C,WAAY+B,KAAK/B,WAAY+F,MAAO,gBAAsC,KAEnI,4BAAQkB,GAAG,YAAYjG,QAAS,SAACC,GAAD,OAAO,EAAKwC,YAAYxC,IAAIJ,UAAwB,IAAb0C,EAAkB,OAAS,mCAAoC,uBAAG1C,UAAU,mBAAmBO,cAAY,SAAlL,kBAA6MmC,MAOnN,kBAAC,IAAD,KAEE,yBAAK1C,UAAU,cACb,kBAAC,IAAD,CACE8F,QAASA,EACTjE,KAAMA,EACN6E,YAAY,EACZC,SAAS,EACTC,UAAU,EACVC,kBAAgB,EAChBC,OAAK,QASf,2BAAOV,GAAG,gBACV,2BAAOA,GAAG,sB,GA9gBMW,IAAMC,WA6hBnBC,uBANf,SAAyBtI,GACvB,MAAO,CACLqG,WAAYrG,EAAMqG,cAMpB,CACEkC,kBACAC,qBAJWF,CAMbxI,I,mJC5iBI2I,E,kDACF,WAAY1I,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,CACT0I,MAAO,GACPzD,QAAS,GACT0D,SAAU,IALC,E,qDASnB,WAEI,IAAIC,EAA6B,GAApBtG,cAAUuG,OAAc,GAAKvG,cAAUwG,OAEpDC,YAAc,CACVC,KAAM,YACNC,UAAWL,EACXM,UAAW,aAAeN,EAC1BrC,MAAOhE,KAAKxC,MAAMwG,MAClBvG,OAAO,GACR,SAAUmJ,GAET,IACIC,EADMC,KAAKC,UAAUH,GACXI,QAAQ,YAAa,SACnCH,EAAMA,EAAIG,QAAQhH,KAAKxC,MAAMwG,MAAO,SAEpChE,KAAKC,SAAS,CAAEkG,MAAOW,KAAKG,MAAMJ,MACpC3I,KAAK8B,S,uCAEX,SAA0B6D,M,2BAK1B,WACI7D,KAAKxC,MAAMS,WAAW,CAClBF,oBAAqBiC,KAAKvC,MAAMiF,UAEpC1C,KAAKkH,gB,0BAET,SAAahI,GACToB,SAASmC,eAAe,YAAY0E,MAAMC,MAAQ,EAClD9G,SAASmC,eAAe,UAAU0E,MAAMC,MAAQ,U,wBAGpD,SAAWlI,GACPyE,YAAW,WACPrD,SAASmC,eAAe,YAAY0E,MAAMC,MAAQ,SAClD9G,SAASmC,eAAe,UAAU0E,MAAMC,MAAQ,UACjD,O,2BAIP,SAAcC,GACV,IAAQ3E,EAAY1C,KAAKvC,MAAjBiF,QACJ4E,EAAQ5E,EAAQ3D,QAAQsI,GACxBC,GAAS,GACT5E,EAAQ6E,OAAOD,EAAO,GAE1BtH,KAAKC,SAASyC,K,qBAElB,c,oBAGA,WAAU,IAAD,OACL,EAA2B1C,KAAKvC,MAAxB0I,EAAR,EAAQA,MAAR,EAAezD,QACf,OAAoB,GAAhByD,EAAMlF,OACC,KAKP,yBAAKiE,GAAG,WAAWpG,UAAU,WAAW0I,aAAcxH,KAAKyH,YAEvD,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAKnD,GAAG,KAAI,yBAAKY,GAAG,SAASpG,UAAU,SAASG,QAASe,KAAK0H,cAAlD,WACZ,kBAAC,IAAD,CAAKpD,GAAG,KAAI,2BAAO1D,KAAK,SAAS9B,UAAU,kBAAkBG,QAASe,KAAK2H,cAAczJ,KAAK8B,MAAOgE,MAAM,WAG/G,kBAAC,IAAD,KACI,kBAAC,IAAD,KAEI,yBAAKlF,UAAU,YACX,kBAAC,IAAD,CACIqH,MAAOA,EACPzD,QAAS1C,KAAKvC,MAAMiF,QACpB0D,SAAUpG,KAAKvC,MAAM2I,SACrBwB,WAAW,MACXpJ,KAAK,WACLqJ,cAAc,EACdC,QAAS,SAAApF,GAAO,OAAI,EAAKzC,SAAS,CAAEyC,aACpCqF,SAAU,SAAA3B,GAAQ,OAAI,EAAKnG,SAAS,CAAEmG,cACtC4B,eAAe,Y,GA5FhBnC,IAAMC,WA0GtBI","file":"static/js/112.18c8ee70.chunk.js","sourcesContent":["import React from \"react\";\nimport {\n  GetCommonData, GetCommonspData, GetRealTimeAgentData, GetRealTimeTotalData\n} from \"../store/actions/CommonAction\";\nimport { getUrlParameter, hhmmss, getuser } from '../utility/utility.jsx';\nimport { connect } from \"react-redux\";\nimport DataTable from 'react-data-table-component';\nimport ManagerHierarchy from './Common/ManagerHierarchy';\nimport Moment from 'react-moment';\nimport { Web } from \"sip.js\";\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n// reactstrap components\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col\n} from \"reactstrap\";\nimport { Form } from 'react-bootstrap';\n\nclass RealTimePanel extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      PageTitle: \"RealTime Panel\",\n      AgentData: [],\n      TotalData: [],\n      items: [],\n      key: \"ALL\",\n      SelectedSupervisors: [],\n      winactive: 0\n    };\n    this.handleShow = this.handleShow.bind(this);\n    this.statuschange = this.statuschange.bind(this);\n    this._handleKeyDown = this._handleKeyDown.bind(this);\n    //this.bargecall = this.bargecall.bind(this);\n    this.userAgent = null;\n    this.winactive = 0;\n    this.schdular = null;\n    this.columnlist = [\n      {\n        name: \"Barging\",\n        selector: \"Barging\",\n        sortable: true,\n        width: \"80px\",\n        cell: row =>\n          <div className={[\"BUSY\", \"RINGING\"].indexOf(row.Status) > -1 ? \"\" : \"hide\"} >\n\n            <button onClick={(e) => this.bargecall(e, row)} className={row.Barge ? \"hide\" : \"show\"}><i className=\"fa fa-volume-up\" aria-hidden=\"true\"></i></button>\n\n\n          </div>\n      },\n      {\n        name: \"Agent Code\",\n        selector: \"AgentCode\",\n\n        sortable: true,\n      },\n      {\n        name: \"Status\",\n        selector: \"Status\",\n        sortable: true,\n\n        cell: row => <div className={this.displayStatus(row) + \" RealtimeStatus\"}>{this.displayStatus(row)}</div>\n      },\n      {\n        name: \"Agent Name\",\n        selector: \"AgentName\",\n        sortable: true,\n      },\n      {\n        name: \"TL Name\",\n        selector: \"TLName\",\n        sortable: true,\n      },\n      {\n        name: \"Call Type\",\n        selector: \"CallType\",\n      },\n      {\n        name: \"Lead Id\",\n        selector: \"LeadId\",\n        sortable: true,\n      },\n      // {\n      //   name: \"Asterisk_Url\",\n      //   selector: \"Asterisk_Url\",\n      //   width: \"120px\",\n      //   sortable: true,\n      // },\n\n      // {\n      //   name: \"Last Updated On\",\n      //   selector: \"LastUpdatedOn\",\n      //   width: \"130px\",\n      //   sortable: true,\n      //   cell: row => <div className={row.AgentCode}>{row.LastUpdatedOn ? <Moment format=\"HH:mm:ss A\">{row.LastUpdatedOn}</Moment> : \"N.A\"}</div>\n      // },\n      {\n        name: \"Since\",\n        selector: \"LastUpdatedOn\",\n        sortable: true,\n        width: \"130px\",\n        cell: row => <div className={row.AgentCode}>{row.LastUpdatedOn ? <Moment utc={true} from={row.ServerTime}>{row.LastUpdatedOn}</Moment> : \"N.A\"}</div>\n      },\n      {\n        name: \"T Calls\",\n        selector: \"TotalCalls\",\n        width: \"70px\",\n        sortable: true,\n      },\n      {\n        name: \"U Dials\",\n        selector: \"UniqueDials\",\n        width: \"70px\",\n        sortable: true,\n      },\n      {\n        name: \"C Dials\",\n        selector: \"ConnectedDials\",\n        width: \"70px\",\n        sortable: true,\n      },\n      {\n        name: \"VCCount\",\n        selector: \"VCCount\",\n        sortable: true,\n      },\n      {\n        name: \"VCConnectCount\",\n        selector: \"VCConnectCount\",\n        sortable: true,\n      },\n      {\n        name: \"T TalkTime\",\n        selector: \"TotalTalkTime\",\n        sortable: true,\n        width: \"130px\",\n        cell: row => hhmmss(row.TotalTalkTime),\n      },\n      {\n        name: \"D.C.\",\n        selector: \"CallingCompany\",\n        sortable: true,\n      },\n      {\n        name: \"DIDNo\",\n        selector: \"DIDNo\",\n        sortable: true,\n      },\n\n    ];\n\n\n  }\n\n  componentDidMount() {\n\n    const user = getuser();\n    this.setState({ SelectedSupervisors: [getUrlParameter(\"m\") == \"\" ? user.EmployeeId : getUrlParameter(\"m\")] }, function () {\n      this.UserList();\n    }.bind(this));\n\n    if (this.schdular == null) {\n      this.schdular = setInterval(function () {\n        //if (!this.state.onBarge) {\n        //if ((new Date()).getHours() >= 21 || (new Date()).getHours() < 9) {\n        if (this.state.winactive == 1 || document.hasFocus()) {\n          this.UserList();\n          //this.totalList();\n        }\n        // }\n        // else {\n        //   this.UserList();\n        //   this.totalList();\n        // }\n        //}\n        // if (this.userAgent == null) {\n        //   sessionStorage.setItem(\"BargeWith\", \"\");\n        // }\n      }.bind(this), 2500)\n\n      window.addEventListener(\"message\", function (event) {\n        if (event.data.type == \"checkactive\") {\n          this.setState({ winactive: event.data.winactive })\n          this.winactive = event.data.winactive;\n        }\n      }.bind(this));\n    }\n  }\n\n  totalList() {\n    let context = getUrlParameter(\"c\");\n    if (context != \"\") {\n      GetRealTimeTotalData(context, function (results) {\n        this.setState({ TotalData: results.data });\n      }.bind(this));\n    }\n  }\n\n  UserList() {\n    let managerid = getUrlParameter(\"m\")\n    let context = getUrlParameter(\"c\")\n    const user = getuser();\n    if (this.state.SelectedSupervisors.length > 0) {\n      managerid = this.state.SelectedSupervisors.join()\n    }\n\n    if (managerid == \"\" && context == \"\") {\n      managerid = user.EmployeeId;\n      this.setState({ SelectedSupervisors: [managerid] });\n    }\n\n    GetRealTimeAgentData(managerid, context, function (results) {\n      this.setState({ AgentData: results.data });\n    }.bind(this));\n\n  }\n\n  handleShow(e) {\n    this.setState({ SelectedSupervisors: e.SelectedSupervisors });\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.schdular);\n    if (this.userAgent != null) {\n      this.userAgent.hangup();\n      sessionStorage.setItem(\"BargeWith\", \"\");\n    }\n  }\n\n  displayStatus(row) {\n    // var diff = (new Date() - new Date(row.LastUpdatedOn)) / 1000;\n    // if (diff > 60 && row.Status == \"IDLE\") {\n    //   return \"Away\";\n    // } else return row.Status;\n    let BargeWith = sessionStorage.getItem(\"BargeWith\") ? sessionStorage.getItem(\"BargeWith\") : \"\";;\n    if (BargeWith == row.AgentCode && [\"BUSY\", \"RINGING\"].indexOf(row.Status) == -1) {\n      this.unbargecall();\n    }\n    else if (BargeWith == row.AgentCode && row.Status == \"BUSY\") {\n    }\n    return row.Status.toUpperCase()\n  }\n\n  unbargecall(e) {\n    if (this.userAgent) {\n      this.userAgent.hangup();\n      this.userAgent = null;\n    }\n    sessionStorage.setItem(\"BargeWith\", \"\");\n  }\n\n\n  bargecall(e, row) {\n    try {\n      console.log(\"clicked with : \" + row.AgentCode);\n      \n      if (this.userAgent) {\n        this.userAgent.hangup();\n        this.userAgent = null;\n        sessionStorage.setItem(\"BargeWith\", \"\");\n      }\n      sessionStorage.setItem(\"BargeWith\", row.AgentCode);\n      //if (!this.state.onBarge) {\n\n      let user = {\n        Display: getuser().EmployeeId,\n        User: getuser().EmployeeId,\n        Pass: getuser().EmployeeId,\n        Realm: row.Asterisk_Url,\n        WSServer: \"wss://\" + row.Asterisk_Url + \":8089/ws\"\n      }\n      this.LoginAsteriskServer(user, function () {\n        //setTimeout(function () {\n        console.log(\"Barge with : \" + row.AgentCode);\n        console.log(\"sessionStorage with : \" + sessionStorage.getItem(\"BargeWith\"));\n\n        if (sessionStorage.getItem(\"BargeWith\") == row.AgentCode) {\n          if (this.userAgent) {\n            let target = \"*222\" + row.AgentCode;\n            if (row.CallingCompany == \"WFH\" || row.CallingCompany == \"KNOWLARITY\") {\n              target = \"*222\" + row.DIDNo;\n            }\n\n            this.userAgent.call(target);\n          }\n        }\n\n\n        // setTimeout(function () {\n        //   //this.forceUpdate();\n\n        // }.bind(this), 500);\n\n        //}.bind(this), 1000);\n      }.bind(this), function () {\n        if (document.getElementById(row.AgentCode)) {\n          document.getElementById(row.AgentCode).checked = false;\n        }\n        sessionStorage.setItem(\"BargeWith\", \"\");\n      }.bind(this));\n\n      // }\n      // else {\n      //   toast(\"Close previous call barging\", { type: 'error' });\n      //   e.target.checked = false;\n      //   return false;\n      // }\n\n\n    } catch (e) {\n\n    }\n\n  }\n\n  LoginAsteriskServer(user, onsuccess, onerror) {\n\n    if (user) {\n      var config = {\n        media: {\n          remote: {\n            //video: document.getElementById('remoteVideo'),\n            // This is necessary to do an audio/video call as opposed to just a video call\n            audio: document.getElementById('audioRemote')\n          }\n        },\n        ua: {\n          uri: user.User + '@' + user.Realm,\n          wsServers: [user.WSServer],\n          authorizationUser: user.Display,\n          password: user.Pass\n        }\n      }\n\n      if (Web) {\n        this.userAgent = new Web.Simple(config);\n\n        //let remoteElem = document.getElementById('audioRemote');\n        //let localElem = document.getElementById('audioLocal');\n        this.userAgent.on('connected', function (e) {\n          toast(\"Barging Connected!\", { type: 'success' });\n        });\n        this.userAgent.on('disconnected', function (e) {\n\n        });\n        this.userAgent.on('registered', function (e) {\n          if (onsuccess) {\n            onsuccess();\n          }\n\n        });\n        this.userAgent.on('registrationFailed', function (e) {\n          toast(\"Make sure your VPN is connected!\", { type: 'error' });\n        });\n        this.userAgent.on('unregistered', function (e) {\n          toast(\"Dialer issue please contact administrator!\", { type: 'error' });\n          if (onerror) {\n            onerror();\n          }\n\n        });\n        this.userAgent.on('userMediaFailed', function (e) {\n\n        });\n        this.userAgent.on('userMediaRequest', function (e) {\n\n        });\n        this.userAgent.on('userMedia', function (e) {\n\n        });\n        this.userAgent.on('invite', function (e) {\n\n        });\n        this.userAgent.on('addStream', function (stream) {\n\n        });\n        this.userAgent.on('ended', function (stream) {\n\n        });\n      }\n    }\n\n    setTimeout(function () {\n      if (this.userAgent && this.userAgent.ua && this.userAgent.ua.isRegistered() == false) {\n        toast(\"Make sure your VPN is connected!\", { type: 'error' });\n      }\n    }.bind(this), 10000);\n    return this.userAgent;\n  }\n  componentWillReceiveProps(nextProps) {\n    if (!nextProps.CommonData.isError) {\n\n    }\n  }\n\n  statuschange(e) {\n    this.setState({ key: e.target.value });\n\n  }\n\n  filterdata(e) {\n\n    let alldata = this.state.AgentData\n    let that = this;\n    if (this.state.key === \"ALL\") {\n      return alldata;\n    }\n    if (this.state.key === \"Away\") {\n      let AgentData = [];\n      alldata.forEach(element => {\n        var diff = (new Date() - new Date(element.LastUpdatedOn)) / 1000;\n        if (diff > 60 && element.Status === \"IDLE\") {\n          AgentData.push(element);\n        }\n      });\n      return AgentData;\n    }\n\n    let AgentData = [];\n    alldata.forEach(element => {\n      if (this.state.key.indexOf(element.Status) > -1) {\n        AgentData.push(element);\n      }\n    });\n    return AgentData;\n  }\n  _handleKeyDown(e) {\n\n    if (e.key === 'Enter') {\n      this.setState({ SelectedSupervisors: [e.target.value] });\n    }\n  }\n\n  _handleOnClick(e) {\n\n\n    this.setState({ SelectedSupervisors: [document.getElementById(\"EmpId\").value] });\n\n  }\n\n  renderTotalData() {\n    const context = getUrlParameter(\"c\");\n    let TotalData = this.state.TotalData;\n    if (context != \"\") {\n      return <div>\n\n        <div className=\"totaldata\">\n          <Row></Row>\n          <Row>\n            <Col md={2}><span className=\"totaltext\">Context : {TotalData.context}</span></Col>\n            <Col md={2}><span className=\"totaltext\">Answered : {TotalData.answered}</span></Col>\n            <Col md={2}><span className=\"totaltext\">Unanswered : {TotalData.unanswered}</span></Col>\n            <Col md={2}><span className=\"totaltext\"># Agents : {TotalData.totalAgents}</span></Col>\n            <Col md={2}><span className=\"totaltext\">Waiting Calls : {TotalData.waitingCalls}</span></Col>\n            <Col md={2}><span className=\"totaltext\"># Avail. Agents : {TotalData.totalAvailableAgents}</span></Col>\n          </Row>\n        </div>\n        <br />\n      </div>\n    }\n    else {\n      return null;\n    }\n  }\n\n\n  render() {\n    const columns = this.columnlist;\n    const totalcolumns = this.totalcolumnlist;\n    const data = this.filterdata();\n    const managerid = getUrlParameter(\"m\");\n    const context = getUrlParameter(\"c\");\n\n    const { items, PageTitle } = this.state;\n    const BargeWith = sessionStorage.getItem(\"BargeWith\") ? sessionStorage.getItem(\"BargeWith\") : \"\";\n\n    return (\n      <>\n        <div className=\"content\">\n          <ToastContainer />\n          <Row>\n            <Col md=\"12\">\n              <Card>\n                <CardHeader>\n                  <Row>\n                    <Col md={3}>\n                      <CardTitle tag=\"h4\">{PageTitle}</CardTitle>\n                    </Col>\n                    <Col md={4}>\n                      <CardTitle tag=\"h6\">{this.state.SelectedSupervisors.join()}</CardTitle>\n                    </Col>\n                    <Col md={3}>\n                      <div className=\"input-group\">\n\n                        <Form.Control required type=\"text\" name=\"EmpId\" id=\"EmpId\" onKeyDown={this._handleKeyDown} onChange={(e) => this.setState({ username: e.target.value })} value={this.state.username} placeholder={\"Enter Supervisor Id\"} />\n                        <div className=\"input-group-append\">\n                          <button onClick={(e) => this._handleOnClick(e)} className=\"btn btn-primary input-group-button\"><i className=\"fa fa-search\" aria-hidden=\"true\"></i></button>\n\n                        </div>\n                      </div>\n                    </Col>\n                    <Col md={2}>\n                      <div className=\"form-group\">\n                        <select className=\"form-control\" onChange={this.statuschange}>\n                          <option value=\"ALL\">ALL</option>\n                          <option value=\"IDLE\">IDLE</option>\n                          <option value=\"Away\">Away</option>\n                          <option value=\"BUSY\">BUSY</option>\n                          <option value=\"Lunch,Tea,Training,Meeting,Day End\">Break</option>\n                          <option value=\"PAUSE\">PAUSE</option>\n                          <option value=\"Auto Logout,LOGOUT\">LOGOUT</option>\n                        </select>\n                      </div>\n                      {\n                        (managerid == '' && context == '') ? <ManagerHierarchy handleShow={this.handleShow} value={/EmployeeId/g} ></ManagerHierarchy> : null\n                      }\n                      <button id=\"BargeWith\" onClick={(e) => this.unbargecall(e)} className={BargeWith == \"\" ? \"hide\" : \"btn btn-primary hangupwith show\"} ><i className=\"fa fa-volume-off\" aria-hidden=\"true\"></i> Hang Up With: {BargeWith}</button>\n                    </Col>\n\n                  </Row>\n\n                </CardHeader>\n\n                <CardBody>\n                  {/* {this.renderTotalData()} */}\n                  <div className=\"statusdata\">\n                    <DataTable\n                      columns={columns}\n                      data={data}\n                      pagination={false}\n                      striped={true}\n                      noHeader={true}\n                      highlightOnHover\n                      dense\n\n                    />\n\n                  </div>\n                </CardBody>\n\n              </Card>\n            </Col>\n            <audio id=\"audioRemote\"></audio>\n            <audio id=\"audioLocal\"></audio>\n          </Row>\n        </div>\n      </>\n    );\n  }\n}\n\n\nfunction mapStateToProps(state) {\n  return {\n    CommonData: state.CommonData\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  {\n    GetCommonData,\n    GetCommonspData\n  }\n)(RealTimePanel);\n\n\n\n\n","\r\nimport React, { Suspense } from 'react';\r\n\r\nimport {\r\n    GetCommonData, GetCommonspData, GetDataDirect\r\n} from \"../../store/actions/CommonAction\";\r\nimport { getUrlParameter, getuser } from '../../utility/utility.jsx';\r\n\r\n\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport 'react-checkbox-tree/lib/react-checkbox-tree.css';\r\nimport CheckboxTree from 'react-checkbox-tree';\r\n\r\n\r\nclass ManagerHierarchy extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            nodes: [],\r\n            checked: [],\r\n            expanded: [],\r\n        }\r\n        //this.onExpand = this.onExpand.bind(this);\r\n    }\r\n    componentDidMount() {\r\n\r\n        let UserId = getuser().RoleId == 2 ? 75 : getuser().UserID;\r\n\r\n        GetDataDirect({\r\n            root: \"Hierarchy\",\r\n            ManagerId: UserId,\r\n            statename: \"Hierarchy-\" + UserId,\r\n            value: this.props.value,\r\n            state: true\r\n        }, function (result) {\r\n\r\n            let str = JSON.stringify(result);\r\n            var res = str.replace(/UserName/g, \"label\");\r\n            res = res.replace(this.props.value, \"value\");\r\n\r\n            this.setState({ nodes: JSON.parse(res) });\r\n        }.bind(this));\r\n    }\r\n    componentWillReceiveProps(nextProps) {\r\n\r\n    }\r\n\r\n\r\n    onButtonClick() {\r\n        this.props.handleShow({\r\n            SelectedSupervisors: this.state.checked\r\n        });\r\n        this.forceUpdate();\r\n    }\r\n    onMouseEnter(e) {\r\n        document.getElementById(\"floating\").style.right = 0\r\n        document.getElementById(\"handle\").style.right = \"395px\"\r\n        //e.target.style.right = 0;\r\n    }\r\n    onMouseOut(e) {\r\n        setTimeout(function () {\r\n            document.getElementById(\"floating\").style.right = \"-400px\"\r\n            document.getElementById(\"handle\").style.right = \"-15px\"\r\n        }, 700);\r\n\r\n        //e.target.style.right = \"-350px\";\r\n    }\r\n    RemoveChecked(checkeditem) {\r\n        const { checked } = this.state;\r\n        let index = checked.indexOf(checkeditem);\r\n        if (index > -1) {\r\n            checked.splice(index, 1);\r\n        }\r\n        this.setState(checked);\r\n    }\r\n    onClick() {\r\n\r\n    }\r\n    render() {\r\n        const { nodes, checked } = this.state;\r\n        if (nodes.length == 0) {\r\n            return null;\r\n        }\r\n        return (\r\n\r\n\r\n            <div id=\"floating\" className=\"floating\" onMouseLeave={this.onMouseOut}>\r\n\r\n                <Row >\r\n                    <Col md=\"8\"><div id=\"handle\" className=\"handle\" onClick={this.onMouseEnter}>Filter</div></Col>\r\n                    <Col md=\"4\"><input type=\"button\" className=\"btn btn-primary\" onClick={this.onButtonClick.bind(this)} value=\"Show\" /></Col>\r\n                </Row>\r\n\r\n                <Row>\r\n                    <Col>\r\n\r\n                        <div className=\"managers\">\r\n                            <CheckboxTree\r\n                                nodes={nodes}\r\n                                checked={this.state.checked}\r\n                                expanded={this.state.expanded}\r\n                                checkModel=\"all\"\r\n                                name=\"UserName\"\r\n                                showNodeIcon={false}\r\n                                onCheck={checked => this.setState({ checked })}\r\n                                onExpand={expanded => this.setState({ expanded })}\r\n                                showExpandAll={true}\r\n                            />\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n\r\n\r\n\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default ManagerHierarchy;\r\n"],"sourceRoot":""}