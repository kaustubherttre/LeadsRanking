{"version":3,"sources":["assets/icons/copyicon.png","assets/icons/editicon.png","views/RuleEngine/Title/Title.jsx","views/RuleEngine/Navigation/NavigationLink.jsx","views/RuleEngine/Footer/Footer.jsx","utility/RuleUtils/StringUtils.jsx","views/RuleEngine/Forms/InputField.jsx","views/RuleEngine/Navigation/NavigationPanel.jsx","store/actions/RuleActions/App.jsx","store/actions/RuleActions/Ruleset.jsx","views/RuleEngine/Title/PageTitle.jsx","views/RuleEngine/Panel/Panel.jsx","views/RuleEngine/Button/Button.jsx","views/RuleEngine/Notification/Notification.jsx","Constants/RuleConstants/Messages.jsx","views/RuleEngine/Home/HomeContainer.jsx","views/RuleEngine/Tabs/Tabs.jsx","views/RuleEngine/Forms/SelectedMenuField.jsx","views/RuleEngine/Attributes/AddAttributes.jsx","rule-validations/AttributeValidation.jsx","views/RuleEngine/Attributes/AttributeDetails.jsx","views/RuleEngine/Search/Search.jsx","views/RuleEngine/Toolbar/Toolbar.jsx","views/RuleEngine/Panel/Banner.jsx","views/RuleEngine/Attributes/Attributes.jsx","views/RuleEngine/Button/ButtonGroups.jsx","rule-validations/DecisionValidation.jsx","views/RuleEngine/Tree/Tree.jsx","utility/RuleUtils/Transform.jsx","utility/RuleUtils/TreeUtils.jsx","Constants/RuleConstants/DataTypes.jsx","store/actions/RuleActions/Attributes.jsx","views/RuleEngine/Decisions/AddDecision.jsx","views/RuleEngine/Attributes/ViewAttributes.jsx","views/RuleEngine/Decisions/DecisionDetails.jsx","views/RuleEngine/Decisions/Decision.jsx","views/RuleEngine/Table/Table.jsx","rule-validations/RuleValidation.jsx","views/RuleEngine/Loader/Loader.jsx","views/RuleEngine/Validate/ValidateRules.jsx","store/actions/RuleActions/Decisions.jsx","views/RuleEngine/Error/RulesetError.jsx","views/RuleEngine/Ruleset/RulesetContainer.jsx","views/RuleEngine/Ruleset/CreateRulesetContainer.jsx","views/RuleEngine/Modal/ModalRuleEdit.jsx","views/RuleEngine/RulesList.jsx","views/RuleEngine/Booking/BookingTable.jsx","views/RuleEngine/AgentBooking/AgentBooking.jsx","views/RuleEngine/TableQuery/Query.jsx","views/RuleEngine/Routes/AppRoutes.jsx","views/RuleEngine/App/RuleEngineApp.jsx"],"names":["module","exports","Title","props","className","title","defaultProps","NavParentLink","link","onConfirm","index","visible","linkClass","onClick","e","navigate","href","iconClass","name","NavSubLink","sublinks","activeIndex","useState","active","setActive","map","key","preventDefault","handleClick","NavLinks","links","0","setVisible","history","createHashHistory","enableSublinks","push","length","FooterLinks","label","src","target","rel","isContains","str1","str2","lowercasestr1","toLowerCase","lowercasestr2","indexOf","InputField","onChange","error","value","required","readOnly","placeholder","fieldValue","setFieldValue","errorClass","undefined","readOnlyClass","type","disabled","navmenu","NavigationPanel","state","txtToSearch","handleNavLink","bind","handleNavBtn","handleRuleSearch","handleRulesListNav","this","setActiveRulesetIndex","text","setState","closedState","rulenames","loggedIn","filteredRuleNames","filter","rulesetLink","concat","sideNav","updateState","Component","flag","UPDATE_NAV_STATE","payload","uploadRuleset","ruleset","dispatch","ActionTypes","updateRulesetIndex","addRule","data","a","headers","url","config","api","base_url","axios","post","result","console","log","getRules","get","rules","editRule","ruleId","patch","editRuleDetails","toggleFactIsActive","calculateBookingIncentive","bookingId","booking","status","PageTitle","titleFlag","description","classname","TitleIcon","Panel","children","PanelBox","TitlePanel","titleClass","Button","Notification","useEffect","NotificationManager","body","heading","memo","MODIFIED_MSG","header","buttonProps","SAVE_MSG","NO_ATTRIBUTE_MSG","NO_DECISION_MSG","NO_VALIDATION_MSG","RULE_AVAILABLE_CREATE","RULE_AVAILABLE_UPLOAD","RULE_UPLOAD_ERROR","RULE_ERROR","readFile","file","cb","reader","FileReader","onload","JSON","parse","message","readAsText","HomeContainer","uploadedFilesCount","files","uploadError","fileExist","drop","allowDrop","printFile","handleUpload","chooseDirectory","some","fname","includes","replace","items","getAsFile","item","dirReader","createReader","print","readEntries","entries","j","subItem","isFile","i","dataTransfer","webkitGetAsEntry","uploadFile","isDirectory","uploadDirectory","location","login","onDrop","onDragOver","htmlFor","id","webkitdirectory","multiple","Footer","footerLinks","connect","rulesets","r","app","LOG_IN","Tabs","tabs","activeTab","tab","style","color","SelectField","options","dropDownKeyValue","option","AddAttributes","attribute","handleCancel","handleAdd","onChangeName","onChangeType","validateAttribute","Object","keys","addAttribute","cancel","attribute_types","dataTypes","primaryLabel","secondaryLabel","AttributeDetails","removeAlert","warning","showCancel","confirmBtnText","confirmBtnBsStyle","remove","onCancel","cancelAlert","focusCancelBtn","successAlert","success","handleRemove","updateAttribute","toggleActiveState","fact","newActiveState","checked","_id","val","showRuleIndex","activeAttribute","activeAttributeIndex","removeAttribute","attributes","attrList","attr","handleEdit","width","height","marginTop","marginRight","defaultChecked","isActive","Fragment","Search","search","setSearch","ToolBar","submitAlert","resetAlert","reset","successMsg","alert","handleReset","handleSearch","searchTxt","Banner","btnClass","getButtonClass","Attributes","searchCriteria","showAddAttr","bannerflag","handleAttribute","cancelAddAttribute","filterAttribute","att","Message","filteredAttributes","ButtonGroup","buttons","button","disable","validateOutcome","outcome","isEmpty","trim","operator","attProps","find","re","RegExp","test","isNaN","Number","arrValues","split","v","fieldValidationByType","nodeStyle","stroke","strokeWidth","nameStyle","fontFamily","fontSize","fontWeight","fill","attributesStyle","treeStyle","nodes","node","circle","rect","leafNode","TreeView","window","innerWidth","axis","x","y","updateWindowDimensions","addEventListener","removeEventListener","count","heightStyle","treeData","pathFunc","orientation","translate","separation","siblings","nonSiblings","scaleExtent","min","max","zoom","styles","depthCount","mapNodeName","depth","getNodeIndex","parentNode","childNode","findIndex","nodeSvgShape","shape","shapeProps","mapFactToChildren","has","isArray","join","path","mapParentNode","mapConditionsToChildren","condition","childrenNode","facts","transformRuleToTree","conditions","event","mapNodeToCondition","forEach","String","mapChildNodeToFacts","PLACEHOLDER","action","add","update","getFacts","getRuleParams","ruleParams","getFactsDataSql","datasource","response","factsButton","topLevelOptions","outcomeOptions","AddDecision","editDecision","params","editCondition","enableTreeView","enableFieldView","enableOutcomeView","f","formError","addPathflag","activeNodeDepth","field","activeFieldIndex","factData","multiSelectValue","FactsActualName","selectedNodeName","selectedNodeLevel","onChangeNewFact","onChangeOutcomeValue","handleTopNode","handleActiveNode","handleChildrenNode","handleFieldCancel","handleOutputPanel","handleOutputParams","addParams","addPath","setMultiSelected","selectedNodeDetails","then","catch","err","mapAttributeValues","mapActualName","actualname","source","validCase","decisionValidations","operationType","outcomeParams","param","pkey","pvalue","transformTreeToRule","addCondition","constructor","list","newParams","ind","topNodeName","factValue","factOptions","newNode","activeNode","slice","nodeDepth","pNode","depthIndex","childrens","lastNode","splice","depthArr","getNodeDepthDetails","obj","parent","sortedArr","sortBy","factsNodemenu","parentNodeMenu","outcomeMenus","factsOptions","opt","AttributeFieldDropDown","AttributeValues","AttributeDate","DropDownKeyType","DropDownMultiselect","factMapping","factValueType","values","multiselect","dropdownValues","enableDropDown","showDateField","multiSelect","dropdownValuesMulti","element","attributeOptions","operatorOptions","mapRuleParamKey","mapRuleParamField","ruleParamsOptions","handleRemoveOutCome","class","iterateNode","getNodeDepth","Tree","topPanel","fieldPanel","outputPanel","treePanel","addPanel","Ruleset","activeRuleset","ViewAttributes","ViewOutcomes","EXPRESSION","defautProps","DecisionDetails","removeDecisionAlert","copyDecisionAlert","removeCase","removeDecisionIndex","removeDecisions","removeOutcome","copyDecisions","copyOutcome","removeCaseAlert","renderConditions","decisionIndex","transformedData","caseIndex","handleRemoveCondition","showCase","outcomes","case","edit","handleExpand","handleRemoveConditions","handleCopyConditions","cases","updateCase","decision","decisions","Decision","showAddRuleCase","editCaseFlag","filterOutcomes","filteredOutcomes","updateCondition","outputParams","editDecisionIndex","editOutcome","handleDecisions","submit","Table","columns","processEngine","engine","Engine","allowUndefinedFacts","addOperator","jsonValue","Date","run","results","events","Promise","reject","validateRuleset","Loader","size","loading","ValidateRules","attributeItems","errorMessage","formElements","colSpan","handleValue","validateRules","ActualName","removeDecision","updateDecision","addDecision","RuleErrorBoundary","hasError","RulesetContainer","saveRuleSuccessAlert","generateFlag","saveRuleAlert","generateFile","handleSaveRule","handleTab","tabName","fileData","stringify","blob","Blob","URL","createObjectURL","document","createElement","download","click","searchKeys","criteria","indexedDecisions","groupBy","filteredFactsCriteria","filteredFactsIsActive","saveMessage","updatedFlag","operation","handleDecision","CreateRulesetContainer","product","incentiveMonth","RuleTypeMapping","onChangeDescription","addSearchKeys","handleProductChange","handleIncentiveMonthChange","handleCriteriaChange","handleOperationTypeChange","rulesetnames","insertedId","addRuleset","productId","parseInt","date","cols","rows","for","ModalRuleEdit","modalState","modalRule","month","priorityValue","priority","modal","setModal","setName","setDescription","setIncentiveMonth","setRuleId","setIsActive","setPriority","useDispatch","toggle","handleRuleEdit","details","Modal","isOpen","ModalHeader","marginLeft","ModalBody","FormGroup","Label","Input","Col","sm","Row","form","md","ModalFooter","RulesTable","rule","copyAlert","copyRuleAlert","handleCopy","len","lastPage","Math","floor","rulesArray","filteredRules","currentPage","firstPage","allPages","Array","from","_","searchText","validSearch","productMap","productSelected","useTimeFrame","handleFirst","handleLast","handlePrev","handleNext","handleSearchChange","handleUseTimeFrame","filterAndSetState","innerText","next","prev","ruleToBeCopied","copyName","uploadItem","assign","filterRules","isFiltered","lowerIndex","historyProps","itemScope","editIcon","margin","copyIcon","setCopyAlert","Pagination","First","Prev","abs","Item","Next","Last","RulesList","Details","responseData","ape","weight","amount","BookingTable","submitClicked","searchResponse","searchData","onChangeBookingId","handleSubmit","rulesApplied","bookingIdStatus","onSubmit","backgroundColor","borderRadius","border","textAlign","AgentBooking","agentId","alertInvalidAgentId","alertInvalidDate","bookings","handleAgentIdChange","startDate","endDate","res","colspan","Query","query","handleQueryChange","padding","AppRoutes","exact","component","RuleEngineApp","handleAddRulesets","unlisten","closednav","navState","ownProps","App"],"mappings":"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","file":"static/js/28.da501c80.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/copyicon.f5e4fc4a.png\";","module.exports = __webpack_public_path__ + \"static/media/editicon.b54e56b3.png\";","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Title = (props) => {\n\n  return (\n    <div className=\"header-container\">\n      <div>\n        {props.title}\n      </div>\n        \n    </div>\n)};\n\nTitle.defaultProps = {\n  title: 'Json Rule Editor',\n};\n\nTitle.propTypes = {\n  title: PropTypes.string,\n}\n\nexport default Title;","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { createHashHistory } from 'history';\n\nconst NavLinks = (props) => {\n    const { links } = props;\n    const [visible, setVisible] = useState({0: true});\n    const history = createHashHistory();\n    \n    \n    const enableSublinks = (e, index, navigate) => {\n      e.preventDefault();\n      setVisible({[index]: !visible[index]});\n      if (navigate) {\n        history.push(navigate);\n      }\n      \n    }\n\n    return (links.map((link, index) => (\n    <ul className=\"link-container\" key={link.name + props.activeIndex}>\n        <NavParentLink link={link} onConfirm={enableSublinks} index={index} visible={visible[index]} />\n        { link.sublinks && link.sublinks.length > 0 && \n          <NavSubLink sublinks={link.sublinks} visible={visible[index]} onConfirm={props.onConfirm} activeIndex={props.activeIndex}/>\n        }\n    </ul>)));\n};\n\nconst NavParentLink = ({ link, onConfirm, index, visible }) => {\n    return (\n    <li className={link.linkClass} onClick={(e) => onConfirm(e, index, link.navigate)}>\n      <a href=\"\" className={`link ${visible ? 'active': ''}`} >\n        <span className={link.iconClass} />\n        <span className=\"text\">{link.name}</span>\n      </a>\n    </li>);\n};\n\nNavParentLink.defaultProps = {\n  link: {},\n  onConfirm: () => undefined,\n  index: 0,\n  visible: false,\n};\n\nNavParentLink.propTypes = {\n  link: PropTypes.object,\n  onConfirm: PropTypes.func,\n  index: PropTypes.number,\n  visible: PropTypes.bool,\n};\n\n\nconst NavSubLink = ({ sublinks, visible, onConfirm, activeIndex }) => {\n\n    const [active, setActive] = useState(sublinks[activeIndex]);\n\n    const handleClick = (e, link) => {\n      e.preventDefault();\n      setActive(link);\n      onConfirm(link);\n    }\n\n    return (sublinks.map(link => \n    (<ul className={`sublink-container ${visible ? 'visible' : ''}`} key={link}>\n    <li className={`sublink ${visible ? 'visible' : ''} ${active === link ? 'active' : ''}`} onClick={(e) => handleClick(e, link)}>\n      <a href=\"\" className=\"link\">\n          <span className=\"text\">{link}</span>\n      </a>\n    </li>\n  </ul>)));\n}\n\nexport default NavLinks;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst FooterLinks = (props) => {\n    return (\n        props.links && props.links.map(link => (\n            <div key={link.label}>\n                {link.src &&\n                    <a href={link.src} target='_blank' rel=\"noopener noreferrer\">{link.label} </a>\n                }\n                {!link.src &&\n                    <span>{link.label}</span>\n                }\n            </div>\n        ))\n    )\n};\n\nFooterLinks.defaultProps = {\n    links: [],\n};\n\nFooterLinks.propTypes = {\n    links: PropTypes.array\n};\n\nexport default FooterLinks;\n\n","\n\nexport const isContains = (str1, str2) => {\n    const lowercasestr1 = str1.toLowerCase();\n    const lowercasestr2 = str2.toLowerCase();\n    return lowercasestr1.indexOf(lowercasestr2) > -1;\n}","import React, {useState} from 'react';\nimport PropTypes from 'prop-types';\n\nconst InputField = (props) => {\n    const {label, onChange, error, value, required, readOnly, placeholder} = props;\n    const [fieldValue, setFieldValue] = useState(value);\n\n    let errorClass = error ? 'error': undefined;\n    let readOnlyClass = readOnly ? 'readOnly': undefined;\n\n    const change = (e) => {\n        setFieldValue(e.target.value);\n        onChange(e);\n        if (required && e.target.value) {\n            errorClass = undefined;\n        }\n    }\n\n    return (<div className=\"form-field\">\n        {label && <label>{label}</label>}\n        <input type=\"text\" onChange={change} value={fieldValue} className={`${errorClass} ${readOnlyClass}`} disabled={readOnly} placeholder={placeholder} />\n    </div>);\n};\n\n\nInputField.defaultProps = {\n    label: undefined,\n    onChange: () => undefined,\n    error: undefined,\n    value: '',\n    required: false,\n    readOnly: false,\n    placeholder: '',\n  };\n  \n  InputField.propTypes = {\n    label: PropTypes.string,\n    onChange: PropTypes.func,\n    error: PropTypes.string,\n    value: PropTypes.any,\n    required: PropTypes.bool,\n    readOnly: PropTypes.bool,\n    placeholder: PropTypes.string,\n};\n\n\nexport default InputField;","import React, { Component } from 'react';\nimport NavLinks from './NavigationLink';\nimport PropTypes from 'prop-types';\nimport { createHashHistory } from 'history';\nimport FooterLinks from '../Footer/Footer';\nimport footerLinks from '../../../data-objects/FooterLinks.json';\nimport { isContains } from '../../../utility/RuleUtils/StringUtils';\nimport InputField from '../Forms/InputField';\n\nconst navmenu = [\n    { name: 'Create Rules', navigate: './CreateRuleset', iconClass: \"icon fa fa-plus-square-o\", linkClass: 'navmenu'},\n    { name: 'Rules List', navigate: './RulesList', iconClass: \"icon fa fa-list\", linkClass: 'navmenu' },\n    { name: 'Process Booking', navigate: './Booking', iconClass: \"icon fa fa-spinner\", linkClass: 'navmenu' },\n    { name: 'Agent Bookings', navigate: './AgentBooking', iconClass: \"icon fa fa-list\", linkClass: 'navmenu' },\n    { name: 'Upload Rules', navigate: './', iconClass: \"icon fa fa-cloud-upload\", linkClass: 'navmenu' },\n    { name: 'Query DB', navigate: './Query', iconClass: \"icon fa fa-database\", linkClass: 'navmenu' },\n];\n\nclass NavigationPanel extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            links: [],\n            txtToSearch:''\n        };\n        this.handleNavLink = this.handleNavLink.bind(this);\n        this.handleNavBtn = this.handleNavBtn.bind(this);\n        this.handleRuleSearch = this.handleRuleSearch.bind(this);\n        this.handleRulesListNav = this.handleRulesListNav.bind(this);\n    }\n\n    handleNavBtn() {\n        const history = createHashHistory();\n        history.push('./CreateRuleset');\n    }\n\n    handleNavLink(name) {\n        const history = createHashHistory();\n        this.props.setActiveRulesetIndex(name);\n        history.push('./Ruleset');\n\n    }\n    handleRuleSearch(e){\n        let text = e.target.value;\n        this.setState({ txtToSearch: text });\n    }\n\n    handleRulesListNav(e){\n        e.preventDefault();\n        const history = createHashHistory();\n        history.push('./RulesList');\n    }\n    \n    handleProcessBookingNav(e){\n        e.preventDefault();\n        const history = createHashHistory();\n        history.push('./Booking');\n    }\n\n    render() {\n        const { closedState, loggedIn, rulenames } = this.props;\n        const { txtToSearch } = this.state;\n\n        const filteredRuleNames = rulenames.filter(name => isContains(name, txtToSearch));\n        \n        let rulesetLink = filteredRuleNames.length > 0 ?\n         [{ name: 'Ruleset', sublinks: filteredRuleNames, iconClass:\"rules-icon\", linkClass: 'link-heading'}] : [];\n\n        rulesetLink = rulesetLink.concat(navmenu);\n\n        //let sideNav = loggedIn && closedState ? 'open' : 'closed';\n        let sideNav = closedState ? 'open' : 'closed';\n\n        return (\n            <div className={`nav-container ${!closedState ? 'open': 'closed'}`}>\n                <div className=\"sidebar-navigation\">\n                    <div className=\"menu-bar\">\n                        <a href=\"\" onClick={(e) => { e.preventDefault();  this.props.updateState(sideNav)}}> <span className=\"close-icon fa fa-reorder\" ></span></a>\n                    </div>\n                   \n                   \n                </div>\n                {/* <div className=\"ruleslist-link\">\n                       <a href=\"\" onClick={(e) => this.handleRulesListNav(e)}> RulesList</a>\n                       <a href=\"\" onClick={(e) => this.handleProcessBookingNav(e)}> Process Booking</a>\n\n                    </div> */}\n                \n                {!closedState && <div className=\"links-section\">\n                    <InputField\n                        value={this.state.txtToSearch}\n                        onChange={this.handleRuleSearch}\n                        placeholder=\"Search\"\n                    />\n                    <div>\n                        <NavLinks \n                            links={rulesetLink}\n                            onConfirm={this.handleNavLink}\n                            activeIndex={this.props.activeIndex}\n                        />\n                    </div>\n                 </div>\n                }\n            </div>\n        )\n    }\n}\n\nNavigationPanel.defaultProps = {\n    closedState: false,\n    rulenames: [],\n    setActiveRulesetIndex: () => false,\n    loggedIn: false,\n    updateState: () => false,\n    activeIndex: 0,\n};\n\nNavigationPanel.propTypes = {\n    closedState: PropTypes.bool,\n    rulenames: PropTypes.array,\n    setActiveRulesetIndex: PropTypes.func,\n    loggedIn: PropTypes.bool,\n    updateState: PropTypes.func,\n    activeIndex: PropTypes.number,\n}\n\nexport default NavigationPanel;","import { UPDATE_NAV_STATE, LOG_IN } from './ActionTypes';\n\n\nexport function updateState(flag) {\n    return ({\n        type: UPDATE_NAV_STATE,\n        payload: { flag }\n    });\n}\n\nexport function login() {\n    return ({\n        type: LOG_IN,\n    });\n}\n\n\n","import * as ActionTypes from './ActionTypes';\nimport { updateState } from './App';\nimport config from \"../../../config.jsx\";\nimport axios from 'axios';\n\nexport const uploadRuleset = (ruleset)  => (dispatch) => {\n    dispatch(updateState('open'));\n    return dispatch({\n        type: ActionTypes.UPLOAD_RULESET,\n        payload: { ruleset }\n    });\n}\n\nexport const addRuleset = (payload) => (dispatch) => {\n    dispatch(updateState('open'));\n    return dispatch({\n        type: ActionTypes.ADD_RULESET,\n        payload: payload\n    });\n}\n\nexport const updateRulesetIndex = (name) => {\n    return ({\n        type: ActionTypes.UPDATE_RULESET_INDEX,\n        payload: { name }\n    })\n}\n\nexport const addRulesetsFromDb = (name) => {\n    return ({\n        type: ActionTypes.ADD_RULESETS_DB,\n        payload: name\n    })\n}\n\nexport const addFactsValuesSql = (factData) => {\n   \n    return ({\n        type: ActionTypes.ADD_FACTS_DATA_SQL,\n        payload: factData\n    })\n}\n\nexport const editRuleDetailsAction = (details) => {\n    console.log('details', details);\n    return ({\n        type: ActionTypes.EDIT_RULE_DETAILS,\n        payload: details\n    })\n}\n\nexport const addRule = async (data) => {\n    try{\n        let headers = {'Content-Type': 'application/json'};\n        let url = config.api.base_url + '/ruleengine/addRule';\n        let result = await axios.post(url, data, { headers: headers} );\n        return result;\n    } catch (err) {\n        console.log(err);\n    }\n}\n\nexport const getRules = async () => {\n    try {\n        let url = config.api.base_url + '/ruleengine/getRules';\n        let rules = await axios.get(url);\n        return rules.data.data;\n    } catch(err) {\n        console.log(err);\n    }\n}\n\nexport const editRule = async (data, ruleId) => {\n    try{\n        let headers = {'Content-Type': 'application/json'};\n        let url = config.api.base_url + '/ruleengine/editRule/' + ruleId;\n        console.log('url edit', url);\n        let result = await axios.patch(url, data, { headers: headers} );\n        return result;\n    } catch (err) {\n        console.log(err);\n    }\n}\n\nexport const editRuleDetails = async (data, ruleId) => {\n    try{\n        let headers = {'Content-Type': 'application/json'};\n        let url = config.api.base_url + '/ruleengine/editRuleDetails/' + ruleId;\n        console.log('url edit', url);\n        let result = await axios.patch(url, data, { headers: headers} );\n        return result;\n    } catch (err) {\n        console.log(err);\n    }\n}\n\nexport const toggleFactIsActive = async (data) => {\n    try{\n        let headers = {'Content-Type': 'application/json'};\n        let url = config.api.base_url + '/ruleengine/toggleFactIsActive/';\n        console.log('url edit', url);\n        let result = await axios.post(url, data, { headers: headers} );\n        return result;\n    } catch (err) {\n        console.log(err);\n    }\n}\n\nexport const calculateBookingIncentive = async (bookingId) => {\n    try {\n        let url = config.api.base_url + '/ruleengine/bookingIncentive/?leadid='+ bookingId;\n        let booking = await axios.get(url);\n        if(booking !== null &&\n            booking.data !== undefined &&\n                booking.data.status !== undefined &&\n                    booking.data.status == 200) {\n            return booking.data.data;\n        } else {\n            return null;\n        }\n    } catch(err) {\n        console.log(err);\n        return null;\n    }\n}\n\nexport const resolveRules = async (data) => {\n    try{\n        let headers = {'Content-Type': 'application/json'};\n        let url = config.api.base_url + '/ruleengine/resolveRules';\n        let result = await axios.post(url, data, { headers: headers} );\n        return result;\n    } catch (err) {\n        console.log(err);\n    }\n}","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst PageTitle = ({name, titleFlag, description }) => {\n    \n    return (<div className=\"page-title\">\n        {titleFlag && <TitleIcon />}\n        <div>\n           <h1>{name} | {description}</h1>\n        </div>\n    </div>);\n};\n\nPageTitle.defaultProps = {\n    name: '',\n    description: '',\n    classname: '',\n    titleFlag: false,\n};\n\nPageTitle.propTypes = {\n    name: PropTypes.string,\n    classname: PropTypes.string,\n    titleFlag: PropTypes.bool,\n    description: PropTypes.string,\n}\n\n\nexport const TitleIcon = ({iconClass}) => {\n\n    return (<div className=\"icon-card\">\n        <span className={iconClass} />\n    </div>);\n};\n\nTitleIcon.defaultProps = {\n    iconClass: '',\n};\n\nTitleIcon.propTypes = {\n    iconClass: PropTypes.string,\n}\n\nexport default PageTitle;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { TitleIcon } from '../Title/PageTitle';\n\nconst Panel = (props) => {\n\n    return (<div className=\"panel-wrapper\">\n        {props.title && <h2>{props.title}</h2>}\n        {props.children}\n    </div>);\n};\n\n\n\n\nPanel.defaultProps = {\n    title: undefined,\n    children: {},\n  };\n  \nPanel.propTypes = {\n    title: PropTypes.string,\n    children: PropTypes.any,\n};\n\n\nexport const PanelBox = (props) => {\n\n    return (<div className={`panel-box-wrapper ${props.className}-type`}>\n        {props.children}\n    </div>);\n}\n\n\nPanelBox.defaultProps = {\n    children: {},\n    className: '',\n  };\n  \n  PanelBox.propTypes = {\n    children: PropTypes.any,\n    className: PropTypes.string,\n};\n\nexport const TitlePanel = (props) => {\n\n    return (<div className={\"title-panel\"}>\n        <div className=\"title\">\n        {props.titleClass && \n            <div>\n                {props.titleClass && <TitleIcon iconClass={props.titleClass} name={props.title} />}\n            </div>}\n        <h3>{props.title}</h3>\n        </div>\n        {props.children}\n    </div>);\n}\n\n\nTitlePanel.defaultProps = {\n    children: {},\n    titleClass: '',\n    title: '',\n  };\n  \nTitlePanel.propTypes = {\n    children: PropTypes.any,\n    titleClass: PropTypes.string,\n    title: PropTypes.string,\n};\n\n\nexport default Panel;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Button = ({label, onConfirm, classname, type, disabled }) => {\n\n    return (<div className=\"btn-container\">\n        <button className={`btn ${classname}`} type={type} onClick={onConfirm} disabled={disabled} >{label}</button>\n    </div>);\n};\n\n\n\n\nButton.defaultProps = {\n    classname: 'primary-btn',\n    onConfirm: () => undefined,\n    label: '',\n    type: 'button',\n    disabled: false, \n  };\n  \nButton.propTypes = {\n    classname: PropTypes.string,\n    onConfirm: PropTypes.func,\n    label: PropTypes.string,\n    type: PropTypes.string,\n    disabled: PropTypes.bool,\n};\n\n\nexport default Button;","import React, { useEffect, memo } from 'react';\nimport PropTypes from 'prop-types';\nimport 'react-notifications/lib/notifications.css';\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\n\nconst Notification = (props) => {\n\n    useEffect(() => {\n        NotificationManager[props.type](props.body, props.heading, 5000);\n    })\n\n    return (<NotificationContainer/>);\n\n};\n\nNotification.defaultProps = {\n    body: '',\n    heading: '',\n    type: 'warning',\n};\n\nNotification.propTypes = {\n    body: PropTypes.string,\n    heading: PropTypes.string,\n    type: PropTypes.string,\n};\n\nexport default memo(Notification);","const NO_CHANGES_HEADER = 'No Changes';\nconst NO_CHANGES_BODY = 'You havent modified this ruleset. Nothing to submit!!!'\nconst BUTTON_PROPS_NO_CHANGES = {label: 'Generate Json'};\nconst BUTTON_PROPS_SAVE_CHANGES = {label: 'Save Rule'};\nexport const NO_CHANGES_MSG = {header: NO_CHANGES_HEADER, body: NO_CHANGES_BODY, type: 'warning-panel'};\n\nconst MODIFIED_HEADER = 'Save Ruleset Json';\nconst SAVE_HEADER = 'Submit Ruleset';\nconst MODIFIED_BODY = 'You have created / modified this ruleset. Do you want to save these changes into ruleset file?'\nconst SAVE_BODY = 'You have created / modified this ruleset. Do you want to save these changes?'\nexport const MODIFIED_MSG = {header: MODIFIED_HEADER, body: MODIFIED_BODY, type: 'submit-panel', buttonProps: BUTTON_PROPS_NO_CHANGES,};\nexport const SAVE_MSG = {header: SAVE_HEADER, body: SAVE_BODY, type: 'submit-panel', buttonProps: BUTTON_PROPS_SAVE_CHANGES,};\n\nconst NO_ATTRIBUTE_HEADER = 'No Facts';\nconst NO_ATTRIBUTE_BODY = 'There is no facts available in the selected ruleset.'\nconst BUTTON_PROPS_ATTRIBUTE = {label: 'Create Facts'};\nexport const NO_ATTRIBUTE_MSG = {header: NO_ATTRIBUTE_HEADER, body: NO_ATTRIBUTE_BODY, buttonProps: BUTTON_PROPS_ATTRIBUTE, type: 'warning-panel'};\n\n\nconst NO_DECISION_HEADER = 'No Decisions';\nconst NO_DECISION_BODY = 'There is no decisions available in the selected ruleset.'\nconst BUTTON_PROPS_DECISION = {label: 'Create Decisions'};\nexport const NO_DECISION_MSG = {header: NO_DECISION_HEADER, body: NO_DECISION_BODY, buttonProps: BUTTON_PROPS_DECISION, type: 'warning-panel'};\n\n\nconst NO_VALIDATION_BODY = 'There is no decisions available in the selected ruleset to validate.'\nexport const NO_VALIDATION_MSG = {header: NO_DECISION_HEADER, body: NO_VALIDATION_BODY, type: 'warning-panel'};\n\nexport const RULE_AVAILABLE_CREATE = { type: 'warning', heading: 'This rule name is already exist' };\n\nexport const RULE_AVAILABLE_UPLOAD = { type: 'warning', heading: 'Couldnt upload the filename <name>' };\n\nexport const RULE_UPLOAD_ERROR = { type: 'error', heading: 'Problem occured when uploading the files. Try again!!'};\n\nexport const RULE_ERROR = { type: 'error', heading: 'Sorry!, some problem occured. Please try again'};","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { login } from '../../../store/actions/RuleActions/App';\nimport { uploadRuleset } from '../../../store/actions/RuleActions/Ruleset';\nimport { TitlePanel } from '../Panel/Panel';\nimport Button from '../Button/Button';\nimport { createHashHistory } from 'history';\nimport FooterLinks from '../Footer/Footer';\nimport footerLinks from '../../../data-objects/FooterLinks.json';\nimport { includes } from 'lodash/collection';\nimport Notification from '../Notification/Notification.jsx';\nimport { RULE_AVAILABLE_UPLOAD, RULE_UPLOAD_ERROR } from '../../../Constants/RuleConstants/Messages';\n\n\nfunction readFile(file, cb) {\n  // eslint-disable-next-line no-undef\n  var reader = new FileReader();\n  reader.onload = () => {\n    try {\n      cb(JSON.parse(reader.result), file.name);\n    } catch (e) {\n      cb(undefined, undefined, e.message);\n    }\n  }\n  return reader.readAsText(file);\n}\n\nclass HomeContainer extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = { uploadedFilesCount: 0, files: [], ruleset: [], uploadError: false, fileExist: false, message: {}};\n        this.drop = this.drop.bind(this);\n        this.allowDrop = this.allowDrop.bind(this);\n        this.printFile = this.printFile.bind(this);\n        this.handleUpload = this.handleUpload.bind(this);\n        this.chooseDirectory = this.chooseDirectory.bind(this);\n    }\n\n    allowDrop(e) {\n      e.preventDefault();\n    }\n\n    printFile(file, name, error) {\n      if (error) {\n        this.setState({ uploadError: true, fileExist: false, message: RULE_UPLOAD_ERROR });\n      } else {\n        const isFileAdded = this.state.files.some(fname => fname === name) || includes(this.props.rulenames, file.name);\n        if (!isFileAdded) {\n          const files = this.state.files.concat([name]);\n          const ruleset = this.state.ruleset.concat(file);\n          this.setState({files, ruleset, fileExist: false });\n        } else {\n          const message = { ...RULE_AVAILABLE_UPLOAD, heading: RULE_AVAILABLE_UPLOAD.heading.replace('<name>', file.name) };\n          this.setState({ fileExist: true, message });\n        }\n      }\n      \n    }\n\n    uploadFile(items, index) {\n      const file = items[index].getAsFile();\n      readFile(file, this.printFile);\n    }\n\n    uploadDirectory(item) {\n      var dirReader = item.createReader();\n      const print = this.printFile;\n      dirReader.readEntries(function(entries) {\n        for (let j=0; j<entries.length; j++) {\n          let subItem = entries[j];\n          if (subItem.isFile) {\n            subItem.file((file) => {\n              readFile(file, print);\n            });\n          }\n        }\n      });\n   }\n\n   // this method is not required. its to select files from local disk.\n   /* chooseFile() {\n    const file = document.getElementById(\"uploadFile\");\n    if (file && file.files) {\n      for (let i = 0; i < file.files.length; i++) {\n        readFile(file.files[i], this.printFile);\n      }\n    }\n   } */\n\n   chooseDirectory(e) {\n    const files = e.target.files;\n    if (files) {\n      for (let i = 0; i < files.length; i++) {\n        if (files[i].type === 'application/json') {\n          readFile(files[i], this.printFile);\n        }\n      }\n    }\n   }\n\n    drop(e) {\n      e.preventDefault();\n      const items = e.dataTransfer.items;\n      if (items) {\n        for (let i = 0; i < items.length; i++) {\n          let item = items[i].webkitGetAsEntry();\n          if (item.isFile) {\n            this.uploadFile(items, i);\n          } else if (item.isDirectory) {\n              this.uploadDirectory(item);\n            }\n          }\n        }\n    }\n    \n    handleUpload() {\n      if(this.state.ruleset.length > 0) {\n        this.props.uploadRuleset(this.state.ruleset);\n        this.navigate('./Ruleset');\n      }\n    }\n\n    navigate(location)  {\n      const history = createHashHistory();\n      this.props.login();\n      this.props.history.push('/CreateRuleset')\n      \n    }\n\n    render() {\n      const { fileExist, uploadError, message } = this.state;\n      const title = this.props.loggedIn ? \"Upload Rules\" : \"Create / Upload Rules\";\n      return <div className=\"home-container\">\n        <div className=\"single-panel-container\">\n        { (fileExist || uploadError) && <Notification body={message.body} heading={message.heading} type={message.type} /> }\n          <TitlePanel title={title} titleClass=\"fa fa-cloud-upload\">\n            <div className=\"upload-panel\">\n              <div className=\"drop-section\" onDrop={this.drop} onDragOver={this.allowDrop}>\n                  <div><label htmlFor=\"uploadFile\">Choose Ruleset directory<input id=\"uploadFile\" type=\"file\" onChange={this.chooseDirectory} webkitdirectory=\"true\" multiple/></label> or Drop Files</div>\n                  {this.state.files.length > 0 && <div className=\"file-drop-msg\">{`${this.state.files.length} json files are dropped!`}</div>}\n              </div>\n            </div>\n            <div className=\"btn-group\">\n              <Button label={\"Upload\"} onConfirm={this.handleUpload} classname=\"primary-btn\" type=\"button\" />\n              {!this.props.loggedIn && <Button label={\"Create\"} onConfirm={() => this.navigate('CreateRuleset')} classname=\"primary-btn\" type=\"button\" disabled={this.state.files.length > 0} />}\n            </div>\n          </TitlePanel>\n        </div>\n        {!this.props.loggedIn && <div className='footer-container home-page'>\n           <FooterLinks links={footerLinks} />\n        </div>}\n      </div>\n    }\n}\n\nHomeContainer.propTypes = {\n  ruleset: PropTypes.array,\n  uploadRuleset: PropTypes.func,\n  login: PropTypes.func,\n  loggedIn: PropTypes.bool,\n  rulenames: PropTypes.array,\n}\n\nHomeContainer.defaultProps = {\n  rulenames: [],\n  ruleset: [],\n  uploadRuleset: () => false,\n  login: () => false,\n  loggedIn: false,\n}\n\nconst mapStateToProps = (state) => ({\n  rulenames: state?.ruleset?.rulesets?.map(r => r.name),\n  loggedIn: state?.app?.loggedIn,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n\n  login: () => dispatch(login()),\n  uploadRuleset: (ruleset) =>  dispatch(uploadRuleset(ruleset)),\n\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(HomeContainer);","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nconst Tabs = ({tabs, onConfirm, activeTab}) => {\n\n    const [active, setActive] = useState(activeTab);\n\n    const setActiveTab = (value) => {\n      setActive(value);\n      onConfirm(value);\n    }\n\n    return (<div className=\"tab-container\">\n        { tabs.map(tab => (\n           <div key={tab.name} className={`tab ${tab.name === active ? 'active' : ''}`} onClick={ () => setActiveTab(tab.name) }>\n               <h6 style={{color: 'black'}}>{tab.name}</h6> \n           </div> \n        )) }\n    </div>);\n};\n\nTabs.defaultProps = ({\n    tabs: [],\n    onConfirm: () => undefined,\n    activeTab: '',\n});\n\nTabs.propTypes = ({\n    tabs: PropTypes.array,\n    onConfirm: PropTypes.func,\n    activeTab: PropTypes.string\n});\n\nexport default Tabs;\n\n","import React, {useState} from 'react';\nimport PropTypes from 'prop-types';\n\nconst SelectField = ({\n        label,\n        onChange,\n        error,\n        required,\n        options,\n        value,\n        readOnly,\n        dropDownKeyValue\n    }) => {\n\n    const [fieldValue, setFieldValue] = useState(value);\n\n    let errorClass = error ? 'error': undefined;\n    let readOnlyClass = readOnly ? 'readOnly': undefined;\n\n    const change = (e) => {\n        setFieldValue(e.target.value);\n        onChange(e);\n        if (required && e.target.value) {\n            errorClass = undefined;\n        }\n    }\n\n    return (<div className=\"form-field\">\n        {label && <label>{label}</label>}\n        <select onChange={change} className={`form-field-drpdwn ${errorClass} ${readOnlyClass}`} value={fieldValue} disabled={readOnly}>\n          <option value=\"-1\">Please select...</option>\n\n            {options.length > 0 && dropDownKeyValue !== true &&\n                options.map(option => (\n                    <option key={option} value={option}>{option}</option>\n                ))\n            }\n            {options.length > 0 && dropDownKeyValue === true &&\n                options.map(option => (\n                    <option key={option.value} value={option.key}>{option.value}</option>\n                ))\n            }\n        </select>\n    </div>);\n};\n\n\nSelectField.defaultProps = {\n    label: undefined,\n    onChange: () => undefined,\n    error: undefined,\n    required: false,\n    options: [],\n    value: '',\n    readOnly: false,\n    dropDownKeyValue: false\n  };\n  \n  SelectField.propTypes = {\n    label: PropTypes.string,\n    onChange: PropTypes.func,\n    error: PropTypes.string,\n    required: PropTypes.bool,\n    options: PropTypes.array,\n    value: PropTypes.string,\n    readOnly: PropTypes.bool,\n    dropDownKeyValue: PropTypes.bool\n};\n\n\nexport default SelectField;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Panel from '../Panel/Panel';\nimport InputField from '../Forms/InputField';\nimport SelectField from '../Forms/SelectedMenuField';\nimport Button from '../Button/Button';\nimport attributeValidations from '../../../rule-validations/AttributeValidation';\nimport dataTypes from '../../../data-objects/Operator.json';\n\nclass AddAttributes extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {error: {}, name: props.attribute.name, type: props.attribute.type};\n        this.handleCancel = this.handleCancel.bind(this);\n        this.handleAdd = this.handleAdd.bind(this);\n        this.onChangeName = this.onChangeName.bind(this);\n        this.onChangeType = this.onChangeType.bind(this);\n    }\n\n    onChangeName(e) {\n       this.setState({name: e.target.value});\n    }\n\n    onChangeType(e) {\n        this.setState({type: e.target.value});\n    }\n\n    handleAdd(e) {\n        e.preventDefault();\n        const error = attributeValidations({name: this.state.name, type: this.state.type});\n        \n        if (Object.keys(error).length > 0) {\n            this.setState({error});\n        } else {\n            this.props.addAttribute({name: this.state.name, type: this.state.type});\n        }\n    }\n\n    handleCancel() {\n        this.props.cancel();\n    }\n    \n    render() {\n        const { buttonProps } = this.props;\n        const attribute_types = Object.keys(dataTypes);\n        return (<Panel>\n            <form>\n                <div className=\"add-attribute-wrapper\">\n                    <div className='form-groups-inline'>\n                        <InputField label=\"Name\" onChange={this.onChangeName} value={this.props.attribute.name} error={this.state.error.name} />\n                        <SelectField label=\"Type\" options={attribute_types} onChange={this.onChangeType} value={this.props.attribute.type} error={this.state.error.type} />\n                    </div>\n                    <div className=\"btn-group\">\n                        <Button label={buttonProps.primaryLabel} onConfirm={this.handleAdd} classname=\"primary-btn\" type=\"submit\" />\n                        <Button label={buttonProps.secondaryLabel} onConfirm={this.handleCancel} classname=\"cancel-btn\"/>\n                    </div>\n                </div>\n            </form>\n        </Panel>);\n    }\n}\n\n\nAddAttributes.defaultProps = ({\n    addAttribute: () => false,\n    cancel: () => false,\n    attribute: {},\n    buttonProps: {},\n});\n\nAddAttributes.propTypes = ({\n    addAttribute: PropTypes.func,\n    cancel: PropTypes.func,\n    attribute: PropTypes.object,\n    buttonProps: PropTypes.object,\n});\n\nexport default AddAttributes;\n\n","\nexport const validateAttribute = (attribute) => {\n    const error = {};\n    if (!attribute.name) {\n        error.name = 'Please specify the attribute name'\n    }\n\n    if (!attribute.type) {\n        error.type = 'Please specify the attribute type'\n    }\n\n    return error;\n}\n\nexport default function attributeValidations(attribute) {\n    return validateAttribute(attribute);\n}\n","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport SweetAlert from 'react-bootstrap-sweetalert';\nimport AddAttributes from './AddAttributes';\nimport { PanelBox } from '../Panel/Panel';\nimport { toggleFactIsActive } from '../../../store/actions/RuleActions/Ruleset';\n\n\nclass AttributeDetails extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {removeAlert: false, successAlert: false};\n        this.handleRemove = this.handleRemove.bind(this);\n        this.remove = this.remove.bind(this);\n        this.cancelAlert = this.cancelAlert.bind(this);\n        this.updateAttribute = this.updateAttribute.bind(this);\n        this.toggleActiveState = this.toggleActiveState.bind(this);\n    }\n\n    async toggleActiveState(e,fact){\n        const newActiveState = e.target.checked;\n        console.log(e.target.checked);\n        console.log(\"attribute\" , fact);\n        if(fact){\n            const data = {id : fact._id , newActiveState : newActiveState};\n            let result = await toggleFactIsActive(data);\n        }\n        console.log(\"Toggle CLicked\");\n    }\n\n    handleEdit(e, val) {\n        e.preventDefault();\n        this.setState({showRuleIndex: val});\n    }\n\n    handleRemove(e, attribute, index) {\n        e.preventDefault();\n        this.setState({removeAlert: true, activeAttribute: attribute, activeAttributeIndex: index});\n        \n    }\n\n    remove() {\n        const { activeAttribute, activeAttributeIndex } = this.state;\n        this.props.removeAttribute('REMOVE', activeAttribute, activeAttributeIndex);\n        this.setState({ successAlert: true});\n    }\n\n    cancelAlert() {\n        this.setState({ removeAlert: false, successAlert: false, showRuleIndex: -1 });\n    }\n\n    updateAttribute(attribute) {\n        this.setState({ showRuleIndex: -1 });\n        this.props.updateAttribute('UPDATE', attribute, this.state.showRuleIndex);\n    }\n\n    removeAlert = () => {\n        return (<SweetAlert\n            warning\n            showCancel\n            confirmBtnText=\"Yes, Remove it!\"\n            confirmBtnBsStyle=\"danger\"\n            title=\"Are you sure?\"\n            onConfirm={this.remove}\n            onCancel={this.cancelAlert}\n            focusCancelBtn\n          >\n            You will not be able to recover the changes!\n          </SweetAlert>)\n    }\n\n    successAlert = () => {\n        return (<SweetAlert\n            success\n            title={\"Attribute has been removed successfully!!\"}\n            onConfirm={this.cancelAlert}\n          >\n          </SweetAlert>);\n    }\n\n    render() {\n    \n    const { attributes } = this.props;\n    const { showRuleIndex } = this.state;\n    \n    const buttonProps = { primaryLabel: 'Save Changes', secondaryLabel: 'Cancel'};\n\n\n    const attrList = attributes.map((attr, index) => \n    (<div key={attr.name}>\n        <PanelBox className={attr.type}>\n            <div className=\"index\">{index + 1}</div>\n            <div className=\"name\">{attr.name}</div>\n            <div className=\"type\"><span className={attr.type}>{attr.type}</span></div>\n            <div className=\"menu\">\n                <a href=\"\" onClick={(e) => this.handleEdit(e, index)}>Edit</a>\n                <a href=\"\" onClick={(e) => this.handleRemove(e, attr, index)}>Remove</a>\n            </div>\n            <div>\n                <input \n                    type=\"checkbox\" \n                    name=\"isActive\" \n                    style={{width :\"15px\" , height : \"15px\" , marginTop:\"5px\" , marginRight:\"10px\"}}\n                    onChange={(e)=>this.toggleActiveState(e,attr)} \n                    defaultChecked={attr.isActive} \n                />\n            </div>\n         </PanelBox>\n         { showRuleIndex === index && <AddAttributes attribute={attr} addAttribute={this.updateAttribute} cancel={this.cancelAlert} buttonProps={buttonProps} />\n         }\n    </div>));\n\n        return (<React.Fragment>\n                {this.state.removeAlert && this.removeAlert()}\n                {this.state.successAlert && this.successAlert()}\n                {attrList}\n            </React.Fragment>\n        );\n    }\n}\n\n\nAttributeDetails.defaultProps = ({\n    attributes: [],\n    updateAttribute: () => false,\n    removeAttribute: () => false,\n});\n\nAttributeDetails.propTypes = ({\n    attributes: PropTypes.array,\n    updateAttribute: PropTypes.func,\n    removeAttribute: PropTypes.func,\n});\n\nexport default AttributeDetails;","import React, {useState} from 'react';\nimport PropTypes from 'prop-types';\n\nconst Search = ({onConfirm, onChange}) => {\n\n    const [search, setSearch] = useState('');\n\n    const handleSearch = (e) => {\n        setSearch(e.target.value);\n        onChange(e.target.value);\n    };\n\n    return (<div className=\"search-container\">\n        <input type=\"text\" onChange={handleSearch} className=\"search-field\" value={search}/>\n        <button type=\"button\" value=\"Search\" onClick={() => onConfirm(search)} className=\"search-btn\">Search</button>\n    </div>);\n};\n\nSearch.defaultProps = ({\n    onConfirm: () => false,\n    value: '',\n    onChange: () => false,\n});\n\nSearch.propTypes = ({\n    onConfirm: PropTypes.func,\n    value: PropTypes.string,\n    onChange: PropTypes.func,\n});\n\nexport default Search;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport SweetAlert from 'react-bootstrap-sweetalert';\nimport Search from '../Search/Search';\n\nclass ToolBar extends Component {\n    constructor(props) {\n        super(props);\n        this.handleReset = this.handleReset.bind(this);\n        this.handleSearch = this.handleSearch.bind(this);\n        this.reset = this.reset.bind(this);\n        this.handleSearch = this.handleSearch.bind(this);\n        this.state={ submitAlert: false, resetAlert:false, successAlert: false };\n    }\n\n    handleReset() {\n        this.setState({resetAlert: true});\n    }\n\n    handleSearch(value) {\n        this.props.searchTxt(value);\n    }\n\n    cancelAlert = () => {\n        this.setState({submitAlert: false, resetAlert: false, successAlert: false});\n    }\n\n    reset = () => {\n        this.props.reset();\n        this.setState({resetAlert: false, successAlert: true, successMsg: 'Your changes are reset'});\n    }\n\n    alert = () => {\n       return (<div>\n            {this.state.resetAlert && this.resetAlert()}\n            {this.state.successAlert && this.successAlert()}\n        </div>);\n    }\n\n    successAlert = () => {\n        return (<SweetAlert\n            success\n            title={this.state.successMsg}\n            onConfirm={this.cancelAlert}\n          >\n          </SweetAlert>);\n    }\n\n    resetAlert = () => {\n        return (<SweetAlert\n            warning\n            showCancel\n            confirmBtnText=\"Yes, Reset it!\"\n            confirmBtnBsStyle=\"danger\"\n            title=\"Are you sure?\"\n            onConfirm={this.reset}\n            onCancel={this.cancelAlert}\n            focusCancelBtn\n          >\n            You will not be able to recover the changes!\n          </SweetAlert>)\n    }\n\n\n    render() {\n        return (<div className=\"attributes-header\">\n            {this.alert()}\n            <div className=\"attr-link\" onClick={this.props.handleAdd}>\n                <span className=\"plus-icon\" /><span className=\"text\">Add</span> \n            </div>\n            <div className=\"attr-link\" onClick={this.handleReset}>\n                 <span className=\"reset-icon\" /><span className=\"text\">Reset</span> \n            </div>\n            <div><Search onConfirm={this.handleSearch} onChange={this.handleSearch}/></div>\n        </div>)\n    }\n}\n\n\n\n\nToolBar.defaultProps = ({\n    handleAdd: () => false,\n    reset: () =>  false,\n    searchTxt: () => false,\n});\n\nToolBar.propTypes = ({\n    handleAdd: PropTypes.func,\n    reset: PropTypes.func,\n    searchTxt: PropTypes.func,\n});\n\nexport default ToolBar;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Button from '../Button/Button';\n\nclass Banner extends Component {\n\n    constructor(props){\n        super(props);\n    }\n\n    getButtonClass() {\n        const { message } = this.props;\n        switch (message.type) {\n            case 'warning-panel':\n                return 'btn-warning';\n            case 'submit-panel':\n                return 'btn-primary';\n            default:\n                return 'btn-dark';\n        }\n        \n    }\n\n    render() {\n        const { message } = this.props;\n        const btnClass = this.getButtonClass();\n        return (<div className=\"banner-container\">\n                <div className={`banner ${message.type}`}>\n                    <React.Fragment>\n                        <div>\n                        <header><b>{message.header}</b></header>\n                            <p>{message.body}</p>\n                        </div>\n                        {message.buttonProps && <div><Button label={message.buttonProps.label} classname={btnClass} onConfirm={this.props.onConfirm} /></div>}\n                    </React.Fragment>\n                </div>\n        </div>)\n    }\n}\n\nBanner.defaultProps = {\n    ruleset: {},\n    message: {},\n    onConfirm: () => false,\n};\n\nBanner.propTypes = {\n    ruleset: PropTypes.object,\n    message: PropTypes.object,\n    onConfirm: PropTypes.func,\n}\n\nexport default Banner;\n","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport AddAttributes from './AddAttributes';\nimport AttributeDetails from './AttributeDetails';\nimport ToolBar from '../Toolbar/Toolbar';\nimport Banner from '../Panel/Banner';\nimport * as Message from '../../../Constants/RuleConstants/Messages';\nimport { isContains } from '../../../utility/RuleUtils/StringUtils';\n\nclass Attributes extends Component {\n\n    constructor(props){\n        super(props);\n        this.state={showAddAttr: false, message: Message.NO_ATTRIBUTE_MSG, searchCriteria: '', bannerflag: false };\n        this.handleAdd = this.handleAdd.bind(this);\n        this.cancelAddAttribute = this.cancelAddAttribute.bind(this);\n        this.addAttribute = this.addAttribute.bind(this);\n        this.handleReset = this.handleReset.bind(this);\n        this.handleSearch = this.handleSearch.bind(this);\n    }\n\n    handleSearch = (value) => {\n        this.setState({ searchCriteria: value})\n    }\n\n    handleAdd = () => {\n        this.setState({showAddAttr: true, bannerflag: true });\n    }\n\n    addAttribute = (attribute) => {\n        this.setState({showAddAttr: false});\n        this.props.handleAttribute('ADD', attribute);\n    }\n\n    handleReset() {\n        this.props.handleAttribute('RESET');\n    }\n\n    cancelAddAttribute = () => {\n        this.setState({ showAddAttr: false, bannerflag: false });\n    }\n\n    filterAttribute = () => {\n        const { searchCriteria } = this.state;\n        const filteredAttributes = this.props.attributes.filter(att => isContains(att.name, searchCriteria) ||\n            isContains(att.type, searchCriteria));\n        return filteredAttributes;\n    }\n\n    render() {\n        const { searchCriteria, bannerflag } = this.state;\n\n        const buttonProps = { primaryLabel: 'Add Facts', secondaryLabel: 'Cancel'};\n\n        const filteredAttributes = searchCriteria ? this.filterAttribute() : this.props.attributes;\n        \n        return (<div className=\"attributes-container\">\n            \n            { <ToolBar handleAdd={this.handleAdd} reset={this.handleReset} searchTxt={this.handleSearch}/> }\n            \n            { this.state.showAddAttr && <AddAttributes addAttribute={this.addAttribute} cancel={this.cancelAddAttribute} buttonProps={buttonProps} /> }\n            \n            { <AttributeDetails attributes={filteredAttributes} updateAttribute={this.props.handleAttribute} removeAttribute={this.props.handleAttribute} /> }\n            \n            { !bannerflag && this.props.attributes.length < 1 && <Banner message={this.state.message} onConfirm={this.handleAdd}/> }\n\n      </div>);\n    }\n}\n\nAttributes.defaultProps = ({\n    handleAttribute: () => false,\n    attributes: [],\n});\n\nAttributes.propTypes = ({\n    handleAttribute: PropTypes.func,\n    attributes: PropTypes.array,\n});\n\nexport default Attributes;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst ButtonGroup = ({ buttons, onConfirm }) => {\n\n    return (<div className=\"btn-group-container\">\n        {buttons.length > 0 && buttons.map(button => \n        <div key={button.label} className={`btn-grp`}>\n            <button onClick={() => onConfirm(button.label)} type=\"button\" className={button.active ? 'active': undefined}\n             disabled={button.disable}>{button.label}</button>\n        </div>)}\n    </div>)\n};\n\nButtonGroup.defaultProps = {\n    buttons: [],\n    onConfirm: () => false\n};\n\nButtonGroup.propTypes = {\n    buttons: PropTypes.array,\n    onConfirm: PropTypes.func\n};\n\nexport default ButtonGroup;\n","\nexport const validateOutcome = (outcome) => {\n    const error = {};\n\n    if (!outcome.value) {\n        error.value = 'Please specify the outcome value'\n    }\n\n    return error;\n} \n\nconst isEmpty = (val) => {\n    if(!val) {\n        return true;\n    } else if (!val.trim()) {\n        return true;\n    }\n    return false;\n}\n\nconst fieldValidationByType = (value, type, operator) => {\n    switch(type) {\n        case 'string':\n            return value.indexOf(',') === -1;\n        case 'number': {\n            const re = RegExp('[+-]?([0-9]*[.])?[0-9]+');\n            if (re.test(value)) {\n                return !(isNaN(Number(value)));\n            } \n            return re.test(value);\n        }\n        case 'array': {\n            if (operator === 'doesNotContain' || operator === 'contains') {\n                return value.indexOf(',') === -1;\n            } else {\n                const arrValues = value.split(',');\n                if (arrValues && arrValues.length > 0) {\n                    return !arrValues.some(v => isEmpty(v))\n                } else {\n                    return false;\n                }\n            }\n        }\n        default:\n            return true;\n    }\n}\n\nexport const validateAttribute = (attribute, attributes) => {\n    const error = {};\n    if (isEmpty(attribute.operator)) {\n        error.operator = 'Please specify the operator type'\n    }\n\n    if (isEmpty(attribute.value)) {\n        error.value = 'Please specify the attribute value'\n    } else {\n        if (attribute.name) {\n            const attProps = attributes.find(att => att.name === attribute.name);\n            if(attProps && attProps.type) {\n                if (!fieldValidationByType(attribute.value, attProps.type, attribute.operator)) {\n                    error.value = 'Please specify the valid attribute value' ;\n                }\n               \n            }\n        }\n    }\n\n    if (isEmpty(attribute.name)) {\n        error.name = 'Please specify the attribute name'\n    }\n\n    return error;\n}\n\nexport default function decisionValidations(node={}, outcome) {\n    const error = {node: {}, outcome: {}};\n    error.outcome = validateOutcome(outcome);\n    const validCase = node.children && node.children.length > 0;\n    \n    if (!validCase) {\n        error.formError = 'Please specify atlease one condition';\n    } else if (Object.keys(error.outcome).length > 0){\n        error.formError = 'Please specify valid output values';\n    }\n    return error;\n}","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Tree from 'react-d3-tree';\n\n\n  const lineStyle = {\n    stroke: '#404040',\n    strokeWidth: 1,\n  };\n\n  const nodeStyle = {\n    stroke: '#73879C',\n    strokeWidth: 1\n  };\n\n  const nameStyle = {\n      fontFamily : '\"Helvetica Neue\", Roboto, Arial, \"Droid Sans\", sans-serif',\n      fontSize: '13px',\n      fontWeight: 'bold',\n      fill: '#2A3F54',\n      stroke: '#2A3F54',\n      strokeWidth: 0,\n  }\n\n  const attributesStyle = {\n    fontFamily : '\"Helvetica Neue\", Roboto, Arial, \"Droid Sans\", sans-serif',\n    fontSize: '14px',\n    fill: '#2A3F54',\n    stroke: '#2A3F54',\n    strokeWidth: 0,\n  }\n\n  const treeStyle = {\n    links: lineStyle,\n    nodes: {\n      node: {\n        circle: nodeStyle,\n        rect: nodeStyle,\n        name: nameStyle,\n        attributes: attributesStyle,\n      },\n      leafNode: {\n        circle: nodeStyle,\n        name: nameStyle,\n        attributes: attributesStyle,\n      },\n    },\n  };\n\nconst transformDepth = (count) => {\n    if (count < 1) {\n        return '15em';\n    } else if (count < 2) {\n        return '20em';\n    } else if (count < 3) {\n        return '25em';\n    } else if (count < 4) {\n        return '35em';\n    } else if (count < 5) {\n        return '40em';\n    } else if (count < 6) {\n        return '50em';\n    } else {\n        return '60em';\n    }\n}\n\nclass TreeView extends Component {\n    constructor(props) {\n        super(props);\n        const { innerWidth: width } = window;\n        this.state = {axis: { x: (width/2) - 250, y: 20}};\n        this.updateWindowDimensions = this.updateWindowDimensions.bind(this);\n        this.handleClick = this.handleClick.bind(this);\n    }\n\n    componentDidMount() {\n        window.addEventListener('resize', this.updateWindowDimensions);\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.updateWindowDimensions);\n    }\n\n    handleClick(e) {\n        this.props.onConfirm(e);\n    }\n\n\n    updateWindowDimensions() {\n        const { innerWidth: width } = window;\n        this.setState({axis: { x: (width/2) - 250, y: 0}});\n    }\n\n    render() {\n        const heightStyle = transformDepth(this.props.count);\n       \n        return(\n            <div id=\"treeWrapper\" style={{height: heightStyle}}>\n        <Tree data={this.props.treeData} pathFunc={\"step\"} orientation=\"vertical\" translate={this.state.axis}\n        separation={{siblings: 1.4, nonSiblings: 2}} scaleExtent={{min: 0.8, max:1}} zoom={0.9} styles={treeStyle} onClick={this.handleClick} /></div>);\n    }\n}\n\nTreeView.defaultProps = {\n    treeData: {},\n    count: 0,\n    onConfirm: () => false,\n};\n\nTreeView.propTypes = {\n    treeData: PropTypes.object,\n    count: PropTypes.number,\n    onConfirm: PropTypes.func,\n}\n\nexport default TreeView;","import { has } from 'lodash/object';\nimport { isArray } from 'lodash/lang';\nimport { join } from 'lodash/array';\n\nconst nodeSvgShape = {\n    shape: 'circle',\n    shapeProps: {\n      fill: '#1ABB9C',\n      r: 10,\n    },\n  };\n\nconst mapFactToChildren = (fact) => {\n    if (has(fact, 'fact') && has(fact, 'operator') && has(fact, 'value')) {\n        let value = fact.value;\n        let attributes = {};\n        if (isArray(fact.value)) {\n            value = join(fact.value, ',');\n        }\n\n        attributes[fact.operator] = value;\n\n        if (fact.path) {\n            attributes['path'] = fact.path;\n        }\n        return ({name: fact.fact, attributes});\n    }\n    return undefined;\n};\n\nconst mapParentNode = (name) => {\n    return ({name, nodeSvgShape, children : []});\n};\n\n//global variable to determine the depth\nlet depthCount;\n\nconst mapConditionsToChildren = (condition={}, depth) => {\n    const parentNode = has(condition, 'all') ? 'all' : 'any';\n    const node = mapParentNode(parentNode);\n    const childrenNode = condition[parentNode] && condition[parentNode].map(facts => {\n        if (has(facts, 'fact')) {\n            return mapFactToChildren(facts);\n        } else {\n            depthCount = depth > depthCount ? depth : depthCount;\n            return mapConditionsToChildren(facts, depth + 1);\n        }\n    });\n    node.children = childrenNode;\n    return node;\n};\n\nexport const transformRuleToTree = (conditions = []) => {\n    depthCount = 0;\n    if (isArray(conditions)) {\n        return conditions.map((condition) => {\n            depthCount = 0;\n            return { \n                node: mapConditionsToChildren(condition.conditions, 1),\n                depthCount,\n                index: condition.index,\n                event: condition.event\n            };\n        });\n    } \n    return { node: mapConditionsToChildren(conditions.conditions, 1), depthCount, index: 0, event: conditions.event};\n};\n\nconst mapChildNodeToFacts = (children) => {\n    const fact = { fact: children.name };\n    Object.keys(children.attributes).forEach((key) => {\n        if (key === 'path') {\n            fact['path'] = children.attributes.path;\n        } else {\n            fact['operator'] = key;\n            let value;\n            if (String(children.attributes[key]).indexOf(',') > -1) {\n                value = children.attributes[key].split(',');\n            } else {\n                value = children.attributes[key];\n            }\n            fact['value'] = value;\n        }\n    });\n    return fact;\n}\n\nconst mapNodeToCondition = (node) => {\n    const parentNode = { [node.name]: [] };\n\n    if (node.children && node.children.length > 0) {\n        const facts = node.children.map((childNode) => {\n            if (childNode.name !== 'all' && childNode.name !== 'any') {\n                return mapChildNodeToFacts(childNode);\n            } else {\n                return mapNodeToCondition(childNode);\n            }\n        })\n        parentNode[node.name] = facts;\n    }\n    return parentNode;\n}\n\n\nexport const transformTreeToRule = (node = {}, outcome, params) => {\n    return ({conditions: mapNodeToCondition(node), event: { type: outcome.value, params }});\n}","import { findIndex } from 'lodash/array';\n\nconst mapNodeName = (node) =>\n    ({ name: node?.name, depth: node?.depth, id: node?.id });\n\nconst getNodeIndex = (parentNode, childNode) => {\n    if (parentNode && parentNode.children && parentNode.children.length > 0) {\n        return findIndex(parentNode.children, { 'id': childNode.id });\n    }\n    return undefined;\n}\n\nexport const getNodeDepthDetails = (node, result = []) => {\n    const obj = mapNodeName(node);\n    // eslint-disable-next-line no-constant-condition\n    while(true) {\n        if(node?.depth > 0) {\n            const index = getNodeIndex(node.parent, obj);\n            obj['index'] = index;\n            result.push(obj);\n            return getNodeDepthDetails(node.parent, result);\n        }\n        break;\n    }\n    return result;\n}\n\nconst iterateNode = (node, depth) => {\n\n    if (node?.children && node?.children?.length > 0) {\n        depth = depth + 1;\n        node.children.forEach(childNode => {\n            depth = iterateNode(childNode, depth);\n        })\n       \n    }\n    return depth;\n}\n\nexport const getNodeDepth = node => iterateNode(node, 0);","export const DATA_TYPES = {STRING: 'string', BOOLEAN: 'boolean', NUMBER: 'number', ARRAY: 'array'};\n\nexport const PLACEHOLDER = { 'string': 'Enter value', 'number': 'Enter numerical value', 'array': 'Ex: item1,item2,item3'};","import axios from 'axios';\nimport * as ActionTypes from './ActionTypes';\nimport config from \"../../../config.jsx\";\n\nexport const add = (attribute) => {\n    const payload = { attribute };\n    return ({ type: ActionTypes.ADD_ATTRIBUTE, payload});\n}\n\nexport const update = (attribute, index) => {\n    const payload = { attribute, index };\n\n    return ({ type: ActionTypes.UPDATE_ATTRIBUTE, payload});\n}\n\nexport const remove = (attribute, index) => {\n    const payload = { attribute, index };\n\n    return ({ type: ActionTypes.REMOVE_ATTRIBUTE, payload});\n}\n\nexport const reset = () => {\n    return ({type: ActionTypes.RESET_ATTRIBUTE})\n}\n\n\nexport const handleAttribute = (action, attribute, index) => (dispatch) => {\n    switch(action) {\n        case 'ADD':\n            return dispatch(add(attribute));\n        case 'UPDATE':\n            return dispatch(update(attribute, index));\n        case 'REMOVE':\n            return dispatch(remove(attribute, index));\n        case 'RESET':\n            return dispatch(reset());\n    }\n};\n\n\nexport const getFacts = async () => {\n    try{\n        let facts = await axios.get(config.api.base_url + '/ruleengine/facts');\n        return facts.data.data;\n    } catch (err) {\n        console.log(err);\n    }\n}\n\nexport const getRuleParams = async () => {\n    try{\n        let ruleParams = await axios.get(config.api.base_url + '/ruleengine/getRuleParams');\n        return ruleParams.data.data;\n    } catch (err) {\n        console.log(err);\n    }\n}\n\nexport const getFactsDataSql = async (key, datasource) => {\n    try{\n        let response = await axios.get(config.api.base_url + '/ruleengine/getFactsData/?key='+key+'&datasource='+datasource);\n        return response.data.data;\n    } catch (err) {\n        console.log(err);\n    }\n}\n ","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Panel from '../Panel/Panel';\nimport InputField from '../Forms/InputField';\nimport SelectField from '../Forms/SelectedMenuField';\nimport Button from '../Button/Button';\nimport ButtonGroup from '../Button/ButtonGroups';\nimport operator from '../../../data-objects/Operator.json';\nimport decisionValidations from '../../../rule-validations/DecisionValidation';\nimport Tree from '../Tree/Tree';\nimport { has } from 'lodash/object';\nimport { getNodeDepthDetails, getNodeDepth } from '../../../utility/RuleUtils/TreeUtils';\nimport { transformTreeToRule } from '../../../utility/RuleUtils/Transform';\nimport { sortBy } from 'lodash/collection';\nimport { validateAttribute } from '../../../rule-validations/DecisionValidation';\nimport { PLACEHOLDER } from '../../../Constants/RuleConstants/DataTypes';\nimport { getRuleParams, getFactsDataSql } from '../../../store/actions/RuleActions/Attributes';\nimport { addFactsValuesSql } from '../../../store/actions/RuleActions/Ruleset';\nimport MultiSelect from \"react-multi-select-component\";\nimport { connect } from 'react-redux';\n\nconst nodeStyle = {\n    shape: 'circle',\n    shapeProps: {\n        fill: '#1ABB9C',\n        r: 10,\n    },\n};\n\nconst factsButton = [{ label: 'Add Facts', disable: false },\n{ label: 'Add All', disable: false },\n{ label: 'Add Any', disable: false },\n{ label: 'Remove', disable: false }];\n\nconst topLevelOptions = [{ label: 'All', active: false, disable: false },\n{ label: 'Any', active: false, disable: false }];\n\nconst outcomeOptions = [{ label: 'Add Outcome', active: false, disable: false },\n{ label: 'Edit Conditions', active: false, disable: false }];\n\nclass AddDecision extends Component {\n    constructor(props) {\n        super(props);\n\n        const outcome = props.editDecision ? props.outcome : ({ value: '', error: {}, params: [] });\n        const addAttribute = { error: {}, name: '', operator: '', value: '' };\n        const node = props.editDecision ? props.editCondition.node : {};\n        const activeNode = { index: 0, depth: 0 };\n\n        this.state = {\n            attributes: props.attributes,\n            outcome,\n            addAttribute,\n            enableTreeView: props.editDecision,\n            enableFieldView: false,\n            enableOutcomeView: false,\n            node,\n            topLevelOptions,\n            factsButton: factsButton.map(f => ({ ...f, disable: true })),\n            outcomeOptions: outcomeOptions.map(f => ({ ...f, disable: true })),\n            formError: '',\n            addPathflag: false,\n            activeNodeDepth: [activeNode],\n            field: '',\n            activeFieldIndex: 0,\n            factData: {},\n            multiSelectValue: [],\n            FactsActualName: {},\n            selectedNodeName: '',\n            selectedNodeLevel: ''\n        };\n        this.handleAdd = this.handleAdd.bind(this);\n        this.handleCancel = this.handleCancel.bind(this);\n        this.onChangeNewFact = this.onChangeNewFact.bind(this);\n        this.onChangeOutcomeValue = this.onChangeOutcomeValue.bind(this);\n        this.handleTopNode = this.handleTopNode.bind(this);\n        this.handleActiveNode = this.handleActiveNode.bind(this);\n        this.handleChildrenNode = this.handleChildrenNode.bind(this);\n        this.handleFieldCancel = this.handleFieldCancel.bind(this);\n        this.handleOutputPanel = this.handleOutputPanel.bind(this);\n        this.handleOutputParams = this.handleOutputParams.bind(this);\n        this.addParams = this.addParams.bind(this);\n        this.addPath = this.addPath.bind(this);\n        this.setMultiSelected = this.setMultiSelected.bind(this);\n        this.selectedNodeDetails = this.selectedNodeDetails.bind(this);\n    }\n\n    async componentDidMount() {\n        getRuleParams().then(data => {\n            this.setState({ ruleParams: data });\n        }).catch(err => {\n            // console.log(err);\n        });\n\n        const { attributes, factData } = this.state;\n        let mapAttributeValues = {};\n        let mapActualName = {};\n        for (let index = 0; index < attributes.length; index++) {\n            const attribute = attributes[index];\n            mapActualName[attribute.name] = attribute.actualname;\n            if (attribute.field === 'dropdown' && attribute.source === 'api') {\n                \n                let data = await getFactsDataSql(attribute.key);\n                if (data.key !== undefined) {\n                    mapAttributeValues[attribute.name] = data.data;\n                } else {\n                    mapAttributeValues[attribute.name] = [];\n                }\n            };\n        }\n        this.setState({ factData: mapAttributeValues, FactsActualName: mapActualName });\n    }\n\n    handleAdd(e) {\n        e.preventDefault();\n        const error = decisionValidations(this.state.node, this.state.outcome);\n\n        if (error.formError) {\n            this.setState({ formError: error.formError, outcome: { ...this.state.outcome, error: error.outcome } })\n        } else {\n            let operationType = '';\n            let { ruleset } = this.props;\n            console.log('handleadd', ruleset);\n            if(ruleset !== null && \n                ruleset.operationType !== undefined) {\n                    operationType = ruleset.operationType;\n                }\n            let outcomeParams = {\n                ruleId: this.props.ruleId,\n                description: this.props.description,\n                operationType: operationType\n            };\n            this.state.outcome.params.forEach(param => {\n                outcomeParams[param.pkey] = param.pvalue;\n            })\n            const condition = transformTreeToRule(this.state.node, this.state.outcome, outcomeParams);\n            this.props.addCondition(condition);\n        }\n    }\n\n    handleCancel() {\n        this.props.cancel();\n    }\n\n    onChangeNewFact(e, name) {\n        const addAttribute = { ...this.state.addAttribute };\n        const { mapActualName } = this.props.factData;\n\n        const value = e.target.value;\n        if (value !== '-1' && mapActualName !== null && mapActualName !== undefined && \n            !(Object.keys(mapActualName).length === 0 &&\n            mapActualName.constructor === Object)) {\n            if(name === 'name'){\n                addAttribute[name] = mapActualName[value];\n            } else {\n                addAttribute[name] = value;\n            }\n             \n        }\n        if (name === 'name') {\n            addAttribute.value = '';\n            this.setState({ multiSelectValue: []});\n        }\n        this.setState({ addAttribute });\n    }\n\n    setMultiSelected(list, value) {\n        const addAttribute = { ...this.state.addAttribute };\n        let item='';\n        addAttribute['value'] = '-1';\n        for (let index = 0; index < list.length; index++) {\n            item = list[index];\n            addAttribute['value'] += \",\"+item.value;\n        }\n\n        this.setState({ addAttribute });\n        this.setState({ multiSelectValue: list});\n    }\n\n    onChangeOutcomeValue(e, type) {\n        const outcome = { ...this.state.outcome };\n        outcome[type] = e.target.value;\n        this.setState({ outcome });\n    }\n\n    addParams() {\n        const { outcome } = this.state;\n        const newParams = outcome.params.concat({ pkey: '', pvalue: '' });\n        this.setState({ outcome: { ...outcome, params: newParams } });\n    }\n\n    addPath() {\n        this.setState({ addPathflag: true });\n    }\n\n    handleOutputParams(e, type, index) {\n        if (type === 'pkey' && e.target.value === 'EXPRESSION') {\n            this.setState({ field: 'dropdown', activeFieldIndex: index });\n        } else {\n            this.setState({ field: '', activeFieldIndex: index });\n        }\n\n        const { outcome } = this.state;\n        const params = [...outcome.params];\n        const newParams = params.map((param, ind) => {\n            if (index === ind) {\n                if (type === 'pkey') {\n                    return { ...param, pkey: e.target.value };\n                } else {\n                    return { ...param, pvalue: e.target.value };\n                }\n            }\n            return param;\n        });\n        this.setState({ outcome: { ...outcome, params: newParams } });\n    }\n\n    handleTopNode(value) {\n        let parentNode = { ...this.state.node };\n        const activeNode = { index: 0, depth: 0 };\n        if (has(parentNode, 'name')) {\n            parentNode.name = value === 'All' ? 'all' : 'any';\n        } else {\n            parentNode = { name: value === 'All' ? 'all' : 'any', nodeSvgShape: nodeStyle, children: [] };\n        }\n        const topLevelOptions = this.state.topLevelOptions.map(option => {\n            if (option.label === value) {\n                return { ...option, active: true };\n            }\n            return { ...option, active: false };\n        })\n\n        const factsButton = this.state.factsButton.map(button => ({ ...button, disable: false }));\n        const outcomeOptions = this.state.outcomeOptions.map(button => ({ ...button, disable: false }));\n\n        this.setState({\n            enableTreeView: true, topNodeName: value, node: parentNode,\n            activeNodeDepth: [activeNode], topLevelOptions, factsButton, outcomeOptions\n        });\n    }\n\n    mapNodeName(val) {\n        const node = {};\n        const { addAttribute: { name, operator, value, path }, attributes } = this.state;\n        if (val === 'Add All' || val === 'Add Any') {\n            node['name'] = val === 'Add All' ? 'all' : 'any';\n            node['nodeSvgShape'] = nodeStyle;\n            node['children'] = [];\n        } else {\n            node['name'] = name;\n            let factValue = value.trim();\n            const attProps = attributes.find(att => att.actualname === name);\n            if (attProps.type === 'number') {\n                factValue = Number(value.trim());\n            }\n            let fact = { [operator]: factValue };\n            if (path) {\n                fact['path'] = `.${path}`;\n            }\n            node['attributes'] = { ...fact };\n        }\n        return node;\n    }\n\n    handleChildrenNode(value) {\n\n        let factOptions = [...factsButton];\n        if (value === 'Add Facts') {\n            this.setState({ enableFieldView: true });\n        } else {\n            const { activeNodeDepth, node, attributes } = this.state;\n            const addAttribute = { error: {}, name: '', operator: '', value: '' };\n            if (value === 'Add fact node') {\n                const error = validateAttribute(this.state.addAttribute, attributes);\n                if (Object.keys(error).length > 0) {\n                    let addAttribute = this.state.addAttribute;\n                    addAttribute.error = error;\n                    this.setState({ addAttribute });\n                    return undefined;\n                }\n            }\n            if (activeNodeDepth && node) {\n                const newNode = { ...node };\n\n                const getActiveNode = (pNode, depthIndex) => pNode[depthIndex];\n\n                let activeNode = newNode;\n                const cloneDepth = value === 'Remove' ? activeNodeDepth.slice(0, activeNodeDepth.length - 1) : [...activeNodeDepth]\n                cloneDepth.forEach(nodeDepth => {\n                    if (nodeDepth.depth !== 0) {\n                        activeNode = getActiveNode(activeNode.children, nodeDepth.index);\n                    }\n                });\n                const childrens = activeNode['children'] || [];\n                if (value !== 'Remove') {\n                    activeNode['children'] = childrens.concat(this.mapNodeName(value));\n                } else {\n                    const lastNode = activeNodeDepth[activeNodeDepth.length - 1];\n                    childrens.splice(lastNode.index, 1);\n                    factOptions = this.state.factsButton.map(button =>\n                        ({ ...button, disable: true }));\n                }\n\n                this.setState({ node: newNode, enableFieldView: false, addAttribute, factsButton: factOptions });\n            }\n        }\n    }\n\n\n    handleActiveNode(node) {\n        const depthArr = getNodeDepthDetails(node);\n        const sortedArr = sortBy(depthArr, 'depth');\n        console.log(node);\n        this.setState({ \n            selectedNodeName: node.name,\n            selectedNodeLevel: node.depth\n        });\n\n        const factsNodemenu = this.state.factsButton.map(button => {\n            if (button.label !== 'Remove') {\n                return { ...button, disable: true };\n            }\n            return { ...button, disable: false };\n        });\n\n        const parentNodeMenu = this.state.factsButton.map(button => {\n            if (sortedArr.length < 1 && button.label === 'Remove') {\n                return { ...button, disable: true };\n            }\n            return { ...button, disable: false };\n        });\n\n        const facts = node.name === 'all' || node.name === 'any' ? parentNodeMenu : factsNodemenu;\n        const outcomeMenus = outcomeOptions.map(option => ({ ...option, disable: false }));\n        this.setState({ activeNodeDepth: sortedArr, factsButton: facts, outcomeOptions: outcomeMenus });\n    }\n\n    handleFieldCancel() {\n        const addAttribute = { error: {}, name: '', operator: '', value: '' };\n        this.setState({ enableFieldView: false, addAttribute });\n    }\n\n    handleOutputPanel(value) {\n        if (value === 'Add Outcome') {\n            const factsOptions = this.state.factsButton.map(fact => ({ ...fact, disable: true }))\n            const options = this.state.outcomeOptions.map(opt => {\n                if (opt.label === 'Add Outcome') {\n                    return { ...opt, active: true };\n                }\n                return { ...opt, active: false };\n            });\n            this.setState({\n                enableOutcomeView: true, enableTreeView: false,\n                enableFieldView: false, outcomeOptions: options, factsButton: factsOptions\n            });\n        }\n        if (value === 'Edit Conditions') {\n            const options = this.state.outcomeOptions.map(opt => {\n                if (opt.label === 'Edit Conditions') {\n                    return { ...opt, active: true };\n                }\n                return { ...opt, active: false };\n            });\n            this.setState({ enableOutcomeView: false, enableTreeView: true, enableFieldView: false, outcomeOptions: options });\n        }\n    }\n\n    handleRemoveOutCome(e,ind){\n        e.preventDefault();\n        const { outcome } = this.state;\n        const newParams = outcome.params.filter((item,index)=>ind!=index);\n        this.setState({ outcome: { ...outcome, params: newParams } });\n    }\n\n    topPanel() {\n        const { topLevelOptions, factsButton, outcomeOptions } = this.state;\n\n        return (<div className=\"add-decision-step\">\n            <div className=\"step1\"><div>Step 1: Add Toplevel</div><ButtonGroup buttons={topLevelOptions} onConfirm={this.handleTopNode} /></div>\n            <div className=\"step2\"><div> Step 2: Add / Remove facts</div><ButtonGroup buttons={factsButton} onConfirm={this.handleChildrenNode} /></div>\n            <div className=\"step3\"><div> Step 3: Add Outcome</div><ButtonGroup buttons={outcomeOptions} onConfirm={this.handleOutputPanel} /></div>\n        </div>)\n    }\n\n    fieldPanel() {\n        const { attributes, addAttribute, addPathflag } = this.state;\n        const { factData } = this.props;\n        let AttributeFieldDropDown = {};\n        let AttributeValues = {};\n        let AttributeDate = {};\n        let DropDownKeyType = {};\n        let DropDownMultiselect = {};\n        \n        for (let index = 0; index < attributes.length; index++) {\n            let attribute = attributes[index];\n\n            if (attribute.field === 'dropdown') {\n\n                AttributeFieldDropDown[attribute.actualname] = true;\n\n                if (attribute.source === 'api') {\n                    if( !(Object.keys(factData).length === 0 &&\n                      factData.constructor === Object) &&\n                      factData.AttributeValues !== undefined\n                    ) {\n                       \n                        let factMapping = factData.AttributeValues;\n                        if(attribute.name in factMapping){\n                            AttributeValues[attribute.actualname] = factMapping[attribute.name];\n                        } else {\n                            AttributeValues[attribute.actualname] = [];\n                        }\n                       \n                        if(attribute.factValueType === 'key'){\n                            DropDownKeyType[attribute.actualname] = true;\n                        }\n                    }\n\n                } else {\n                    AttributeValues[attribute.actualname] = attribute.values;\n                    DropDownKeyType[attribute.actualname] = false;\n                }\n\n                if(attribute.multiselect === true){\n                    DropDownMultiselect[attribute.actualname] = true;\n                } else {\n                    DropDownMultiselect[attribute.actualname] = false;\n                }\n\n            } else if (attribute.field === 'date') {\n                AttributeDate[attribute.actualname] = true;\n            } else {\n                AttributeFieldDropDown[attribute.actualname] = false;\n            }\n        };\n\n\n        let dropdownValues = [];\n        let enableDropDown = false;\n        let showDateField = false;\n        let dropDownKeyValue = false;\n        let multiSelect=false;\n\n        if (addAttribute.name !== '-1' && AttributeFieldDropDown[addAttribute.name]) {\n            dropdownValues = AttributeValues[addAttribute.name];\n            dropDownKeyValue = DropDownKeyType[addAttribute.name];\n            multiSelect = DropDownMultiselect[addAttribute.name];\n\n            let dropdownValuesMulti = [];\n            if(multiSelect === true) {\n                for (let index = 0; index < dropdownValues.length; index++) {\n                    const element = dropdownValues[index];\n                    let obj = { label: element.value, value: element.key};\n                    if(DropDownKeyType[addAttribute.name]){\n                        dropdownValuesMulti.push(obj);\n                    } else {\n                        obj = {label: element, value: element};\n                        dropdownValuesMulti.push(obj);\n                    }\n                }\n                dropdownValues = dropdownValuesMulti;\n            }\n            enableDropDown = true;\n        }\n\n        if (AttributeDate[addAttribute.name]) {\n            enableDropDown = false;\n            showDateField = true;\n        }\n\n        const attributeOptions = attributes.map(attr => attr.name);\n        const attribute = addAttribute.name && attributes.find(attr => attr.actualname === addAttribute.name);\n        let operatorOptions= [], placeholder=\"\";\n        if(attribute!=null && attribute!==undefined) {\n            operatorOptions = attribute && operator[attribute.type];\n\n            placeholder = addAttribute.operator === 'contains' || addAttribute.operator === 'doesNotContain' ?\n                PLACEHOLDER['string'] : PLACEHOLDER[attribute.type]\n        }\n         \n\n        return (<Panel>\n\n            <div className=\"attributes-header\">\n                <div className=\"attr-link\" onClick={this.addPath}>\n                    <span className=\"plus-icon\" /><span className=\"text\">Add Path</span>\n                </div>\n            </div>\n\n            <div className=\"add-field-panel\">\n                <div>\n                    <SelectField\n                        options={attributeOptions}\n                        onChange={(e) => this.onChangeNewFact(e, 'name')}\n                        value={addAttribute.name}\n                        error={addAttribute.error.name}\n                        label=\"Facts\"\n                    />\n                </div>\n                <div>\n                    <SelectField\n                        options={operatorOptions ?? []}\n                        onChange={(e) => this.onChangeNewFact(e, 'operator')}\n                        value={addAttribute.operator}\n                        error={addAttribute.error.operator}\n                        label=\"Operator\"\n                    />\n                </div>\n                {\n                    enableDropDown && !multiSelect &&\n                    <div>\n                        <SelectField\n                            options={dropdownValues}\n                            onChange={(e) => this.onChangeNewFact(e, 'value')}\n                            error={addAttribute.error.value}\n                            label=\"Value\"\n                            placeholder={placeholder}\n                            dropDownKeyValue={dropDownKeyValue}\n                        />\n                    </div>\n                }\n                { \n                    enableDropDown && multiSelect &&\n                    <div className=\"multiselect-dropdown-fact\">\n                         <MultiSelect\n                            options={dropdownValues}\n                            value={this.state.multiSelectValue}\n                            onChange={this.setMultiSelected}\n                        />\n                    </div>\n                }\n                {\n                    !enableDropDown && !showDateField &&\n                    <div>\n                        <InputField\n                            onChange={(value) => this.onChangeNewFact(value, 'value')}\n                            value={addAttribute.value}\n                            error={addAttribute.error.value}\n                            label=\"Value\"\n                            placeholder={placeholder}\n                        />\n                    </div>\n                }\n                {\n                    showDateField &&\n                    <div className=\"form-field\">\n                        <label>Value</label>\n                        <input\n                            type=\"date\"\n                            value={addAttribute.value}\n                            error={addAttribute.error.value}\n                            label=\"Value\"\n                            onChange={(e) => this.onChangeNewFact(e, 'value')}\n                        >\n                        </input>\n                    </div>\n                }\n            </div>\n\n            {addPathflag && <div className=\"add-field-panel half-width\">\n                <div>\n                    {/*<InputField onChange={(value) => this.onChangeNewFact(value, 'path')} value={addAttribute.path}\n                        label=\"Path\" placeholder={\"Enter path value - dont give prefix ' . ' \"}/> */}\n                    <SelectField options={attributeOptions} onChange={(e) => this.onChangeNewFact(e, 'path')}\n                        value={addAttribute.path} label=\"Path\" />\n                </div>\n            </div>}\n\n            <div className=\"btn-group\">\n                <Button label={'Add'} onConfirm={() => this.handleChildrenNode('Add fact node')} classname=\"btn-toolbar\" type=\"submit\" />\n                <Button label={'Cancel'} onConfirm={this.handleFieldCancel} classname=\"btn-toolbar\" />\n            </div>\n        </Panel>)\n    }\n\n    outputPanel() {\n        const { outcome, field, activeFieldIndex } = this.state;\n        const { editDecision, ruleParams } = this.props;\n        let mapRuleParamKey = {};\n        let mapRuleParamField = {};\n\n        let ruleParamsOptions = ruleParams.map((item) => {\n            if (item.field === 'dropdown') {\n                mapRuleParamKey[item.key] = item.values;\n                mapRuleParamField[item.key] = true;\n            } else {\n                mapRuleParamKey[item.key] = [];\n                mapRuleParamField[item.key] = false;\n            }\n            return item.key;\n        });\n\n\n        return (<Panel>\n            <div className=\"attributes-header\">\n                <div className=\"attr-link\" onClick={this.addParams}>\n                    <span className=\"plus-icon\" /><span className=\"text\">Add Params</span>\n                </div>\n            </div>\n            <div className=\"add-field-panel half-width\">\n                <div>\n                    <InputField onChange={(value) => this.onChangeOutcomeValue(value, 'value')} value={outcome.value}\n                        error={outcome.error && outcome.error.value} label=\"Type\" />\n                </div>\n            </div>\n            <div>\n                {outcome.params.length > 0 && outcome.params.map((param, ind) =>\n                (<div>\n                    {\n                        param.pkey !== 'ruleId' && param.pkey !== 'description' && param.pkey !== 'operationType'&&\n                        <div key={ind} className=\"add-field-panel\">\n                            <SelectField\n                                options={ruleParamsOptions}\n                                onChange={(value) => this.handleOutputParams(value, 'pkey', ind)}\n                                value={param.pkey}\n                                label=\"key\"\n                            />\n                            {\n                                mapRuleParamField[param.pkey] &&\n                                <SelectField\n                                    options={mapRuleParamKey[param.pkey]}\n                                    onChange={(value) => this.handleOutputParams(value, 'pvalue', ind)}\n                                    value={param.pvalue}\n                                    label=\"Value\"\n                                />\n                            }\n                            {\n                                !mapRuleParamField[param.pkey] &&\n                                <InputField\n                                    onChange={(value) => this.handleOutputParams(value, 'pvalue', ind)}\n                                    value={param.pvalue}\n                                    label=\"Value\"\n                                />\n                            }\n                            <div \n                                style={{marginTop:\"12px\"}}\n                                onClick = {(e)=>this.handleRemoveOutCome(e,ind)}\n                            >\n                            <   a href=\"\"><span class=\"fa fa-trash-o fa-lg\"></span></a>\n                            </div>\n                        </div>\n\n                    }\n\n                </div>))}\n            </div>\n        </Panel>)\n    }\n\n    treePanel() {\n        const { node } = this.state;\n        const depthCount = getNodeDepth(node);\n\n        return (<Panel>\n            <Tree treeData={node} count={depthCount} onConfirm={this.handleActiveNode} />\n        </Panel>)\n    }\n\n    selectedNodeDetails() {\n        const { selectedNodeLevel, selectedNodeName } = this.state;\n        return (\n            <div className = \"selected-node-details-tree\">\n                {selectedNodeName !== '' && selectedNodeLevel !=='' &&\n                <>\n                    <div className = \"node-name\">\n                        <label htmlFor=\"nodename\">Selected Node Name: </label>\n                        <h5>{selectedNodeName}</h5>\n                    </div>\n                    <div className = \"node-level\">\n                        <label htmlFor=\"nodename\">Selected Node Level: </label>\n                        <h5>{selectedNodeLevel}</h5>                  \n                    </div>\n                </>\n            }\n            </div>\n        )\n    }\n\n\n    addPanel() {\n        const { enableTreeView, enableFieldView, enableOutcomeView } = this.state;\n\n        return (<div>\n            {this.topPanel()}\n            {enableFieldView && this.fieldPanel()}\n            {enableOutcomeView && this.outputPanel()}\n            {!enableOutcomeView && this.selectedNodeDetails()}\n            {enableTreeView && this.treePanel()}\n        </div>);\n\n    }\n\n    render() {\n        const { buttonProps } = this.props;\n        return (\n            <form>\n                <div className=\"add-rulecase-wrapper\">\n                    {this.addPanel()}\n                    {this.state.formError && <p className=\"form-error\"> {this.state.formError}</p>}\n                    <div className=\"btn-group\">\n                        <Button label={buttonProps.primaryLabel} onConfirm={this.handleAdd} classname=\"primary-btn\" type=\"submit\" />\n                        <Button label={buttonProps.secondaryLabel} onConfirm={this.handleCancel} classname=\"cancel-btn\" />\n                    </div>\n\n                </div>\n            </form>\n        );\n    }\n}\n\nAddDecision.defaultProps = ({\n    addCondition: () => false,\n    cancel: () => false,\n    attribute: {},\n    buttonProps: {},\n    attributes: [],\n    outcome: {},\n    editDecision: false,\n    editCondition: {},\n    factData: {},\n    ruleset: {}\n});\n\nAddDecision.propTypes = ({\n    addCondition: PropTypes.func,\n    cancel: PropTypes.func,\n    attribute: PropTypes.object,\n    buttonProps: PropTypes.object,\n    attributes: PropTypes.array,\n    outcome: PropTypes.object,\n    editDecision: PropTypes.bool,\n    editCondition: PropTypes.object,\n    factData: PropTypes.object,\n    ruleset: PropTypes.object\n});\n\nconst mapStateToProps = (state) => ({\n    factData: state?.Ruleset?.factData,\n    ruleset: state?.Ruleset?.rulesets[state?.Ruleset?.activeRuleset],\n});\n  \nexport default connect(mapStateToProps)(AddDecision);","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst ViewAttributes = ({items}) => {\n    \n    return (Object.keys(items).map(key => \n            (<div key={key} className=\"view-attribute\">\n                <div>\n                    {key}\n                </div>\n                <div>\n                    {items[key]}\n                </div>\n            </div>))\n    );\n};\n\nViewAttributes.defaultProps = {\n    items: {},\n};\n\nViewAttributes.propTypes = {\n    items: PropTypes.object,\n};\n\n\n\nexport const ViewOutcomes = ({items}) => {\n    \n    return (\n        <>\n            <div className=\"view-attribute\">\n                    <div>\n                        Type\n                    </div>\n                \n                    <div>\n                        Expression\n                    </div>\n            </div>\n            {items.map((item, ind) => \n                (<div key={ind} className=\"view-attribute\">\n                    <div>\n                        {item.type}\n                    </div>\n                    <div>\n                        {item.params.EXPRESSION}\n                    </div>\n                </div>))}\n        </>\n    );\n};\n\nViewOutcomes.defautProps = {\n    items: [],\n};\n\nViewOutcomes.propTypes = {\n    items: PropTypes.array,\n};\n\nexport default ViewAttributes;\n\n\n\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Tree from '../Tree/Tree';\nimport { PanelBox } from '../Panel/Panel';\nimport 'font-awesome/css/font-awesome.min.css';\nimport SweetAlert from 'react-bootstrap-sweetalert';\nimport { transformRuleToTree } from '../../../utility/RuleUtils/Transform';\nimport ViewAttribute from '../Attributes/ViewAttributes';\n\nclass DecisionDetails extends Component {\n\n    static getDerivedStateFromProps(props, state) {\n        if (Object.keys(props.outcomes).length !== state.showCase.length) {\n            const showCase = Object.keys(props.outcomes).map((key, index) => {\n                return ({case: false, edit: false, index });\n            });\n            return { showCase };\n        }\n        return null;\n    }\n\n    constructor(props) {\n        super(props);\n        const showCase = Object.keys(props.outcomes).map((key, index) => {\n            return ({case: false, edit: false, index});\n        })\n       \n        this.state = { \n            showCase,\n            submitAlert: false,\n            removeAlert:false,\n            successAlert: false,\n            removeDecisionAlert: false,\n            copyDecisionAlert: false\n        };\n        this.handleExpand = this.handleExpand.bind(this);\n        this.handleRemoveCondition = this.handleRemoveCondition.bind(this);\n        this.handleRemoveConditions = this.handleRemoveConditions.bind(this);\n        this.editCondition = this.editCondition.bind(this);\n        this.cancelAlert = this.cancelAlert.bind(this);\n        this.removeCase = this.removeCase.bind(this);\n        this.removeDecisions = this.removeDecisions.bind(this);\n        this.copyDecisions = this.copyDecisions.bind(this);\n        this.handleCopyConditions = this.handleCopyConditions.bind(this);\n         \n    }\n\n\n    handleEdit(e, val) {\n        e.preventDefault();\n        this.setState({showRuleIndex: val});\n    }\n\n    editCondition(e, decisionIndex) {\n        e.preventDefault();\n        this.props.editCondition(decisionIndex);\n    }\n\n    handleExpand(e, index) {\n        e.preventDefault();\n        const cases = [...this.state.showCase];\n        let updateCase  = cases[index];\n        updateCase = { ...updateCase, case: !updateCase.case}\n        cases[index] = { ...updateCase };\n        this.setState({ showCase: cases });\n    }\n\n    handleRemoveCondition(e, decisionIndex) {\n        e.preventDefault();\n        this.setState({ removeAlert: true, removeDecisionIndex: decisionIndex });\n    }\n\n    handleRemoveConditions(e, outcome) {\n        e.preventDefault();\n        this.setState({ removeDecisionAlert: true, removeOutcome: outcome });\n    }\n\n    handleCopyConditions(e, outcome, decision) {\n        e.preventDefault();\n        this.setState({ copyDecisionAlert: true, copyOutcome: decision });\n    }\n\n    cancelAlert = () => {\n        this.setState({ removeAlert: false, successAlert: false, removeDecisionAlert: false, copyDecisionAlert: false });\n    }\n\n    removeCase = () => {\n        this.props.removeCase(this.state.removeDecisionIndex);\n        this.setState({ removeAlert: false, successAlert: true, successMsg: 'Selected condition is removed' });\n    }\n\n    removeDecisions = () => {\n        this.props.removeDecisions(this.state.removeOutcome);\n        this.setState({ removeDecisionAlert: false, successAlert: true, successMsg: 'Selected conditions are removed', removeOutcome: ''});\n    }\n\n    copyDecisions = () => {\n        this.props.copyDecisions(this.state.copyOutcome[0]);\n        this.setState({ copyDecisionAlert: false, successAlert: true, successMsg: 'Selected condition is copied', copyOutcome: []});\n    }\n\n    removeCaseAlert = () => {\n        return (<SweetAlert\n            warning\n            showCancel\n            confirmBtnText=\"Yes, Remove it!\"\n            confirmBtnBsStyle=\"danger\"\n            title=\"Are you sure?\"\n            onConfirm={this.removeCase}\n            onCancel={this.cancelAlert}\n            focusCancelBtn\n          >\n            You will not be able to recover the changes!\n          </SweetAlert>)\n    }\n\n    removeDecisionAlert = () => {\n        return (<SweetAlert\n            warning\n            showCancel\n            confirmBtnText=\"Yes, Remove it!\"\n            confirmBtnBsStyle=\"danger\"\n            title=\"Are you sure?\"\n            onConfirm={this.removeDecisions}\n            onCancel={this.cancelAlert}\n            focusCancelBtn\n          >\n            You will not be able to recover the changes!\n          </SweetAlert>)\n    }\n\n    copyDecisionAlert = () => {\n        return (<SweetAlert\n            warning\n            showCancel\n            confirmBtnText=\"Yes, Copy it!\"\n            title=\"Are you sure?\"\n            onConfirm={this.copyDecisions}\n            onCancel={this.cancelAlert}\n            focusCancelBtn\n          >\n            Copy\n          </SweetAlert>)\n    }\n\n    successAlert = () => {\n        return (<SweetAlert\n            success\n            title={this.state.successMsg}\n            onConfirm={this.cancelAlert}\n          >\n          </SweetAlert>);\n    }\n\n    alert = () => {\n        return (<div>\n             {this.state.removeAlert && this.removeCaseAlert()}\n             {this.state.removeDecisionAlert && this.removeDecisionAlert()}\n             {this.state.successAlert && this.successAlert()}\n             {this.state.copyDecisionAlert && this.copyDecisionAlert()}\n         </div>);\n    }\n\n    renderConditions = (conditions, decisionIndex) => {\n        const transformedData = transformRuleToTree(conditions);\n\n        return (<div className=\"rule-flex-container\">\n                { transformedData && transformedData.map((data, caseIndex) => (<div className=\"decision-box\" key={`case - ${caseIndex} - ${decisionIndex}`}>\n                    <div className=\"tool-flex\">\n                        <div><a href=\"\" onClick={(e) => this.editCondition(e, data.index)}><span className=\"fa fa-edit fa-2x\" /></a></div>\n                        <div><a href=\"\" onClick={((e) => this.handleRemoveCondition(e, data.index))}><span className=\"fa fa-trash-o fa-2x\" /></a></div>\n                    </div>\n                    <Tree \n                        treeData={data.node} \n                        count={data.depthCount}\n                    />\n                    { data.event.params && <div className=\"view-params-container\">\n                            <h4>Params  </h4>\n                            <ViewAttribute  items={data.event.params}/>\n                        </div> }\n                 </div>))}\n            </div>)\n    }\n\n    render() {\n        const { outcomes } = this.props;\n        const { showCase} = this.state;\n      \n        const conditions = Object.keys(outcomes).map((key, index) =>\n            (<div key={key}>\n                <PanelBox className={'boolean'}>\n                    <div className=\"index\">{index + 1}</div>\n                    <div className=\"name\">{String(key)}</div>\n                    <div className=\"type\">conditions <span className=\"type-badge\">{outcomes[key].length}</span></div>\n                    <div className=\"menu\">\n                        <a href=\"\" onClick={(e) => this.handleExpand(e, index)}> { showCase[index].case ? 'Collapse' : 'View Conditions' }</a>\n                        <a href=\"\" onClick={((e) => this.handleRemoveConditions(e, String(key)))}>Remove</a>\n                        <a href=\"\" onClick={((e) => this.handleCopyConditions(e, String(key), outcomes[key]))}>Copy</a>\n                    </div>\n                 </PanelBox>\n                 \n                 { showCase[index].case && this.renderConditions(outcomes[key], index)}\n            </div>));\n\n        return (<div className=\"\">\n            { this.alert() }\n            { conditions }\n        </div>);\n    }\n}\n\nDecisionDetails.defaultProps = ({\n    decisions: [],\n    editCondition: () => false,\n    removeCase: () => false,\n    removeDecisions: () => false,\n    outcomes: {},\n});\n\nDecisionDetails.propTypes = ({\n    decisions: PropTypes.array,\n    editCondition: PropTypes.func,\n    removeCase: PropTypes.func,\n    removeDecisions: PropTypes.func,\n    outcomes: PropTypes.object,\n});\n\nexport default DecisionDetails;","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport ToolBar from '../Toolbar/Toolbar';\nimport AddDecision from './AddDecision';\nimport DecisionDetails from './DecisionDetails';\nimport Banner from '../Panel/Banner';\nimport * as Message from '../../../Constants/RuleConstants/Messages';\nimport { transformRuleToTree } from '../../../utility/RuleUtils/Transform';\nimport { isContains } from '../../../utility/RuleUtils/StringUtils';\n\nclass Decision extends Component {\n\n    constructor(props){\n        super(props);\n        this.state={showAddRuleCase: false,\n             searchCriteria: '',\n             editCaseFlag: false,\n             editCondition: [],\n             message: Message.NO_DECISION_MSG,\n             decisions: props.decisions || [],\n             bannerflag: false };\n        this.handleAdd = this.handleAdd.bind(this);\n        this.updateCondition = this.updateCondition.bind(this);\n        this.editCondition = this.editCondition.bind(this);\n        this.addCondition = this.addCondition.bind(this);\n        this.removeCase = this.removeCase.bind(this);\n        this.cancelAddAttribute = this.cancelAddAttribute.bind(this);\n        this.removeDecisions = this.removeDecisions.bind(this);\n        this.copyDecisions = this.copyDecisions.bind(this);\n        this.handleReset = this.handleReset.bind(this);\n        this.handleSearch = this.handleSearch.bind(this);\n    }\n\n    handleSearch = (value) => {\n        this.setState({ searchCriteria: value})\n    }\n\n    handleAdd = () => {\n        this.setState({showAddRuleCase: true, bannerflag: true });\n    }\n\n    cancelAddAttribute = () => {\n        this.setState({ showAddRuleCase: false, editCaseFlag: false, bannerflag: false });\n    }\n\n    editCondition(decisionIndex) {\n        const decision = this.props.decisions[decisionIndex];\n        const editCondition = transformRuleToTree(decision);\n        let outputParams = [];\n        if (decision.event.params && Object.keys(decision.event.params).length > 0) {\n             outputParams = Object.keys(decision.event.params).map(key => ({ pkey: key, pvalue: decision.event.params[key] }))\n        }\n        \n        this.setState({ editCaseFlag: true, editCondition, \n            editDecisionIndex: decisionIndex, \n            editOutcome: { value: decision.event.type, params: outputParams }});\n    }\n\n    addCondition(condition) {\n        this.props.handleDecisions('ADD', { condition });\n        this.setState({ showAddRuleCase: false });\n    }\n\n    updateCondition(condition) {\n        this.props.handleDecisions('UPDATE', { condition, \n            decisionIndex: this.state.editDecisionIndex });\n        this.setState({ editCaseFlag: false });\n    }\n\n    removeCase(decisionIndex) {\n        this.props.handleDecisions('REMOVECONDITION', { decisionIndex});\n    }\n\n    removeDecisions(outcome) {\n        this.props.handleDecisions('REMOVEDECISIONS', { outcome});\n    }\n\n    copyDecisions(decision) {\n        this.props.handleDecisions('COPYDECISIONS', { decision });\n    }\n\n    handleReset() {\n        this.props.handleDecisions('RESET');\n    }\n\n    filterOutcomes = () => {\n        const { searchCriteria } = this.state;\n        const { outcomes } = this.props;\n        let filteredOutcomes = {};\n        Object.keys(outcomes).forEach((key) => {\n            if (isContains(key, searchCriteria)) {\n                filteredOutcomes[key] = outcomes[key];\n            }\n        });\n        return filteredOutcomes;\n    }\n\n\n    render() {\n        const { searchCriteria, bannerflag } = this.state;\n        const buttonProps = { primaryLabel: 'Add Rulecase', secondaryLabel: 'Cancel'};\n        const editButtonProps = { primaryLabel: 'Edit Rulecase', secondaryLabel: 'Cancel'};\n        const filteredOutcomes = searchCriteria ? this.filterOutcomes() : this.props.outcomes;\n        const { outcomes } = this.props;\n\n        return (\n            <div className=\"rulecases-container\">\n\n                { \n                    <ToolBar\n                        handleAdd={this.handleAdd}\n                        reset={this.handleReset}\n                        searchTxt={this.handleSearch}\n                    />\n                }\n\n                {\n                    this.state.showAddRuleCase &&\n                        <AddDecision\n                            attributes={this.props.attributes}\n                            addCondition={this.addCondition}\n                            cancel={this.cancelAddAttribute}\n                            buttonProps={buttonProps}\n                            ruleId={this.props.ruleId}\n                            description={this.props.description}\n                            ruleParams={this.props.ruleParams}\n                        />\n                }\n                \n                {\n                    this.state.editCaseFlag &&\n                        <AddDecision \n                            attributes={this.props.attributes}\n                            editCondition={this.state.editCondition}\n                            outcome={this.state.editOutcome}\n                            editDecision\n                            addCondition={this.updateCondition}\n                            cancel={this.cancelAddAttribute}\n                            buttonProps={editButtonProps}\n                            ruleId={this.props.ruleId}\n                            description={this.props.description}\n                            ruleParams={this.props.ruleParams}\n                        />\n                }\n                \n                <DecisionDetails\n                    outcomes={filteredOutcomes}\n                    editCondition={this.editCondition}\n                    removeCase={this.removeCase}\n                    removeDecisions={this.removeDecisions}\n                    copyDecisions={this.copyDecisions}\n                />\n                \n                {\n                    !bannerflag &&\n                        Object.keys(outcomes).length < 1 &&\n                            <Banner\n                                message={this.state.message}\n                                onConfirm={this.handleAdd}\n                            />\n                }\n            </div>);\n    }\n}\n\nDecision.defaultProps = ({\n    handleDecisions: () => false,\n    submit: () =>  false,\n    reset: () =>  false,\n    decisions: [],\n    attributes: [],\n    outcomes: {},\n});\n\nDecision.propTypes = ({\n    handleDecisions: PropTypes.func,\n    submit: PropTypes.func,\n    reset: PropTypes.func,\n    decisions: PropTypes.array,\n    attributes: PropTypes.array,\n    outcomes: PropTypes.object,\n});\n\nexport default Decision;","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\n\n\nclass Table extends Component {\n\n    render() {\n        const { columns } = this.props;\n\n        return (<table className=\"table\">\n            <tbody>\n                <tr>\n                {columns.map(value => (\n                    <th key={value}>{value}</th>\n                ))}\n                </tr>\n                {this.props.children}\n            </tbody>\n        </table>)\n    }\n}\n\nTable.defaultProps = ({\n    columns: [],\n    children: undefined,\n});\n\nTable.propTypes = ({\n   columns: PropTypes.array,\n   children: PropTypes.any,\n});\n\nexport default Table;","import { Engine } from 'json-rules-engine';\n\n\nexport const processEngine = (fact, conditions) => {\n    const engine = new Engine(conditions, { allowUndefinedFacts: true });\n    \n    // custom operators\n    engine.addOperator(\"DateGreaterThan\", (factValue, jsonValue) => {\n      if (!factValue) return false;\n\n      let factDate = Date.parse(factValue);\n      let jsonDate = Date.parse(jsonValue);\n\n      if(factDate > jsonDate){\n        return true;\n      } else {\n        return false;\n      }\n    });\n\n    engine.addOperator(\"DateLessThan\", (factValue, jsonValue) => {\n      if (!factValue) return false;\n\n      let factDate = Date.parse(factValue);\n      let jsonDate = Date.parse(jsonValue);\n\n      if(factDate < jsonDate){\n        return true;\n      } else {\n        return false;\n      }\n    });\n\n    engine.addOperator(\"DateLessThanInclusive\", (factValue, jsonValue) => {\n      if (!factValue) return false;\n\n      let factDate = Date.parse(factValue);\n      let jsonDate = Date.parse(jsonValue);\n\n      if(factDate <= jsonDate){\n        return true;\n      } else {\n        return false;\n      }\n    });\n\n    engine.addOperator(\"DateGreaterThanInclusive\", (factValue, jsonValue) => {\n      if (!factValue) return false;\n\n      let factDate = Date.parse(factValue);\n      let jsonDate = Date.parse(jsonValue);\n\n      if(factDate >= jsonDate){\n        return true;\n      } else {\n        return false;\n      }\n    });\n  \n    return engine.run(fact)\n        .then(results => {\n          return results.events\n        })\n        .catch((e) => {\n          console.error('Problem occured when processing the rules', e);\n          return Promise.reject({ error: e.message });\n        });\n};\n  \nexport const validateRuleset = async (facts, conditions) => {\n    const result = await processEngine(facts, conditions);\n    return result;\n}","import React from 'react';\nimport BeatLoader from \"react-spinners/BeatLoader\";\n\nconst Loader = () => {\n    return (<div className=\"sweet-loading\">\n    <BeatLoader\n      size={20}\n      color={\"#000\"}\n      loading={true}\n    />\n  </div>);\n}\n\nexport default Loader;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Panel from '../Panel/Panel';\nimport InputField from '../Forms/InputField';\nimport SelectField from '../Forms/SelectedMenuField';\nimport Button from '../Button/Button';\nimport Table from '../Table/Table';\nimport Banner from '../Panel/Banner';\nimport * as Message from '../../../Constants/RuleConstants/Messages';\nimport { validateRuleset } from '../../../rule-validations/RuleValidation';\nimport Loader from '../Loader/Loader';\nimport { ViewOutcomes } from '../Attributes/ViewAttributes';\n\nclass ValidateRules extends Component {\n\n    constructor(props) {\n        super(props);\n        const conditions = props.attributes.filter(attr => attr.type !== 'object' && ({\n            name: attr.name,\n            value: '',\n            field: attr.field || '',\n            values: attr.values || [],\n            factValueType: attr.factValueType || '',\n            actualname: attr.actualname\n        }));\n        \n\n        this.state = { \n            attributes: [],\n            conditions,\n            message: Message.NO_VALIDATION_MSG,\n            loading: false,\n            outcomes: [],\n            error: false,\n        };\n        this.handleAttribute = this.handleAttribute.bind(this);\n        this.handleValue = this.handleValue.bind(this);\n        this.handleAdd = this.handleAdd.bind(this);\n        this.validateRules = this.validateRules.bind(this);\n    }\n\n    handleAttribute(e, index) {\n        const attribute = { ...this.state.conditions[index], name: e.target.value };\n        const conditions = [ ...this.state.conditions.slice(0, index), attribute, ...this.state.conditions.slice(index + 1)];\n        this.setState({ conditions });\n    }\n\n    handleValue(e, index) {\n        let ActualName = this.state.conditions[index].actualname;\n        const attribute = { ...this.state.conditions[index], name: ActualName, value: e.target.value };\n        const conditions = [ ...this.state.conditions.slice(0, index), attribute, ...this.state.conditions.slice(index + 1)];\n        this.setState({ conditions });\n    }\n\n    handleAdd() {\n        this.setState({ conditions: this.state.conditions.concat([{name: ''}])});\n    }\n\n    validateRules(e) {\n        e.preventDefault();\n        let facts = {};\n        const { decisions, attributes } = this.props;\n        this.setState({loading: true});\n        this.state.conditions.forEach(condition => {\n           const attrProps = attributes.find(attr =>  attr.actualname == condition.actualname );\n           if (attrProps.type === 'number') {\n            facts[condition.name] = Number(condition.value);\n           } else if (condition.value && condition.value.indexOf(',') > -1) {\n            facts[condition.name] = condition.value.split(',');\n           } else {\n            facts[condition.name] = condition.value;\n           }\n        });\n        \n        validateRuleset(facts, decisions).then(outcomes => {\n            this.setState({loading: false, outcomes,  result: true, error: false, errorMessage: '',});\n        }).catch((e) => {\n            this.setState({loading: false, error: true, errorMessage: e.error, result: true, });\n        });\n    }\n\n    attributeItems = () => {\n        const { conditions, loading, outcomes, result, error, errorMessage } = this.state;\n        const { attributes } = this.props;\n        const options = attributes.map(att => att.name);\n\n        const formElements = conditions.map((condition, index) =>\n            (\n            <tr key={condition.name + index || 'item'+index}>\n                <td>\n                    <InputField\n                        // options={options}\n                        onChange={(e) => this.handleAttribute(e, index)}\n                        value={condition.name} readOnly\n                    />\n                </td>\n                <td colSpan='2'>\n                    {condition.field === 'input' && \n                        <InputField \n                            onChange={e => this.handleValue(e, index)}\n                            value={condition.value}\n                        />}\n                    {condition.field === 'dropdown' && condition.factValueType !== 'key' &&\n                         <SelectField \n                            options={condition.values}\n                            onChange={(e) => this.handleValue(e, index) }\n                            value={condition.value}\n                        />}\n                        {condition.field === 'dropdown' && condition.factValueType === 'key' &&\n                         <SelectField \n                            options={condition.values}\n                            onChange={(e) => this.handleValue(e, index) }\n                            value={condition.value}\n                            dropDownKeyValue={true}\n                        />}\n                    {condition.field === 'date' &&\n                        <div className='form-field'>\n                            <input\n                                type=\"date\"\n                                value={condition.value}                            \n                                label=\"Value\"\n                                onChange={(e) => this.handleValue(e, index)}\n                            >\n                            </input>\n                        </div>  \n                    }\n                </td>\n            </tr>)\n        );\n\n        let message;\n        if (result) {\n            if (error) {\n                message = <div className=\"form-error\">Problem occured when processing the rules. Reason is {errorMessage}</div>\n            } else if (outcomes && outcomes.length < 1) {\n                message = <div>No results found</div>\n            } else if (outcomes && outcomes.length > 0) {\n                message = (<div className=\"view-params-container\">\n                                <h4>Outcomes  </h4>\n                                <ViewOutcomes  items={outcomes}/>\n                            </div>)\n            } else {\n                message = undefined;\n            }\n        }\n        return (\n        <React.Fragment>\n            <Table columns={['Name', 'Value']}>\n                     {formElements}\n            </Table>\n            <div className=\"btn-group\">\n               <Button label={'Validate Ruleset'} onConfirm={this.validateRules} classname=\"primary-btn\" type=\"submit\" />\n           </div>\n            <hr/>\n                { loading && <Loader /> }\n                { !loading && message }\n        </React.Fragment>)\n    }\n\n    render() {\n        return (<React.Fragment>\n        {this.props.decisions.length < 1 && <Banner message={this.state.message}/> }\n        {this.props.decisions.length > 0 &&\n        <Panel>\n            <form>\n                <div>\n                    {this.attributeItems()}\n                </div>\n            </form>\n        </Panel>}\n        </React.Fragment>);\n    }\n}\n\nValidateRules.defaultProps = ({\n    attributes: [],\n    decisions: [],\n});\n\nValidateRules.propTypes = ({\n    attributes: PropTypes.array,\n    decisions: PropTypes.array,\n});\n\nexport default ValidateRules;","import * as ActionTypes from './ActionTypes';\n\nexport const removeDecision = (decisionIndex) => {\n    const payload = { decisionIndex };\n\n    return ({ type: ActionTypes.REMOVE_DECISION, payload});\n}\n\nexport const updateDecision = (condition, decisionIndex) => {\n    const payload = { condition, decisionIndex };\n\n    return ({ type: ActionTypes.UPDATE_DECISION, payload});\n}\n\nexport const addDecision = (condition) => {\n    const payload = { condition };\n    return ({ type: ActionTypes.ADD_DECISION, payload});\n}\n\nexport const removeDecisions = (outcome) => {\n    const payload = { outcome };\n\n    return ({ type: ActionTypes.REMOVE_DECISIONS, payload});\n}\nexport const copyDecisions = (decision) => {\n    const payload = decision;\n\n    return ({ type: ActionTypes.COPY_DECISIONS, payload});\n}\n\nexport const reset = () => {\n    return ({type: ActionTypes.RESET_DECISION});\n}\n\nexport const handleDecision = (action, editDecision={}) => (dispatch) => {\n    const { condition } = editDecision;\n    switch(action) {\n        case 'ADD': {\n            return dispatch(addDecision(condition));\n        }\n        case 'UPDATE': {\n            const { decisionIndex } = editDecision;\n            return dispatch(updateDecision(condition, decisionIndex)); \n        }\n        case 'REMOVECONDITION': {\n            const { decisionIndex } = editDecision;\n            return dispatch(removeDecision(decisionIndex));\n        }\n        case 'REMOVEDECISIONS': {\n            const { outcome } = editDecision;\n            return dispatch(removeDecisions(outcome));\n        }\n        case 'COPYDECISIONS': {\n            return dispatch(copyDecisions(editDecision));\n        }\n        case 'RESET': {\n            return dispatch(reset());\n        }\n    }\n};\n","import React, { Component } from 'react';\nimport Notification from '../Notification/Notification.jsx';\nimport { RULE_ERROR } from '../../../Constants/RuleConstants/Messages';\nimport PropTypes from 'prop-types';\n\nclass RuleErrorBoundary extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = { hasError: false };\n    }\n\n    static getDerivedStateFromError() {\n        this.setState({ hasError:  true });\n    }\n\n    render() {\n        return (<React.Fragment>\n            {this.state.hasError && \n                <Notification heading={RULE_ERROR.heading} body={RULE_ERROR.body} type={RULE_ERROR.type} />}\n            {this.props.children}\n        </React.Fragment>)\n    }\n}\n\nRuleErrorBoundary.defaultProps = {\n    children: undefined,\n};\n\nRuleErrorBoundary.propTypes = {\n    children: PropTypes.any,\n};\n\nexport default RuleErrorBoundary;","\n/* eslint-disable no-undef */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport PageTitle from '../Title/PageTitle';\nimport Tabs from '../Tabs/Tabs';\nimport Attributes from '../Attributes/Attributes';\nimport Decisions from '../Decisions/Decision';\nimport ValidateRules from '../Validate/ValidateRules';\nimport { handleAttribute } from '../../../store/actions/RuleActions/Attributes';\nimport { handleDecision } from '../../../store/actions/RuleActions/Decisions';\nimport Banner from '../Panel/Banner';\nimport * as Message from '../../../Constants/RuleConstants/Messages';\nimport { groupBy } from 'lodash/collection';\nimport RuleErrorBoundary from '../Error/RulesetError';\nimport SweetAlert from 'react-bootstrap-sweetalert';\nimport Button from '../Button/Button';\nimport { getFacts, getRuleParams, getFactsDataSql } from '../../../store/actions/RuleActions/Attributes';\nimport { editRule, addFacts } from '../../../store/actions/RuleActions/Ruleset';\n\nconst tabs = [{name: 'Facts'}, {name: 'Decisions'}, {name: 'Validate'}, {name: 'Generate'}];\nclass RulesetContainer extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n          activeTab: 'Facts',\n          generateFlag: false,\n          facts: [],\n          ruleParams: [],\n          saveRuleAlert: false,\n          factData: {}\n        };\n        this.generateFile = this.generateFile.bind(this);\n        this.cancelAlert = this.cancelAlert.bind(this);\n        this.handleSaveRule = this.handleSaveRule.bind(this);\n        this.handleTab = this.handleTab.bind(this);\n    }\n\n    async componentDidMount() {\n\n      getFacts().then((data) => {\n        this.setState({ facts: data});\n      }).catch(err => {\n        // console.log(err);\n      });\n\n      getRuleParams().then(data => {\n        this.setState({ ruleParams: data[0].params});\n      }).catch(err => {\n        // console.log(err);\n      });\n\n    }\n     \n    async handleTab(tabName) {\n        this.setState({activeTab: tabName});\n    }\n\n    generateFile() {\n      const { ruleset } = this.props;\n      const fileData = JSON.stringify(ruleset, null,'\\t');\n      const blob = new Blob([fileData], { type: \"application/json\" });\n      const url = URL.createObjectURL(blob);\n      const link = document.createElement('a');\n      link.download = ruleset.name +'.json';\n      link.href = url;\n      link.click();\n      this.setState({ generateFlag: true });\n    }\n\n    async handleSaveRule() {\n      let { decisions, ruleId, _id } = this.props.ruleset;\n     \n      if(ruleId === undefined){\n        ruleId = _id;\n      }\n      this.setState({ saveRuleAlert: true});\n      let result = await editRule(decisions, ruleId);\n    }\n\n    cancelAlert() {\n      this.setState({ generateFlag: false });\n      this.setState({ saveRuleAlert: false });\n    }\n\n    successAlert = () => {\n      const { name } = this.props.ruleset;\n      return (\n        <SweetAlert\n          success\n          title={\"File generated!\"}\n          onConfirm={this.cancelAlert}\n        > {`${name} rule is succefully generated at your default download location`}\n        </SweetAlert>);\n    }\n\n    saveRuleSuccessAlert = () => {\n      const { name } = this.props.ruleset;\n      return (\n        <SweetAlert\n          success\n          title={\"Rule Saved!\"}\n          onConfirm={this.cancelAlert}\n        > {`${name} rule is succefully saved.`}\n        </SweetAlert>);\n    }\n\n\n    render() {\n      const { \n        attributes,\n        decisions,\n        name,\n        description,\n        searchKeys,\n        ruleId,\n        criteria\n      } = this.props.ruleset;\n\n      const { ruleParams } = this.state;\n      const { factData } = this.props;\n\n      console.log('factData', factData);\n\n      const indexedDecisions = decisions && decisions.length > 0 && \n          decisions.map((decision, index) => ({ ...decision, index }));\n\n      let outcomes;\n      if (indexedDecisions && indexedDecisions.length > 0) {\n          outcomes = groupBy(indexedDecisions, data => data.event.type);\n      }\n      let filteredFactsCriteria = this.state.facts.filter((fact) => {\n        if(criteria === 'final') {\n          return fact.criteria === 'agent';\n        } else {\n          return fact.criteria === criteria;\n        }\n      });\n\n      for (let index = 0; index < filteredFactsCriteria.length; index++) {\n        let fact = filteredFactsCriteria[index];\n        if( factData !==null && factData !== undefined && factData.AttributeValues) {\n          let obj = factData.AttributeValues;\n          if(fact.source === 'api' && fact.name in obj){\n            fact.values = obj[fact.name];\n          }\n        }\n        \n      }\n      let filteredFactsIsActive = filteredFactsCriteria.filter((fact)=>fact.isActive);\n      console.log('filteredFactsCriteria', filteredFactsCriteria)\n      //const message = this.props.updatedFlag ? Message.MODIFIED_MSG : Message.NO_CHANGES_MSG;\n      const message =  Message.MODIFIED_MSG;\n      const saveMessage = Message.SAVE_MSG;\n      return <div>\n        {/* <RuleErrorBoundary> */}\n          <PageTitle name={name} description={description} />\n          <Tabs tabs={tabs} onConfirm={this.handleTab} activeTab={this.state.activeTab} />\n          <div className=\"tab-page-container\">\n              {this.state.activeTab === 'Facts' &&\n                <Attributes\n                  attributes={filteredFactsCriteria} \n                  handleAttribute={this.props.handleAttribute }\n                />\n              }\n\n              {this.state.activeTab === 'Decisions' && \n                <Decisions \n                  decisions={indexedDecisions || []}\n                  attributes={filteredFactsIsActive} \n                  handleDecisions={this.props.handleDecisions}\n                  ruleId={ruleId}\n                  description={description}\n                  outcomes={outcomes}\n                  ruleParams={ruleParams}\n                />\n              }\n\n              {this.state.activeTab === 'Validate' && \n                <ValidateRules\n                  attributes={filteredFactsCriteria} \n                  decisions={decisions}\n                />\n              }\n\n              {this.state.activeTab === 'Generate' && \n              <div>\n                <Banner \n                message={message}\n                ruleset={this.props.ruleset}\n                onConfirm={this.generateFile}\n                />\n                 <Banner \n                message={saveMessage}\n                ruleset={this.props.ruleset}\n                onConfirm={this.handleSaveRule}\n                />\n{/* \n                <Button\n                  label=\"Save Rule\"\n                  classname=\"btn-primary\"\n                  onConfirm={this.handleSaveRule}\n                 /> */}\n              </div>\n                 \n              }\n              {this.state.saveRuleAlert && this.saveRuleSuccessAlert()}\n              {this.state.generateFlag && this.successAlert()}\n          </div>\n        {/* </RuleErrorBoundary> */}\n      </div>\n    }\n}\n\nRulesetContainer.propTypes = {\n  ruleset: PropTypes.object,\n  handleAttribute: PropTypes.func,\n  handleDecisions: PropTypes.func,\n  updatedFlag: PropTypes.bool,\n  runRules: PropTypes.func,\n  factData: PropTypes.object\n}\n\nRulesetContainer.defaultProps = {\n  ruleset: {},\n  handleAttribute: () => false,\n  handleDecisions: () => false,\n  updatedFlag: false,\n  factData: {}\n}\n\nconst mapStateToProps = (state) => ({\n  ruleset: state?.Ruleset?.rulesets[state?.Ruleset?.activeRuleset],\n  updatedFlag: state?.Ruleset?.updatedFlag,\n  factData: state?.Ruleset?.factData\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  handleAttribute: (operation, attribute, index) => dispatch(handleAttribute(operation, attribute, index)),\n  handleDecisions: (operation, decision) => dispatch(handleDecision(operation, decision))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RulesetContainer);","import React, { Component } from 'react';\nimport { TitlePanel } from '../Panel/Panel';\nimport InputField from '../Forms/InputField';\nimport Button from '../Button/Button';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { includes } from 'lodash/collection';\nimport { createHashHistory } from 'history';\nimport { addRuleset, addRule } from '../../../store/actions/RuleActions/Ruleset';\nimport Notification from '../Notification/Notification.jsx';\nimport { RULE_AVAILABLE_CREATE } from '../../../Constants/RuleConstants/Messages';\n\nclass CreateRulesetContainer extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = { \n            name: '',\n            description: '',\n            searchKeys: [],\n            ruleId: '',\n            isActive: false,\n            error: {},\n            fileExist: false,\n            message: {},\n            product: '',\n            incentiveMonth:'',\n            criteria: '',\n            operationType: '',\n            RuleTypeMapping : {\n                \"booking\" : [\n                    { key : \"Basic\", value: \"basic\"}\n                ],\n                \"agent\" : [\n                    { key : \"Basic\", value: \"basic\"},\n                    { key : \"Deduction\", value: \"deduction\"},\n                    { key : \"Addon\", value: \"addon\"}\n                ]\n            }\n         };\n        this.onChangeName = this.onChangeName.bind(this);\n        this.onChangeDescription = this.onChangeDescription.bind(this);\n        this.handleAdd = this.handleAdd.bind(this);\n        this.addSearchKeys = this.addSearchKeys.bind(this);\n        this.handleProductChange = this.handleProductChange.bind(this);\n        this.handleIncentiveMonthChange = this.handleIncentiveMonthChange.bind(this);\n        this.handleCriteriaChange = this.handleCriteriaChange.bind(this);\n        this.handleOperationTypeChange =  this.handleOperationTypeChange.bind(this);\n\n    }\n\n\n\n    onChangeName(e) {\n        this.setState({ name: e.target.value });\n    }\n\n    onChangeDescription(e) {\n        this.setState({ description: e.target.value });\n    }\n\n    async handleAdd(e) {\n        e.preventDefault();\n        const history = createHashHistory();\n        if (!this.state.name || !this.state.name.trim()) {\n            this.setState({ error: { name: 'Please specify value' } });\n        } else if (includes(this.props.rulesetnames, this.state.name)) {\n            this.setState({ fileExist: true, message: RULE_AVAILABLE_CREATE });\n        } else {\n            let { \n                name,\n                description,\n                searchKeys,\n                ruleId,\n                isActive,\n                criteria,\n                operationType\n            } = this.state;\n\n            let body = {\n                name,\n                description,\n                criteria,\n                operationType,\n                searchKeys,\n                isActive,\n                decisions: []\n            };\n\n            let result = await addRule(body);\n            let insertedId='';\n            if(result !== null &&\n                result.data !== undefined &&\n                    result.data.data !== undefined &&\n                        result.data.data.insertedId !== undefined ) {\n                            insertedId = await result.data.data.insertedId;\n                }\n\n            this.setState({ ruleId: insertedId });\n            let payload = {\n                name,\n                description,\n                searchKeys,\n                ruleId: insertedId,\n                criteria,\n                operationType\n            }\n            this.props.addRuleset(payload);\n            this.props.history.push('/Ruleset');\n        }\n\n    }\n\n    addSearchKeys() {\n        const { searchKeys } = this.state;\n        this.setState({ searchKeys: [...searchKeys, { key: '', value: '' }]});\n     }\n\n     handleSearchKeys(e, type, index){\n        const { searchKeys } = this.state;\n        const newParams = searchKeys.map((param, ind) => {\n            if (index === ind) {\n               if (type === 'key') {\n                   return { ...param, key: e.target.value };\n               } else {\n                   return { ...param, value: e.target.value };\n               }\n            }\n            return param;\n        });\n        this.setState({searchKeys: newParams});\n    }\n\n    handleProductChange(e) {\n        const productId = e.target.value;\n        this.setState({ product: productId })\n        this.setState({\n            searchKeys: [\n                {\n                    key: 'Product',\n                    value: parseInt(productId)\n                },\n                {\n                    key: 'IncentiveMonth',\n                    value: this.state.incentiveMonth\n                }\n            ]\n        });\n    }\n\n    handleCriteriaChange(e) {\n        const criteria = e.target.value;\n        this.setState({ criteria: criteria });\n    }\n\n    handleOperationTypeChange(e) {\n        const operation = e.target.value;\n        this.setState({ operationType: operation });\n    }\n\n    handleIncentiveMonthChange(e) {\n        let date = e.target.value;\n        this.setState({ incentiveMonth: date });\n        this.setState({\n            searchKeys: [\n                {\n                    key: 'Product',\n                    value: parseInt(this.state.product)\n                },\n                {\n                    key: 'IncentiveMonth',\n                    value: date\n                }\n            ]\n        })\n    }\n\n    render() {\n        const { fileExist, message, description, searchKeys, RuleTypeMapping } = this.state;\n\n        return (\n            <div className=\"single-panel-container\">\n                {fileExist && <Notification body={message.body} heading={message.heading} type={message.type} />}\n                <TitlePanel title=\"Create Rules\" titleClass=\"fa fa-plus-square-o\">\n                    <form>\n                        <div className=\"upload-panel\">\n                            <InputField\n                                label=\"Name\" \n                                onChange={this.onChangeName}\n                                value={this.state.name}\n                                error={this.state.error.name}\n                                required={true}\n                            />\n                             \n                            {/* <InputField label=\"Description\" onChange={this.onChangeDescription} value={this.state.description} />\n                            <div className=\"attributes-header\">\n                                <div className=\"attr-link\" onClick={this.addSearchKeys}>\n                                    <span className=\"plus-icon\" /><span className=\"text\">Add Params</span>\n                                </div>\n                            </div> */}\n                        </div>\n                        <label htmlFor=\"description\"> Description</label>\n                        <textarea \n                            name=\"description\"\n                            id=\"description\"\n                            cols=\"59\"\n                            rows=\"2\"\n                            onChange={this.onChangeDescription}\n                            value={this.state.description}\n                            required></textarea>\n                        \n                        <div className = \"create-ruleset-input\">\n                            <div className=\"form-field\">\n                                <label for=\"product\">Product</label>\n                                <select \n                                    name=\"product\" \n                                    id=\"product\"\n                                    onChange={this.handleProductChange}\n                                    required>\n                                    <option value=\"\">Select Product</option>\n                                    <option value=\"7\">Term</option>\n                                    <option value=\"117\">Motor</option>\n                                    <option value=\"2\">Health</option>\n                                    <option value=\"115\">Investment</option>\n                                </select>\n                            </div>\n\n                            {/* <div className=\"form-field\">\n                                <label for=\"criteria\">Criteria</label>\n                                <select name=\"criteria\" id=\"criteria\" onChange={this.handleCriteriaChange}>\n                                    <option value=\"\">Select</option>\n                                    <option value=\"booking\">Booking</option>\n                                    <option value=\"agent\">Agent</option>\n                                </select>                            \n                            </div> */}\n                            \n                                <div className = \"form-field\">\n                                    <label for=\"IncentiveMonth\">Incentive Month</label>\n                                    <input \n                                        type=\"date\" \n                                        id=\"IncentiveMonth\"\n                                        name=\"IncentiveMonth\"\n                                        onChange={this.handleIncentiveMonthChange}\n                                        required></input>\n                                </div>\n                            {/* } */}\n                        </div>\n\n                        <div className = \"create-ruleset-input\">\n                            <div className=\"form-field\">\n                                <label for=\"criteria\">Criteria</label>\n                                <select \n                                    name=\"criteria\"\n                                    id=\"criteria\"\n                                    onChange={this.handleCriteriaChange}\n                                    required>\n                                    <option value=\"\">Select Criteria</option>\n                                    <option value=\"booking\">Booking</option>\n                                    <option value=\"agent\">Agent</option>\n                                </select>                            \n                            </div>\n\n                            <div className=\"form-field\">\n                                <label for=\"operation\">Operation Type</label>\n                                <select \n                                    name=\"operation\"\n                                    id=\"operation\"\n                                    onChange={this.handleOperationTypeChange}\n                                    required>\n                                    <option value=\"\">Select Operation</option>\n                                    {this.state.criteria !== '' && RuleTypeMapping[this.state.criteria].map((item) => \n                                        <option value={item.value}>{item.key}</option> )\n                                    }\n                                </select>                            \n                            </div>\n                        </div>                        \n                \n                        <Button label={'Create'} onConfirm={this.handleAdd} classname=\"primary-btn\" type=\"submit\" />\n                    </form>\n                </TitlePanel>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    rulesetnames: state?.Ruleset?.rulesets?.map(r => r.name),\n    ruleset: state?.Ruleset?.rulesets[state?.Ruleset?.activeRuleset]\n})\n\nconst mapDispatchToProps = dispatch => ({\n    addRuleset: (payload) => dispatch(addRuleset(payload))\n});\n\nCreateRulesetContainer.defaultProps = {\n    addRuleset: () => false,\n    rulesetnames: [],\n    ruleset: {}\n};\n\nCreateRulesetContainer.propTypes = {\n    rulesetnames: PropTypes.array,\n    addRuleset: PropTypes.func,\n    ruleset: PropTypes.object,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateRulesetContainer);","import React, { useState } from 'react';\r\nimport { useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { editRuleDetailsAction, editRuleDetails } from '../../../store/actions/RuleActions/Ruleset';\r\n\r\nimport { \r\n    Col,\r\n    Row,\r\n    Button,\r\n    Modal, \r\n    ModalHeader,\r\n    ModalBody,\r\n    ModalFooter,\r\n    Input,\r\n    FormGroup,\r\n    Label, \r\n    FormText \r\n  } from 'reactstrap';\r\n\r\nconst ModalRuleEdit = ({\r\n    modalState,\r\n    modalRule,\r\n    history\r\n  }) => {\r\n  let month = '', id = '', priorityValue = 1;\r\n\r\n  if(modalRule !== null && modalRule._id !== undefined ) {\r\n    id = modalRule._id;\r\n  }\r\n\r\n  if(modalRule !== null && modalRule.ruleId !== undefined ) {\r\n    id = modalRule.ruleId;\r\n  }\r\n  if(modalRule !== null && modalRule.priority !== undefined ) {\r\n    priorityValue = modalRule.priority;\r\n  }\r\n   \r\n  \r\n  if(modalRule !== null &&\r\n    modalRule.searchKeys !== undefined && \r\n      modalRule.searchKeys.length > 0) {\r\n        month = modalRule.searchKeys[1].value;\r\n      }\r\n  let [modal, setModal] = useState(modalState);\r\n  let [name, setName] = useState(modalRule.name);\r\n  let [description, setDescription] = useState(modalRule.description);\r\n  let [incentiveMonth, setIncentiveMonth] = useState(month);\r\n  let [ruleId, setRuleId] = useState(id);\r\n  let [isActive , setIsActive] = useState(modalRule.isActive);\r\n  let [priority, setPriority] = useState(priorityValue);\r\n   \r\n  let dispatch = useDispatch();\r\n\r\n  const toggle = () => {\r\n    setModal(!modal);\r\n  }\r\n\r\n  useEffect(() => {\r\n    toggle();\r\n    setName(modalRule.name);\r\n    setDescription(modalRule.description);\r\n    setRuleId(id);\r\n    setIncentiveMonth(month);\r\n    setIsActive(modalRule.isActive);\r\n    setPriority(priority);\r\n  }, [modalState]);\r\n\r\n  const handleRuleEdit = async () => {\r\n    let data = {name, description, incentiveMonth , isActive, priority};\r\n    let result = await editRuleDetails(data, ruleId);\r\n    dispatch(editRuleDetailsAction(data));\r\n    history.push('./Ruleset');\r\n  }\r\n\r\n  const handleNameChange = (e) => {\r\n    setName(e.target.value);\r\n  }\r\n\r\n  const handleDescriptionChange = (e) => {\r\n    setDescription(e.target.value);\r\n  }\r\n\r\n  const handleIncentiveMonthChange = (e) => {\r\n    setIncentiveMonth(e.target.value);\r\n  }\r\n\r\n  const handlePriorityChange = (e) => {\r\n    let priority = parseInt(e.target.value);\r\n    setPriority(priority);\r\n  }\r\n   \r\n  const handleIsActiveChange = (e) => {\r\n    setIsActive(e.target.checked);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Modal isOpen={modal} toggle={toggle} >\r\n        <ModalHeader toggle={toggle}>\r\n          Edit Ruleset \r\n          <input \r\n            type=\"checkbox\" \r\n            style={{\r\n              marginLeft: \"12rem\",\r\n              marginRight : \"1rem\",\r\n              width: \"15px\",\r\n              height: \"15px\"\r\n            }}\r\n            defaultChecked={isActive}\r\n            onClick={handleIsActiveChange}\r\n          />\r\n          Active\r\n        </ModalHeader>\r\n        \r\n      <ModalBody>\r\n\r\n      <FormGroup>\r\n        <Label for=\"RuleName\">Name</Label>\r\n        <Input \r\n          type=\"text\" \r\n          name=\"RuleName\" \r\n          id=\"RuleName\"\r\n          value={name}\r\n          onChange={handleNameChange}\r\n        />\r\n      </FormGroup>\r\n\r\n      <FormGroup >\r\n        <Label for=\"Description\" >Description</Label>\r\n        <Col sm={14}>\r\n          <Input\r\n            type=\"textarea\"\r\n            name=\"Description\"\r\n            id=\"Description\"\r\n            value={description}\r\n            onChange={handleDescriptionChange}\r\n          />\r\n        </Col>\r\n      </FormGroup>\r\n      <Row form>\r\n        <Col md={6}>\r\n          <FormGroup >    \r\n              <Label for=\"IncentiveMonth\" >IncentiveMonth</Label>\r\n              <Input\r\n                type=\"date\" \r\n                name=\"IncentiveMonth\"\r\n                id=\"IncentiveMonth\"\r\n                value={incentiveMonth}\r\n                onChange={handleIncentiveMonthChange}\r\n              />       \r\n            \r\n          </FormGroup>\r\n        </Col>\r\n        <Col md={6}>\r\n          <FormGroup >                 \r\n              <Label for=\"Priority\" >Priority</Label>\r\n              <Input\r\n                type=\"number\" \r\n                name=\"Priority\"\r\n                id=\"Priority\"\r\n                value={priority}\r\n                placeholder=\"Priority\"\r\n                onChange={handlePriorityChange}\r\n              />       \r\n            \r\n          </FormGroup>\r\n        </Col>\r\n      </Row>\r\n\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button color=\"primary\" onClick={handleRuleEdit}>Edit Rule</Button>{' '}\r\n          <Button color=\"secondary\" onClick={toggle}>Cancel</Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ModalRuleEdit;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { isContains } from '../../utility/RuleUtils/StringUtils';\nimport { uploadRuleset } from 'store/actions/RuleActions/Ruleset';\n\n//Components\nimport Pagination from 'react-bootstrap/Pagination';\nimport RuleErrorBoundary from './Error/RulesetError';\nimport ModalRuleEdit from './Modal/ModalRuleEdit';\nimport SweetAlert from 'react-bootstrap-sweetalert';\n\n//CSS\n// import 'bootstrap/dist/css/bootstrap.css';\nimport '../../assets/css/RulesListStyles.css';\n\n\n//Icons \nimport copyIcon from '../../assets/icons/copyicon.png';\nimport editIcon from '../../assets/icons/editicon.png';\nimport { addRule, updateRulesetIndex } from '../../store/actions/RuleActions/Ruleset';\n\nclass RulesTable extends Component {\n    constructor(props) {\n        super(props);\n        const len = props.data.length;\n        const lastPage = Math.floor((len + 9) / 10);\n\n        const rulesArray = props.data.map((item) => {\n            const searchKeys = item['searchKeys'];\n            let incentiveMonth='', product='';\n            let id = '';\n            if(item !== null && item.ruleId !== undefined) {\n                id = item.ruleId;\n            }\n\n            for (var i = 0; i < searchKeys.length; i++) {\n                if (searchKeys[i] !== null &&\n                      searchKeys[i].key !== undefined &&\n                        searchKeys[i]['key'] == 'IncentiveMonth') {\n                            incentiveMonth = searchKeys[i]['value'];\n\n                } else if (searchKeys[i] !== null &&\n                            searchKeys[i].key !== undefined && \n                              searchKeys[i]['key'] == 'Product') {\n                                product = searchKeys[i]['value'];\n                }\n            }\n            \n            return {\n                id: item['_id'],\n                name: item['name'],\n                description: item['description'],\n                incentiveMonth: incentiveMonth,\n                product: product,\n                criteria : item['criteria'],\n                item : item,\n            }\n        });\n\n        this.state = {\n            rulesArray: rulesArray,\n            filteredRules: rulesArray,\n            currentPage: 1,\n            firstPage: 1,\n            lastPage: lastPage,\n            allPages: Array.from({ length: lastPage }, (_, index) => index + 1),\n            searchText: '',\n            validSearch: true,\n            incentiveMonth: '2021-07-01',\n            productMap: {\n                '0': 'All',\n                '2': 'Health',\n                '7': 'Term',\n                '115': 'Investment',\n                '117': 'Motor'\n            },\n            productSelected: '0',\n            useTimeFrame: false,\n            modalState: true,\n            modalRule: {},\n            criteria:\"null\",\n            isActive:\"null\",\n            copyAlert: false,\n            successAlert : false\n        }\n\n        this.handleFirst = this.handleFirst.bind(this);\n        this.handleLast = this.handleLast.bind(this);\n        this.handleClick = this.handleClick.bind(this);\n        this.handlePrev = this.handlePrev.bind(this);\n        this.handleNext = this.handleNext.bind(this);\n        this.handleCopy = this.handleCopy.bind(this);\n        this.handleEdit = this.handleEdit.bind(this);\n        this.handleSearchChange = this.handleSearchChange.bind(this);\n        this.handleUseTimeFrame = this.handleUseTimeFrame.bind(this);\n        this.filterAndSetState = this.filterAndSetState.bind(this);\n    }\n\n    handleClick(event) {\n        const x = parseInt(event.target.innerText);\n        this.setState({ currentPage: x });\n    }\n\n    handleFirst(event) {\n        this.setState({ currentPage: 1 });\n    }\n\n    handleLast(event) {\n        this.setState({ currentPage: this.state.lastPage });\n    }\n\n    handleNext(event) {\n        const next = Math.min(this.state.lastPage, this.state.currentPage + 1);\n        this.setState({\n            currentPage: next,\n        })\n    }\n\n    handlePrev(event) {\n        const prev = Math.max(1, this.state.currentPage - 1);\n        this.setState({\n            currentPage: prev,\n        })\n    }\n\n    handleSearchChange(event) {\n        this.setState({\n            [event.target.name]: event.target.value,\n        }, this.filterAndSetState);\n    }\n\n    handleUseTimeFrame(event) {\n        this.setState({\n            useTimeFrame: event.target.checked,\n        }, this.filterAndSetState);\n    }\n\n    async handleCopy() {\n        var item = this.state.ruleToBeCopied;\n        if(item){\n            let copyName = item.name + \" copy\";\n            let uploadItem = Object.assign({}, item);\n            uploadItem.name = copyName;\n            uploadItem.isActive = false;\n            delete uploadItem[\"_id\"];\n            this.props.uploadRuleset(uploadItem);\n            let result = await addRule(uploadItem);  \n            this.setState({\n                copyAlert : false,\n                successAlert : true,\n                successMsg : \"Rule copied\",\n            })          \n        }\n        console.log(\"Copy CLicked\");\n        \n    }\n\n    handleEdit = (event, rule) =>  {\n        event.preventDefault();\n        this.setState({ modalRule: rule, modalState: !this.state.modalState });\n        this.props.updateRulesetIndex(rule.name);\n    }\n\n    filterAndSetState() {\n        const { isFiltered, filteredRules } = this.filterRules();\n        const len = filteredRules.length;\n        const lastPage = Math.floor((len + 9) / 10);\n\n        var validSearch = true;\n        if (isFiltered == true && filteredRules.length == 0) {\n            validSearch = false;\n        }\n\n        this.setState({\n            filteredRules: filteredRules,\n            currentPage: 1,\n            firstPage: 1,\n            lastPage: lastPage,\n            allPages: Array.from({ length: lastPage }, (_, index) => index + 1),\n            validSearch: validSearch,\n        });\n    }\n\n    filterRules() {\n        const {searchText , useTimeFrame , incentiveMonth , productSelected ,criteria ,  isActive} = this.state;\n        if (searchText.length == 0 && \n            useTimeFrame == false && \n            productSelected == '0' && \n            criteria == \"null\" && \n            isActive == \"null\") \n        {\n            return { isFiltered: false, filteredRules: this.state.rulesArray };\n        }\n        const filteredRules = this.state.rulesArray.filter(rule => {\n            return (((isContains(rule.name, searchText) || isContains(rule.description, searchText)) || searchText.length == 0)\n                && ((useTimeFrame == true && rule.incentiveMonth == incentiveMonth) || useTimeFrame == false)\n                && (rule.product == productSelected || productSelected == '0')\n                && (rule.criteria == criteria || criteria == \"null\")\n                && ((rule.item.isActive == true && isActive == \"true\") || (rule.item.isActive == false && isActive == \"false\") || (isActive == \"null\"))\n                );\n        }\n        );\n        return { isFiltered: true, filteredRules: filteredRules };\n    }\n\n    setCopyAlert(e,rule){\n        e.preventDefault();\n        this.setState({\n            ruleToBeCopied : rule,\n            copyAlert : true\n        });\n    }\n\n    cancelAlert = () => {\n        this.setState({ copyAlert: false, successAlert: false ,successMsg:\"\" });\n    }\n\n    copyRuleAlert = () => {\n        return (<SweetAlert\n            warning\n            showCancel\n            confirmBtnText=\"Yes, Copy it!\"\n            title=\"Are you sure?\"\n            onConfirm={this.handleCopy}\n            onCancel={this.cancelAlert}\n            focusCancelBtn\n          >\n            Copy\n          </SweetAlert>)\n    }\n\n    successAlert = () => {\n        return (<SweetAlert\n            success\n            title={this.state.successMsg}\n            onConfirm={this.cancelAlert}\n          >\n          </SweetAlert>);\n    }\n\n    alert = () => {\n        return (<div>\n             {this.state.copyAlert && this.copyRuleAlert()}\n             {this.state.successAlert && this.successAlert()}\n         </div>);\n    }\n\n    render() {\n        const { modalRule, modalState , validSearch ,currentPage} = this.state;\n        const lowerIndex = (currentPage - 1) * 10;\n        const rulesArray = this.state.filteredRules;\n        return (\n            <React.Fragment>\n                {this.alert()}\n                { this.state.modalRule.name!==undefined && \n                <ModalRuleEdit \n                    modalState={modalState}\n                    modalRule={modalRule}\n                    history = {this.props.historyProps}\n                />\n                }\n                <div className=\"search-container\">\n                    <div className=\"container-1\">\n                            <div className=\"container-1-box\"> \n                                <label>Search</label>\n                                <input \n                                name=\"searchText\" \n                                value={this.state.searchText} \n                                placeholder=\"Search by Name\"\n                                onChange={this.handleSearchChange} \n                                />\n                            </div>\n                            <input \n                                type=\"checkbox\" \n                                name=\"useTimeFrame\" \n                                style={{width :\"20px\" , height : \"20px\" , marginTop:\"5px\" , marginRight:\"10px\"}}\n                                value={this.state.useTimeFrame} \n                                onChange={this.handleUseTimeFrame} \n                            />\n                            <div className=\"container-1-box\">\n                                <label \n                                >Incentive Month</label>\n                                <input \n                                type=\"date\" \n                                name=\"incentiveMonth\" \n                                value={this.state.incentiveMonth} \n                                onChange={this.handleSearchChange} \n                                />\n                            </div>\n                    </div>\n                    <div className=\"container-2\">\n                        <div>\n                            <label>Criteria</label>\n                            <select \n                                name=\"criteria\" \n                                value={this.state.criteria} \n                                onChange={this.handleSearchChange}\n                            >\n                                <option key={\"default\"} value={\"null\"}>Please Select...</option>\n                                <option key={\"agent\"} value={\"agent\"}>Agent</option>\n                                <option key={\"booking\"} value={\"booking\"}>Booking</option>\n                            </select>\n                        </div>\n                        <div>\n                            <label>Product</label>\n                            <select \n                                name=\"productSelected\" \n                                value={this.state.productSelected} \n                                onChange={this.handleSearchChange}\n                            >\n                                {Object.entries(this.state.productMap).map((value, key) => <option key={key} value={value[0]}>{value[1]}</option>)}\n                            </select>\n                        </div>\n                        <div>\n                            <label>Active</label>\n                            <select \n                                name=\"isActive\" \n                                value={this.state.isActive} \n                                onChange={this.handleSearchChange}\n                            >\n                                <option key={\"default\"} value={\"null\"}>All</option>\n                                <option key={\"Active\"} value={\"true\"}>Active</option>\n                                <option key={\"Inactive\"} value={\"false\"}>Inactive</option>\n                            </select>\n                        </div>\n                    </div>\n                </div>\n\n                {!validSearch && <h1>No rules found</h1>}\n\n\n                {validSearch && \n                <div className=\"RulesListTable\">\n                    <table>\n                        <thead>\n                            <tr key='Heading'>\n                                <th itemScope=\"col\">Rule No.</th>\n                                <th itemScope=\"col\">name</th>\n                                <th itemScope=\"col\"> Incentive Month</th>\n                                <th itemScope=\"col\">Description</th>\n                                <th itemScope=\"col\">Priority</th>\n                                <th itemScope=\"col\">Actions</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {\n                                rulesArray.slice((this.state.currentPage - 1) * 10, this.state.currentPage * 10).map((item, i) => \n                                    {\n                                        const rule = item.item;\n                                        // console.log(\"next\");\n                                        // console.log(rule);\n                                        return (\n                                            <tr key={lowerIndex + i}>\n                                                <td>{lowerIndex + i + 1}</td>\n                                                <td>{item.name}</td>\n                                                <td>{item.incentiveMonth}</td>\n                                                <td>{item.description}</td>\n                                                <td>{item.item.priority}</td>\n                                                <td>\n                                                    <img src={editIcon} \n                                                        width=\"13\" \n                                                        height=\"13\" \n                                                        style={{ margin: \"12px\" }} \n                                                        onClick={(e) => this.handleEdit(e,rule)} \n                                                    />\n                                                    \n                                                    <img \n                                                        src={copyIcon} \n                                                        width=\"13\" \n                                                        height=\"13\" \n                                                        onClick={(e) => this.setCopyAlert(e,rule)} \n                                                    />\n                                                                                                \n                                                </td>\n                                            </tr>\n                                        )\n                                    }\n                                )\n                            }\n                        </tbody>\n                    </table>\n                </div>\n                }\n                \n                {validSearch && <Pagination>\n                    <Pagination.First onClick={this.handleFirst} />\n                    <Pagination.Prev onClick={this.handlePrev} />\n                    {\n                        this.state.allPages.map(item => {\n                            if (Math.abs(item - this.state.currentPage) <= 3) {\n                                return <Pagination.Item \n                                        key={item} \n                                        value={item} \n                                        active={item == this.state.currentPage} \n                                        onClick={this.handleClick}\n                                        >\n                                            {item}\n                                        </Pagination.Item>\n                            }\n                        })\n                    }\n                    <Pagination.Next onClick={this.handleNext} />\n                    <Pagination.Last key={this.state.lastPage} onClick={this.handleLast} />\n                </Pagination>}\n\n\n            </React.Fragment>\n        );\n    }\n}\n\nclass RulesList extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            historyProps: props.history\n        }\n    }\n    render() {\n        if (this.props.ruleset.length > 0) {\n            return (<React.Fragment>\n                <RuleErrorBoundary>\n                    <h4>RulesList</h4>\n                    <RulesTable \n                        data={this.props.ruleset}\n                        uploadRuleset = {this.props.uploadRuleset}\n                        updateRulesetIndex = {this.props.updateRulesetIndex}\n                        historyProps = {this.state.historyProps}\n                    />\n                </RuleErrorBoundary>\n            </React.Fragment>)\n        } else {\n            return (<h4>Loading Data...</h4>)\n        }\n    }\n}\n\nRulesList.propTypes = {\n    ruleset: PropTypes.array,\n    uploadRuleset: PropTypes.func,\n    updateRulesetIndex: PropTypes.func,\n    historyProps: PropTypes.object\n}\n\nRulesList.defaultProps = {\n    ruleset: [],\n    uploadRuleset: () => false,\n    updateRulesetIndex: () => false,\n    historyProps: {}\n}\n\nconst mapStateToProps = (state) => ({\n    ruleset: state?.Ruleset?.rulesets,\n});\n\n\nconst mapDispatchToProps = (dispatch) => ({\n    uploadRuleset: (ruleset) =>  dispatch(uploadRuleset(ruleset)),\n    updateRulesetIndex: (name) => dispatch(updateRulesetIndex(name)) \n});\n\nexport default connect(mapStateToProps , mapDispatchToProps)(RulesList);","import React, { Component } from 'react';\nimport '../../../assets/css/RulesListStyles.css';\nimport BeatLoader from \"react-spinners/BeatLoader\";\nimport { calculateBookingIncentive } from '../../../store/actions/RuleActions/Ruleset';\n\n\nfunction Details(props) {\n    const responseData = props.data;\n    return (\n        <>\n        <div className=\"booking-incentive-info\">\n            <div>\n                <label htmlFor=\"result\"> Booking APE</label>\n                <h3>{props.ape}</h3>\n            </div>\n            <div>\n                <label htmlFor=\"result\"> Result</label>\n                <h3>{props.result}</h3>\n            </div>\n        </div>\n        <div className=\"RulesListTable\">\n            <table>\n                <thead>\n                    <tr>\n                        <th itemScope=\"col\">Event</th>\n                        <th itemScope=\"col\">Expression</th>\n                        <th itemScope=\"col\">Weight / Amount</th>\n                        <th itemScope=\"col\">Rule Name</th>\n                        <th itemScope=\"col\">Rules Description</th>\n                        <th itemScope=\"col\">Calculated APE</th>\n                        <th itemScope=\"col\">Priority</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {\n                        responseData.map(function (item, i) {\n\n                            let data = JSON.parse(item);\n\n                            return (\n                                <tr>\n                                    <td>{i + 1}</td>\n                                    <td>{data.event.params.EXPRESSION}</td>\n                                    <td>{data.event.params.weight}{data.event.params.amount}</td>\n                                    <td>{data.name}</td>\n                                    <td>{data.event.params.description}</td>\n                                    <td>{data.event.params.value}</td>\n                                    <td>{data.priority}</td>\n                                </tr>\n                            );\n                        })\n                    }\n                </tbody>\n            </table>\n        </div>\n        </>\n    );\n}\n\nclass BookingTable extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            bookingId: '',\n            submitClicked: false,\n            loading : false,\n            searchResponse: {},\n            data: [],\n            searchData: {},\n            loading: false,\n            result: '',\n            rulesApplied: false\n        }\n        this.onChangeBookingId = this.onChangeBookingId.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n    onChangeBookingId(event) {\n        this.setState({\n            bookingId: event.target.value\n        })\n    }\n\n    async handleSubmit(event) {\n        console.log(\"Handling submit\");\n        event.preventDefault();\n        this.setState({ loading: true});\n        let response = await calculateBookingIncentive(this.state.bookingId);\n\n        if(response === null) {\n            this.setState({\n                loading: false,\n                rulesApplied: false,\n                submitClicked: true,\n            })\n        } else {\n            this.setState({\n                data: response?.rules?.results,\n                result: response?.result,\n                ape: response?.facts?.ape,\n                submitClicked: true,\n                loading: false,\n                rulesApplied: true\n            });\n        }\n        \n    }\n    render() {\n        const bookingIdStatus = this.state.submitClicked;\n        return (\n            <React.Fragment>\n                <form \n                    onSubmit={this.handleSubmit}\n                    style={{ backgroundColor: \"#ddd\", borderRadius: \"5px\", margin: \"10px\" }}\n                >\n                    <label\n                        style = {{margin: \"10px\"}}\n                    >\n                        Booking Id    \n                    </label>\n\n                    <input \n                        type=\"text\" \n                        name=\"bookingId\" \n                        value={this.state.bookingId} \n                        onChange={this.onChangeBookingId} \n                        style={{ border: \"none\", borderRadius: \"5px\", height: \"30px\", width: \"300px\" , margin: \"10px\" }} \n                        required \n                    />\n\n                    <button \n                        type=\"submit\" \n                        style={{ border: \"none\", borderRadius: \"5px\", height: \"30px\", margin: \"10px\" , color: \"#73879c\" }} \n                    >\n                        Submit\n                    </button>\n                </form>\n                {this.state.loading && \n                    <div style={{textAlign:\"center\"}}>\n                        <BeatLoader size={20}\n                            color={\"#3498db\"}\n                            loading={true}\n                        />\n                    </div>\n                }\n                {bookingIdStatus && this.state.rulesApplied &&  <Details data={this.state.data} result={this.state.result} ape={this.state.ape}/>}\n                {!this.state.rulesApplied && bookingIdStatus && <h4>No Rules Applied / Invalid Booking 😥</h4>}\n                 \n            </React.Fragment>\n        )\n    }\n}\n\nexport default BookingTable;","import axios from 'axios';\nimport React, { Component } from 'react';\nimport { Form , Button } from 'react-bootstrap';\nimport BeatLoader from \"react-spinners/BeatLoader\";\nimport Pagination from 'react-bootstrap/Pagination';\nimport config from './../../../config';\n\n\nclass AgentBooking extends Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            agentId : '',\n            incentiveMonth : \"2021-09\",\n            alertInvalidAgentId : false,\n            alertInvalidDate : false,\n            bookings : [],\n            currentPage: 1,\n            firstPage: 1,\n            lastPage: 1,\n            allPages: Array.from({ length: 1 }, (_, index) => index + 1),\n            response : false,\n            loading : false,\n        }\n        this.handleAgentIdChange = this.handleAgentIdChange.bind(this);\n        this.handleIncentiveMonthChange = this.handleIncentiveMonthChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n\n        this.handleFirst = this.handleFirst.bind(this);\n        this.handleLast = this.handleLast.bind(this);\n        this.handleClick = this.handleClick.bind(this);\n        this.handlePrev = this.handlePrev.bind(this);\n        this.handleNext = this.handleNext.bind(this);\n    }\n    \n    handleClick(event) {\n        const x = parseInt(event.target.innerText);\n        this.setState({ currentPage: x });\n    }\n\n    handleFirst(event) {\n        this.setState({ currentPage: 1 });\n    }\n\n    handleLast(event) {\n        this.setState({ currentPage: this.state.lastPage });\n    }\n\n    handleNext(event) {\n        const next = Math.min(this.state.lastPage, this.state.currentPage + 1);\n        this.setState({\n            currentPage: next,\n        })\n    }\n\n    handlePrev(event) {\n        const prev = Math.max(1, this.state.currentPage - 1);\n        this.setState({\n            currentPage: prev,\n        })\n    }\n\n    handleAgentIdChange(event){\n        event.preventDefault();\n        this.setState({\n            agentId : event.target.value,\n            alertInvalidAgentId : false,\n            alertInvalidDate : false,\n        });\n    }\n    \n    handleIncentiveMonthChange(event){\n        event.preventDefault();\n        this.setState({\n            [event.target.name]: event.target.value,\n            alertInvalidAgentId : false,\n            alertInvalidDate : false,\n        });\n    }\n\n    handleSubmit(event){\n        event.preventDefault();\n        let startDate = this.state.incentiveMonth + \"-01\";\n        let endDate = this.state.incentiveMonth + \"-31\";\n        this.setState({\n            loading : true,\n        })\n        const URL = `${config.api.base_url}/ruleengine/agentBookings/?startDate=${startDate}&endDate=${endDate}&agentId=${this.state.agentId}`;\n        axios.get(URL)\n        .then((res)=>{\n            const len = res.data.data.length;\n            const lastPage  = Math.floor((len+29)/30);\n            this.setState({\n                bookings : res.data.data,\n                currentPage : 1,\n                lastPage : lastPage,\n                allPages: Array.from({ length: lastPage }, (_, index) => index + 1),\n                loading : false,\n                response : true,\n            });\n        });\n\n    }\n\n\n    render(){\n        console.log(this.state);\n        const currentPage = this.state.currentPage;\n        const lowerIndex = (currentPage - 1) * 30;\n        return (\n            <React.Fragment>\n                <h4>Agent Bookings</h4>\n                <div>\n                    <form onSubmit={this.handleSubmit}>\n                        <table>\n                            <tr>\n                                <td>\n                                    <label>Agent Id</label>    \n                                    <input \n                                        name=\"agentId\" \n                                        type = \"string\"\n                                        value={this.state.agentId}\n                                        placeholder=\"PW00012\"\n                                        onChange = {this.handleAgentIdChange}\n                                    />\n                                </td>\n                                <td>\n                                    <label \n                                        style={{marginLeft:\"50px\"}}\n                                    >Incentive Month</label>    \n                                    <input \n                                        name=\"incentiveMonth\" \n                                        type = \"month\"\n                                        value={this.state.incentiveMonth}\n                                        onChange = {this.handleIncentiveMonthChange}\n                                    />\n                                </td>\n                            </tr>\n                            <tr>\n                                <td colspan=\"2\">\n                                    <Button type=\"submit\">\n                                        Search\n                                    </Button>\n                                </td>\n                            </tr>\n                        </table>\n                    </form>\n                </div>\n                {this.state.loading &&\n                    <div style={{textAlign:\"center\"}}>\n                        <BeatLoader size={20}\n                            color={\"#3498db\"}\n                            loading={true}\n                        />\n                    </div>\n                }\n                <div>\n                    {!this.state.loading && this.state.alertInvalidAgentId && <h1>Invalid Agent Id</h1>}\n                    {!this.state.loading && this.state.alertInvalidDate && <h1>Invalid Date</h1>}\n                </div>\n                {!this.state.loading && this.state.bookings.length>0 && !this.state.alertInvalidAgentId && !this.state.alertInvalidDate &&\n                <div className=\"RulesListTable\">\n                    <table>\n                        <thead>\n                            <tr key='Heading'>\n                                <th itemScope=\"col\">S No.</th>\n                                <th itemScope=\"col\">Booking Id</th>\n                                <th itemScope=\"col\"> Booking Date</th>\n                                <th itemScope=\"col\">Insurer Name</th>\n                                <th itemScope=\"col\">Booking Status</th>\n                                <th itemScope=\"col\">APE</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {\n                                this.state.bookings.slice((this.state.currentPage - 1) * 30, this.state.currentPage * 30).map((item,i) => \n                                    {\n                                        return (\n                                            <tr key={lowerIndex + i}>\n                                                <td>{lowerIndex + i + 1}</td>\n                                                <td>{item['leadid']}</td>\n                                                <td>{item['bookingdate']}</td>\n                                                <td>{item['insurershortname']}</td>\n                                                <td>{item['status']}</td>\n                                                <td>{item['ape']}</td>\n                                            </tr>\n                                        )\n                                    }\n                                )\n                            }\n                        </tbody>\n                    </table>\n                </div>\n                }\n                {!this.state.loading && this.state.bookings.length>0 && \n                    <Pagination>\n                        <Pagination.First onClick={this.handleFirst} />\n                        <Pagination.Prev onClick={this.handlePrev} />\n                        {\n                            this.state.allPages.map(item => {\n                                if (Math.abs(item - this.state.currentPage) <= 3) {\n                                    return <Pagination.Item \n                                            key={item} \n                                            value={item} \n                                            active={item == this.state.currentPage} \n                                            onClick={this.handleClick}\n                                            >\n                                                {item}\n                                            </Pagination.Item>\n                                }\n                            })\n                        }\n                        <Pagination.Next onClick={this.handleNext} />\n                        <Pagination.Last key={this.state.lastPage} onClick={this.handleLast} />\n                    </Pagination>\n                }\n                {!this.state.bookings.length>0 && this.state.response && !this.state.loading &&\n                    <h4>No bookings found</h4>\n                }\n            </React.Fragment>\n        )\n    }\n\n}\n\nexport default AgentBooking","import axios from 'axios';\nimport React, { Component } from 'react';\nimport { Form , Row , Col , Button } from 'react-bootstrap';\nimport BeatLoader from \"react-spinners/BeatLoader\";\nimport config from './../../../config';\n\nclass Query extends Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            query : \"\",\n            loading : false,\n            response : false,\n            columns : [],\n            data:[],\n        }\n        this.handleQueryChange = this.handleQueryChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n    \n    handleQueryChange(event){\n        event.preventDefault();\n        this.setState({\n            [event.target.name] : event.target.value,\n        });\n    }\n    \n    handleSubmit(event){\n        event.preventDefault();\n\n        this.setState({\n            loading : true,\n        })\n        const URL = `${config.api.base_url}/hdb/executeQuery/?queryString=${this.state.query}`;\n        axios.get(URL)\n        .then((res)=>{\n            this.setState({\n                loading : false,\n                response : true,\n                data : res.data.data,\n            });\n        });\n    }\n\n\n    render(){\n        return (\n            <React.Fragment>\n                <h4>Query</h4>\n                <div>\n                    <form onSubmit={this.handleSubmit}>\n                        <textarea \n                            style={{\n                                width: \"95%\",\n                                padding: \"10px\",\n                                margin: \"10px\"\n                            }}\n                            name=\"query\" \n                            value={this.state.agentId} \n                            onChange = {this.handleQueryChange} \n                            rows=\"5\"\n                        />\n                        <Button type=\"submit\">\n                            Search\n                        </Button>\n                    </form>\n                </div>\n                {this.state.loading &&\n                    <div style={{textAlign:\"center\"}}>\n                        <BeatLoader size={20}\n                            color={\"#3498db\"}\n                            loading={true}\n                        />\n                    </div>\n                }\n                {this.state.response && !this.state.loading &&\n                    <textarea \n                        style={{\n                            width: \"95%\",\n                            padding: \"10px\",\n                            margin: \"10px\"\n                        }}\n                        rows=\"20\"\n                    >\n                        {JSON.stringify(this.state.data,null,4)}\n                    </textarea>\n                }\n            </React.Fragment>\n        )\n    }\n\n}\n\nexport default Query;","import React, { useState, useEffect } from 'react';\nimport {HashRouter, Switch, Route } from 'react-router-dom';\nimport HomeContainer from '../Home/HomeContainer';\nimport RulesetContainer from '../Ruleset/RulesetContainer';\nimport CreateRulesetContainer from '../Ruleset/CreateRulesetContainer';\nimport RulesList from '../RulesList';\nimport BookingTable from '../Booking/BookingTable';\nimport AgentBooking from '../AgentBooking/AgentBooking';\nimport PropTypes from 'prop-types';\nimport { getFacts,getFactsDataSql } from '../../../store/actions/RuleActions/Attributes';\nimport { useDispatch } from 'react-redux';\nimport Query from '../TableQuery/Query';\n\nconst AppRoutes = (props) => {\n\n    let [AttributeValues, setAttributeValues] = useState([]);\n    let dispatch = useDispatch();\n    let closedState = props.closedState;\n\n    useEffect(async () => {\n        let facts = await getFacts();\n        let AttributeValues = {};\n        let mapActualName = {};\n        for (let index = 0; index < facts.length; index++) {\n            const attribute = facts[index];\n            mapActualName[attribute.name] = attribute.actualname;\n            if (attribute.field === 'dropdown' && attribute.source === 'api') {\n                let datasource = \"\";\n                if(attribute.datasource !== undefined) {\n                    datasource = attribute.datasource\n                }\n                let data = await getFactsDataSql(attribute.key, datasource);\n                if ( data !== null && data.key !== undefined) {\n                    AttributeValues[attribute.name] = data.data;\n                }\n            };\n        }\n        dispatch({type: 'ADD_FACTS_DATA_SQL', payload: { AttributeValues, mapActualName }});\n        \n    }, []);\n\n   \n         \n    return (<div className={`main-container ${props.closedState ? 'closed': 'open'}`}>\n        <HashRouter>\n            <Switch>\n                <Route path=\"/\" exact component={HomeContainer} />\n                <Route path=\"/Ruleset\" exact component={RulesetContainer} />\n                <Route path=\"/CreateRuleset\" exact component={CreateRulesetContainer} />   \n                <Route path=\"/RulesList\" exact component={RulesList} />\n                <Route path=\"/Booking\" exact component={BookingTable}/>\n                <Route path=\"/AgentBooking\" exact component={AgentBooking}/>\n                <Route path=\"/Query\" exact component={Query}/>\n            </Switch>   \n        </HashRouter>\n    </div>);\n\n};\n\nAppRoutes.defaultProps = {\n    closedState: false,\n    loggedIn: false,\n};\n\nAppRoutes.propTypes = {\n    closedState: PropTypes.bool,\n    loggedIn: PropTypes.bool,\n}\n\nexport default AppRoutes;","import React, {Component} from 'react';\nimport { connect } from 'react-redux';\nimport Title from '../Title/Title';\nimport NavigationPanel from '../Navigation/NavigationPanel';\nimport AppRoutes from '../Routes/AppRoutes';\nimport PropTypes from 'prop-types';\nimport { updateRulesetIndex, addRulesetsFromDb } from '../../../store/actions/RuleActions/Ruleset';\nimport { updateState } from '../../../store/actions/RuleActions/App';\nimport { createHashHistory } from 'history';\nimport { getRules } from '../../../store/actions/RuleActions/Ruleset';\nimport \"../../../assets/scss/rule-engine.scss\";\n\nclass RuleEngineApp extends Component {\n\n    constructor(props){\n        super(props);\n        this.state = {rules: []};\n        // const history = createHashHistory();\n        // if (!this.props.loggedIn) {\n        //     // history.push('./home');\n        // }\n    }\n\n    componentDidMount() {\n        getRules().then(data => {\n            this.setState({rules: data});\n            this.props.handleAddRulesets(data);\n        })\n    }\n    componentWillUnmount() {\n        if (this.unlisten){\n            this.unlisten();\n        }\n    }\n\n    render() {\n        const closednav = this.props.navState !== 'open';\n        return(\n            <React.Fragment>\n                <Title\n                    title={'Rule Engine'}\n                />\n\n                <NavigationPanel\n                    closedState={closednav}\n                    updateState={this.props.updateState}\n                    activeIndex={this.props.activeIndex}\n                    rulenames={this.props.rulenames}\n                    setActiveRulesetIndex={this.props.setActiveRulesetIndex}\n                    loggedIn={this.props.loggedIn}\n                />\n\n                <AppRoutes\n                    closedState={closednav}\n                    loggedIn={this.props.loggedIn}\n                />\n            </React.Fragment>\n        )\n    }\n}\n\nRuleEngineApp.defaultProps = {\n    rulenames: [],\n    setActiveRulesetIndex: () => false,\n    navState: undefined,\n    activeIndex: 0,\n    loggedIn: false,\n    updateState: () => false,\n};\n\nRuleEngineApp.propTypes = {\n    rulenames: PropTypes.array,\n    setActiveRulesetIndex: PropTypes.func,\n    navState: PropTypes.string,\n    loggedIn: PropTypes.bool,\n    updateState: PropTypes.func,\n    activeIndex: PropTypes.number,\n}\n\n\nconst mapStateToProps = (state, ownProps) => ({\n    navState: state?.App?.navState,\n    rulenames: state?.Ruleset?.rulesets?.map(r => r.name),\n    loggedIn: state?.app?.loggedIn,\n    activeIndex: state?.Ruleset?.activeRuleset,\n    ownProps\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n    handleClick: () => {\n        return false;\n    },\n    setActiveRulesetIndex: (name) => dispatch(updateRulesetIndex(name)),\n    updateState: (val) => dispatch(updateState(val)),\n    handleAddRulesets: (rules) => dispatch(addRulesetsFromDb(rules))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RuleEngineApp);"],"sourceRoot":""}