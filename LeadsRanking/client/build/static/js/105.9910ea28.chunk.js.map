{"version":3,"sources":["views/UnRegisteredChart.jsx","views/Common/AlertBox.jsx","store/actions/CommonMysqlAction.jsx"],"names":["UnRegisteredChart","props","handleChange","e","_isAMomentObject","setState","ReportDate","format","this","fetchCallBackData","handleStartDateChange","startdate","handleEndDateChange","enddate","validation","currentDate","isBefore","moment","state","maxdate","validationEndDate","Date","PageTitle","ProductId","subtract","ReportTime","SelectedSupervisors","ChartData","charttype","chartchange","bind","handleShow","columnlist","width","ProductList","config","root","cols","con","chartList","data","Id","Display","setTimeout","nextProps","CommonData","isError","BindChartData","GetMySqlData","GetCommonData","target","value","ReportData","TransferToAgentData","ProductWiseTransfer","hourlydata","_","groupBy","push","role","ProductWisedata","columns","Object","keys","forEach","key","Answered","countBy","item","callstatus","ABANDON","length","true","TransToProduct","product","TransToProductABANDON","mainQueueCallStatus","values","index","P_hourlydata","i","j","indexOf","TransferToAgent","FinalData","title","chartType","loader","height","options","is3D","chartArea","hAxis","minValue","vAxis","bar","groupWidth","legend","position","animation","startup","easing","duration","legendToggle","items","showAlert","AlertMsg","AlertVarient","AutoAndAnswerChart","CreateChart","console","log","finalChart","className","show","variant","body","md","tag","col","onChange","dateFormat","onClick","fetchSQLCallBackData","React","Component","connect","GetCommonspData","AlertBox","GetCommonData_fetched","Todos","dataToSend","statename","localStorage","setItem","JSON","stringify","type","constants","GET_COMMON_SUCCESS","payload","GetCommonData_fetch_error","error","GET_COMMON_FAIL","cb","undefined","dispatch","getState","getItem","parse","axios","get","api","base_url","params","then","catch","InsertData","post","INSERT_COMMON_SUCCESS","INSERT_COMMON_FAIL","InsertData_fetch_error","UpdateData","UPDATE_COMMON_SUCCESS","UPDATE_COMMON_FAIL","UpdateData_fetch_error","GetDataDirect"],"mappings":"+XAmCMA,E,kDACJ,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAiGRC,aAAe,SAACC,EAAGF,GAEbE,EAAEC,kBACJ,EAAKC,SAAS,CAAEC,WAAYH,EAAEI,OAAO,gBAAiB,WACpDC,KAAKC,wBAtGQ,EA6PnBC,sBAAwB,SAACP,EAAGF,GACtBE,EAAEC,kBACJ,EAAKC,SAAS,CAAEM,UAAWR,EAAEI,OAAO,gBAAiB,gBA/PtC,EAqQnBK,oBAAsB,SAACT,EAAGF,GACpBE,EAAEC,kBACJ,EAAKC,SAAS,CAAEQ,QAASV,EAAEI,OAAO,gBAAiB,gBAvQpC,EA4QnBO,WAAa,SAACC,GACZ,OAAQA,EAAYC,SAASC,IAAO,EAAKC,MAAMC,WA7Q9B,EAgRnBC,kBAAoB,SAACL,GACnB,OAAOA,EAAYC,SAASC,IAAO,IAAII,QA/QvC,EAAKH,MAAQ,CACXI,UAAW,qBACXtB,kBAAmB,GACnBuB,UAAW,IACXZ,UAAWM,MAASO,SAAS,EAAG,QAAQjB,OAAO,cAC/CM,QAASI,MAASO,SAAS,EAAG,QAAQjB,OAAO,cAC7CY,QAASF,MAASO,SAAS,GAAI,QAAQjB,OAAO,cAC9CD,WAAYW,MAASO,SAAS,EAAG,QAAQjB,OAAO,cAChDkB,WAAY,KACZC,oBAAqB,GACrBC,UAAW,GACXC,UAAW,eAIb,EAAKC,YAAc,EAAKA,YAAYC,KAAjB,gBACnB,EAAKC,WAAa,EAAKA,WAAWD,KAAhB,gBAClB,EAAKE,WAAa,CAAC,CAAE,KAAQ,WAAY,SAAY,WAAWC,MAAO,SAAW,CAAE,KAAQ,SAAU,SAAY,UAAY,CAAE,KAAQ,YAAa,SAAY,aAAe,CAAE,KAAQ,YAAa,SAAY,YAAaA,MAAO,SAAW,CAAE,KAAQ,aAAc,SAAY,aAAcA,MAAO,SAAW,CAAE,KAAQ,aAAc,SAAY,aAAcA,MAAO,SAAW,CAAE,KAAQ,aAAc,SAAY,cAAgB,CAAE,KAAQ,mBAAoB,SAAY,oBAAsB,CAAE,KAAQ,UAAW,SAAY,WAAa,CAAE,KAAQ,SAAU,SAAY,UAAY,CAAE,KAAQ,YAAa,SAAY,aAAe,CAAE,KAAQ,iBAAkB,SAAY,kBAAoB,CAAE,KAAQ,qBAAsB,SAAY,qBAAsBA,MAAO,SAAW,CAAE,KAAQ,sBAAuB,SAAY,sBAAuBA,MAAO,SAAW,CAAE,KAAQ,sBAAuB,SAAY,sBAAuBA,MAAO,SAAW,CAAE,KAAQ,sBAAuB,SAAY,wBAEn+B,EAAKC,YAAc,CACjBC,OACA,CACEC,KAAM,WACNC,KAAM,CAAC,WAAY,0BACnBC,IAAK,CAAC,CAAE,UAAY,MAGxB,EAAKC,UAAY,CACfJ,OACA,CACEC,KAAM,YACNI,KAAM,CACJ,CAAEC,GAAI,WAAYC,QAAS,YAC3B,CAAED,GAAI,cAAeC,QAAS,eAC9B,CAAED,GAAI,YAAaC,QAAS,aAC5B,CAAED,GAAI,YAAaC,QAAS,aAC5B,CAAED,GAAI,MAAOC,QAAS,OACtB,CAAED,GAAI,WAAYC,QAAS,eAvChB,E,sDAiDnB,WACEC,WAAW,WACTnC,KAAKC,qBACLqB,KAAKtB,MAAO,O,uCAGhB,SAA0BoC,GACnBA,EAAUC,WAAWC,UACxBtC,KAAKH,SAAS,CAAEL,kBAAmB4C,EAAUC,WAAV,eAEnCrC,KAAKuC,cAAcH,EAAUC,WAAV,iB,wBAGvB,SAAW1C,GAETK,KAAKH,SAAS,CAAEoB,WAAY,IAAIJ,KAAQK,oBAAqBvB,EAAEuB,sBAC/DiB,WAAW,WACTnC,KAAKC,qBACLqB,KAAKtB,MAAO,O,+BAMhB,WAC4BA,KAAKU,MAAMQ,oBACrClB,KAAKP,MAAM+C,aAAa,CACtBZ,KAAM,eACNb,UAAWf,KAAKU,MAAMK,UACtBjB,WAAYE,KAAKU,MAAMZ,e,kCAG3B,WAC4BE,KAAKU,MAAMQ,oBACrClB,KAAKP,MAAMgD,cAAc,CACvBb,KAAM,eACNb,UAAWf,KAAKU,MAAMK,UACtBZ,UAAWH,KAAKU,MAAMP,UACtBE,QAASL,KAAKU,MAAML,Y,yBAIxB,SAAYV,EAAGF,GACbO,KAAKH,SAAS,CACZuB,UAAWzB,EAAE+C,OAAOC,U,2BAgBxB,SAAcC,GAEZ,GAAIA,EAAY,CAEd,IAAIZ,EAAO,GACPa,EAAsB,GACtBC,EAAsB,GAEtBC,EAAaC,IAAEC,QAAQL,EAAY,QACvCZ,EAAKkB,KAAK,CAAC,GAAI,QAAS,CAAEC,KAAM,cAAgB,WAAY,CAAEA,KAAM,cAAgB,UAAW,CAAEA,KAAM,gBACvGN,EAAoBK,KAAK,CAAC,GAAI,0BAA2B,CAAEC,KAAM,cAAgB,yBAA0B,CAAEA,KAAM,cAAgB,2BAA4B,CAAEA,KAAM,gBAEvK,IAAIC,EAAkBJ,IAAEC,QAAQL,EAAY,WACxCS,EAAU,CAAC,IACfC,OAAOC,KAAKH,GAAiBI,SAAQ,SAAUC,GAClC,IAAPA,IACFJ,EAAQH,KAAKO,GACbJ,EAAQH,KAAK,CAAEC,KAAM,mBAGzBL,EAAoBI,KAAKG,GAEzBC,OAAOC,KAAKR,GAAYS,SAAQ,SAAUC,GAAM,IAAD,oBACzCC,EAAWV,IAAEW,QAAQZ,EAAWU,IAAM,SAAUG,GAClD,MAA0B,WAAnBA,EAAKC,cAEVC,EAAUd,IAAEW,QAAQZ,EAAWU,IAAM,SAAUG,GACjD,MAA0B,WAAnBA,EAAKC,cAEd7B,EAAKkB,KAAK,CAACO,EAAKV,EAAWU,GAAKM,OAAQhB,EAAWU,GAAKM,OAA9C,UAAsDL,EAASM,YAA/D,QAAuE,EAAvE,UAA0EN,EAASM,YAAnF,QAA2F,EAA3F,UAA8FF,EAAQE,YAAtG,QAA8G,EAA9G,UAAiHF,EAAQE,YAAzH,QAAiI,IAE3I,IAAIC,EAAiBjB,IAAEW,QAAQZ,EAAWU,IAAM,SAAUG,GACxD,MAAuB,IAAhBA,EAAKM,WAGVC,EAAwBnB,IAAEW,QAAQZ,EAAWU,IAAM,SAAUG,GAC/D,MAAmC,WAA5BA,EAAKQ,qBAAoD,IAAhBR,EAAKM,WAGvDrB,EAAoBK,KAAK,CAACO,EAAD,UAAMC,EAASM,YAAf,QAAuB,EAAvB,UAA0BN,EAASM,YAAnC,QAA2C,EAA3C,UAA8CC,EAAeD,YAA7D,QAAqE,EAArE,UAAwEC,EAAeD,YAAvF,QAA+F,EAA/F,UAAkGG,EAAsBH,YAAxH,QAAgI,EAAhI,UAAmIG,EAAsBH,YAAzJ,QAAiK,IAG1L,IADA,IAAIK,EAAS,CAACZ,GACLa,EAAQ,EAAGA,EAAQjB,EAAQU,OAAQO,IAC1CD,EAAOnB,KAAK,GAEdJ,EAAoBI,KAAKmB,MAqB3Bf,OAAOC,KAAKH,GAAiBI,SAAQ,SAAUC,GAC7C,GAAW,IAAPA,EAAW,CAEb,IAAIc,EAAevB,IAAEC,QAAQG,EAAgBK,GAAM,QACnDH,OAAOC,KAAKgB,GAAcf,SAAQ,SAAUI,GAM1C,IAAK,IAAIY,EAAI,EAAGA,EAAI1B,EAAoBiB,OAAQS,IAE9C,GAAI1B,EAAoB0B,GAAG,IAAMZ,EAAM,CACrC,IAAIa,EAAIpB,EAAQqB,QAAQjB,GAGxBX,EAAoB0B,GAAGC,GAAKF,EAAaX,GAAMG,OAC/CjB,EAAoB0B,GAAGC,EAAI,GAAKF,EAAaX,GAAMG,eAgB7D/D,KAAKH,SAAS,CAAEsB,UAAWa,EAAM2C,gBAAiB9B,EAAqB+B,UAAW9B,O,yBAKtF,SAAY3B,EAAW0D,GAErB,GAAI1D,GAAaA,EAAU4C,OAAS,EAmClC,OA/BE,kBAAC,IAAD,CACEe,UAAW9E,KAAKU,MAAMU,UACtBY,KAAMb,EACN4D,OAAQ,8CACRtD,MAAM,OACNuD,OAAO,QACPC,QAAS,CACPJ,MAAOA,EACPK,MAAM,EAENC,UAAW,CAAE1D,MAAO,OACpB2D,MAAO,CACLP,MAAO1D,EAAU,GAAG,GACpBkE,SAAU,GAEZC,MAAO,CACLT,MAAO,QACPQ,SAAU,GAEZE,IAAK,CAAEC,WAAY,OACnBC,OAAQ,CAAEC,SAAU,UACpBC,UAAW,CACTC,SAAS,EACTC,OAAQ,SACRC,SAAU,MAGdC,cAAY,M,oBA8BpB,WAAU,IAAD,WACD1C,EAAUrD,KAAKwB,WACrB,EAA+FxB,KAAKU,MAArFI,GAAf,EAAQkF,MAAR,EAAelF,WAAWtB,EAA1B,EAA0BA,kBAAmByG,EAA7C,EAA6CA,UAAWC,EAAxD,EAAwDA,SAAUC,EAAlE,EAAkEA,aAI9DC,GAJJ,EAAgFnF,WAIvDjB,KAAKqG,YAAYrG,KAAKU,MAAMS,UAAW,0CAC5DwD,EAAkB3E,KAAKqG,YAAYrG,KAAKU,MAAMiE,gBAAiB,iBACnE2B,QAAQC,IAAIvG,KAAKU,MAAMkE,WACvB,IAAI4B,EAAaxG,KAAKqG,YAAYrG,KAAKU,MAAMkE,UAAW,2BAGxD,OACE,oCACE,yBAAK6B,UAAU,WACb,kBAAC,IAAD,CAAUC,KAAMT,EAAWU,QAASR,EAAcS,KAAMV,IACxD,kBAAC,IAAD,MACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKW,GAAG,MACN,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKA,GAAI,GACP,kBAAC,IAAD,CAAWC,IAAI,MAAMhG,IAGvB,kBAAC,IAAD,CAAK+F,GAAI,GAEP,kBAAC,IAAD,CACElE,MAAO3C,KAAKU,MAAMU,UAClB2F,IAAK/G,KAAK+B,UACViF,SAAUhH,KAAKqB,eAKnB,kBAAC,IAAD,CAAKwF,GAAI,GACP,kBAAC,GAAD,GAAUlE,MAAO,IAAI9B,KACnBoG,WAAW,cADb,sBAESjH,KAAKU,MAAMP,WAFpB,4BAGeH,KAAKM,YAHpB,0BAIY,SAAAG,GAAM,OAAI,EAAKP,sBAAsBO,MAJjD,qBAKO,GALP,4BAMc,GANd,KASF,kBAAC,IAAD,CAAKoG,GAAI,GACP,kBAAC,GAAD,GAAUlE,MAAO,IAAI9B,KACnBoG,WAAW,cADb,sBAESjH,KAAKU,MAAML,SAFpB,4BAGeL,KAAKY,mBAHpB,0BAIY,SAAAH,GAAM,OAAI,EAAKL,oBAAoBK,MAJ/C,qBAKO,GALP,4BAMc,GANd,KASF,kBAAC,IAAD,CAAKoG,GAAI,GACT,kBAAC,IAAD,CAAQF,QAAQ,UAAUO,QAAS,kBAAM,EAAKC,yBAA9C,SADA,OAGA,kBAAC,IAAD,CAAQR,QAAQ,UAAUO,QAAS,kBAAM,EAAKjH,sBAA9C,YAKJ,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAK4G,GAAG,KACLT,GAEH,kBAAC,IAAD,CAAKS,GAAG,KACLlC,GAEH,kBAAC,IAAD,CAAKkC,GAAG,MACLL,IAKL,kBAAC,IAAD,CACEnD,QAASA,EACTrB,KAAOxC,GAAqBA,EAAkBuE,OAAS,EAAKvE,EAAoB,e,GArWpE4H,IAAMC,WA8XvBC,uBANf,SAAyB5G,GACvB,MAAO,CACL2B,WAAY3B,EAAM2B,cAMpB,CACEG,iBACAC,kBACA8E,qBALWD,CAOb9H,I,8FCnaIgI,E,kDACF,WAAY/H,GAAQ,IAAD,8BACf,cAAMA,IACDiB,MAAQ,CACTgG,KAAM,EAAKjH,MAAMiH,MAHN,E,sDAMnB,c,uCAGA,SAA0BtE,GACtBpC,KAAKH,SAAS,CAAE6G,KAAMtE,EAAUsE,OAC5BtE,EAAUsE,MACVvE,WAAW,WACPnC,KAAKH,SAAS,CAAE6G,MAAM,KACxBpF,KAAKtB,MAAO,O,oBAGtB,WACI,OAAIA,KAAKU,MAAMgG,KAEP,kBAAC,IAAD,CAAOC,QAAS3G,KAAKP,MAAMkH,SACtB3G,KAAKP,MAAMmH,MAKb,S,GA3BIQ,IAAMC,WAgCdG,O,iCCrCf,0KAIMC,EAAwB,SAAAC,GAM5B,OAJIA,EAAMC,WAAWjH,OAASgH,EAAMC,WAAWC,WAC7CC,aAAaC,QAAQJ,EAAMC,WAAWC,UAAWG,KAAKC,UAAUN,EAAM1F,OAGjE,CACLiG,KAAMC,IAAUC,mBAChBC,QAASV,EAAM1F,KACfJ,KAAM8F,EAAMC,WAAW/F,OAIrByG,EAA4B,SAAAC,GAChC,MAAO,CACLL,KAAMC,IAAUK,gBAChBH,QAASE,IAIA9F,EAAe,SAACmF,EAAWa,GAEtC,GAAuB,MAAnBb,EAAW3F,WAAmCyG,GAAnBd,EAAW3F,KACxC,OAAO,SAAU0G,EAAUC,GACzBD,EAASjB,EAAsB,CAAEzF,KAAM2F,EAAW3F,KAAM2F,WAAYA,MAGxE,IACE,GAAKA,EAAWjH,OAASmH,aAAae,QAAQjB,EAAWC,YAAeC,aAAae,QAAQjB,EAAWC,WAEtG,OAAO,SAAUc,EAAUC,GACzB,IAAI3G,EAAO+F,KAAKc,MAAMhB,aAAae,QAAQjB,EAAWC,YACtDc,EAASjB,EAAsB,CAAEzF,KAAMA,EAAM2F,WAAYA,MAI/D,MAAOhI,IAKP,OAAO,SAAU+I,EAAUC,GACzBG,IACGC,IAAIpH,IAAOqH,IAAIC,SAAW,cAAe,CACxCC,OAAQvB,IAETwB,MAAK,SAAAnH,GACA2F,EAAWjH,OAASiH,EAAWC,WACjCC,aAAaC,QAAQH,EAAWC,UAAWG,KAAKC,UAAUhG,EAAKA,KAAKA,OAElEwG,GACFA,EAAGxG,GAEL0G,EAASjB,EAAsB,CAAEzF,KAAMA,EAAKA,KAAKA,KAAK,GAAI2F,WAAYA,QAEvEyB,OAAM,SAAAd,GACLI,EAASL,EAA0BC,SAuB9Be,EAAa,SAAC1B,EAAYa,GACrC,OAAO,SAAUE,EAAUC,GACzBG,IACGQ,KAAK3H,IAAOqH,IAAIC,SAAW,gBAAiB,CAC3CjH,KAAM2F,IAEPwB,MAAK,SAAAnH,GArBe,IAAA0F,EAsBfc,GACFA,EAAGxG,GAEL0G,GAzBmBhB,EAyBS,CAAE1F,KAAMA,EAAKA,MAvBxC,CACLiG,KAAMC,IAAUqB,sBAChBnB,QAASV,EAAM1F,WAuBZoH,OAAM,SAAAd,GACLI,EApBuB,SAAAJ,GAC7B,MAAO,CACLL,KAAMC,IAAUsB,mBAChBpB,QAASE,GAiBImB,CAAuBnB,SAqB3BoB,EAAa,SAAC/B,EAAYa,GAErC,OAAO,SAAUE,EAAUC,GACzBG,IACGQ,KAAK3H,IAAOqH,IAAIC,SAAW,gBAAiB,CAC3CjH,KAAM2F,IAEPwB,MAAK,SAAAnH,GAtBe,IAAA0F,EAuBfc,GACFA,EAAGxG,GAEL0G,GA1BmBhB,EA0BS,CAAE1F,KAAMA,EAAKA,MAxBxC,CACLiG,KAAMC,IAAUyB,sBAChBvB,QAASV,EAAM1F,WAwBZoH,OAAM,SAAAd,GACLI,EArBuB,SAAAJ,GAC7B,MAAO,CACLL,KAAMC,IAAU0B,mBAChBxB,QAASE,GAkBIuB,CAAuBvB,SAQ3BwB,EAAgB,SAACnC,EAAYa,GAExC,IACE,GAAKb,EAAWjH,OAASmH,aAAae,QAAQjB,EAAWC,YAAeC,aAAae,QAAQjB,EAAWC,WAAY,CAElH,IAAI5F,EAAO+F,KAAKc,MAAMhB,aAAae,QAAQjB,EAAWC,YAEtD,YADAY,EAAGxG,IAIP,MAAOrC,IAIPmJ,IACGC,IAAIpH,IAAOqH,IAAIC,SAAW,cAAe,CACxCC,OAAQvB,IAETwB,MAAK,SAAAnH,GACA2F,EAAWjH,OAASiH,EAAWC,WACjCC,aAAaC,QAAQH,EAAWC,UAAWG,KAAKC,UAAUhG,EAAKA,KAAKA,OAEtEwG,EAAGxG,EAAKA,KAAKA,SAIdoH,OAAM,SAAAd","file":"static/js/105.9910ea28.chunk.js","sourcesContent":["\r\nimport React from \"react\";\r\nimport {\r\n  GetMySqlData\r\n} from \"../store/actions/CommonMysqlAction\";\r\nimport {\r\n  GetCommonData, GetCommonspData, GetDataDirect\r\n} from \"../store/actions/CommonAction\";\r\nimport { connect } from \"react-redux\";\r\nimport DataTable from './Common/DataTableWithFilter';\r\nimport DropDown from './Common/DropDownList';\r\nimport moment from 'moment';\r\nimport AlertBox from './Common/AlertBox';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nimport * as Datetime from 'react-datetime';\r\nimport 'react-datetime/css/react-datetime.css'\r\n\r\nimport { Chart } from \"react-google-charts\";\r\nimport _ from 'underscore';\r\n\r\n// reactstrap components\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  Table,\r\n  Row,\r\n  Col\r\n} from \"reactstrap\";\r\nimport { ButtonGroup, Button, Modal, Form } from 'react-bootstrap';\r\nimport { func } from \"prop-types\";\r\n\r\nclass UnRegisteredChart extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      PageTitle: \"UnRegistered Chart\",\r\n      UnRegisteredChart: [],\r\n      ProductId: 117,\r\n      startdate: moment().subtract(1, 'days').format(\"YYYY-MM-DD\"),\r\n      enddate: moment().subtract(1, 'days').format(\"YYYY-MM-DD\"),\r\n      maxdate: moment().subtract(60, 'days').format(\"YYYY-MM-DD\"),\r\n      ReportDate: moment().subtract(0, 'days').format(\"YYYY-MM-DD\"),\r\n      ReportTime: null,\r\n      SelectedSupervisors: [],\r\n      ChartData: [],\r\n      charttype: 'ColumnChart',\r\n\r\n    };\r\n    \r\n    this.chartchange = this.chartchange.bind(this);\r\n    this.handleShow = this.handleShow.bind(this);\r\n    this.columnlist = [{ \"name\": \"calltime\", \"selector\": \"calltime\",width: \"150px\" }, { \"name\": \"callid\", \"selector\": \"callid\" }, { \"name\": \"agentname\", \"selector\": \"agentname\" }, { \"name\": \"entertime\", \"selector\": \"entertime\", width: \"150px\" }, { \"name\": \"answertime\", \"selector\": \"answertime\", width: \"150px\" }, { \"name\": \"hanguptime\", \"selector\": \"hanguptime\", width: \"150px\" }, { \"name\": \"callstatus\", \"selector\": \"callstatus\" }, { \"name\": \"transferedCallid\", \"selector\": \"transferedCallid\" }, { \"name\": \"product\", \"selector\": \"product\" }, { \"name\": \"leadid\", \"selector\": \"leadid\" }, { \"name\": \"mainQueue\", \"selector\": \"mainQueue\" }, { \"name\": \"mainQueueAgent\", \"selector\": \"mainQueueAgent\" }, { \"name\": \"mainQueueEnterTime\", \"selector\": \"mainQueueEnterTime\", width: \"150px\" }, { \"name\": \"mainQueueAnswerTime\", \"selector\": \"mainQueueAnswerTime\", width: \"150px\" }, { \"name\": \"mainQueueHangupTime\", \"selector\": \"mainQueueHangupTime\", width: \"150px\" }, { \"name\": \"mainQueueCallStatus\", \"selector\": \"mainQueueCallStatus\" }];\r\n\r\n    this.ProductList = {\r\n      config:\r\n      {\r\n        root: \"Products\",\r\n        cols: ['id AS Id', 'ProductName AS Display'],\r\n        con: [{ \"ISActive\": true }]\r\n      }\r\n    }\r\n    this.chartList = {\r\n      config:\r\n      {\r\n        root: \"chartList\",\r\n        data: [\r\n          { Id: 'BarChart', Display: \"BarChart\" },\r\n          { Id: 'ColumnChart', Display: \"ColumnChart\" },\r\n          { Id: 'AreaChart', Display: \"AreaChart\" },\r\n          { Id: 'LineChart', Display: \"LineChart\" },\r\n          { Id: 'Bar', Display: \"Bar\" },\r\n          { Id: 'PieChart', Display: \"PieChart\" }\r\n        ],\r\n      }\r\n    }\r\n\r\n    //\"AnnotationChart\" | \"AreaChart\" | \"BarChart\" | \"BubbleChart\" | \"Calendar\" | \"CandlestickChart\" | \"ColumnChart\" | \"ComboChart\" | \"DiffChart\" | \"DonutChart\" | \"Gantt\" | \"Gauge\" | \"GeoChart\" | \"Histogram\" | \"LineChart\" | \"Line\" | \"Bar\" | \"Map\" | \"OrgChart\" \r\n    //| \"PieChart\" | \"Sankey\" | \"ScatterChart\" | \"SteppedAreaChart\" | \"Table\" | \"Timeline\" | \"TreeMap\" | \"WaterfallChart\" | \"WordTree\"\r\n  }\r\n\r\n\r\n  componentWillMount() {\r\n    setTimeout(function () {\r\n      this.fetchCallBackData();\r\n    }.bind(this), 500);\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (!nextProps.CommonData.isError) {\r\n      this.setState({ UnRegisteredChart: nextProps.CommonData[\"unregistered\"] });\r\n\r\n      this.BindChartData(nextProps.CommonData[\"unregistered\"]);\r\n    }\r\n  }\r\n  handleShow(e) {\r\n\r\n    this.setState({ ReportTime: new Date(), SelectedSupervisors: e.SelectedSupervisors });\r\n    setTimeout(function () {\r\n      this.fetchCallBackData();\r\n    }.bind(this), 500);\r\n\r\n  }\r\n\r\n\r\n\r\n  fetchCallBackData() {\r\n    var SelectedSupervisors = this.state.SelectedSupervisors;\r\n    this.props.GetMySqlData({\r\n      root: \"unregistered\",\r\n      ProductId: this.state.ProductId,\r\n      ReportDate: this.state.ReportDate,\r\n    });\r\n  }\r\n  fetchSQLCallBackData() {\r\n    var SelectedSupervisors = this.state.SelectedSupervisors;\r\n    this.props.GetCommonData({\r\n      root: \"unregistered\",\r\n      ProductId: this.state.ProductId,\r\n      startdate: this.state.startdate,\r\n      enddate: this.state.enddate,\r\n    });\r\n  }\r\n  \r\n  chartchange(e, props) {\r\n    this.setState({\r\n      charttype: e.target.value\r\n    });\r\n\r\n\r\n  }\r\n  handleChange = (e, props) => {\r\n\r\n    if (e._isAMomentObject) {\r\n      this.setState({ ReportDate: e.format(\"YYYY-MM-DD\") }, function () {\r\n        this.fetchCallBackData();\r\n      });\r\n    }\r\n\r\n\r\n  }\r\n\r\n  BindChartData(ReportData) {\r\n\r\n    if (ReportData) {\r\n\r\n      let data = [];\r\n      let TransferToAgentData = [];\r\n      let ProductWiseTransfer = [];\r\n\r\n      var hourlydata = _.groupBy(ReportData, 'hour');\r\n      data.push([\"\", \"Total\", { role: 'annotation' }, \"Answered\", { role: 'annotation' }, \"ABANDON\", { role: 'annotation' }]);\r\n      TransferToAgentData.push([\"\", \"Answered in UnRgsterd Q\", { role: 'annotation' }, \"Transferred to Product\", { role: 'annotation' }, \"Abandon in Product Queue\", { role: 'annotation' }]);\r\n\r\n      var ProductWisedata = _.groupBy(ReportData, 'product');\r\n      let columns = [''];\r\n      Object.keys(ProductWisedata).forEach(function (key) {\r\n        if (key != '') {\r\n          columns.push(key);\r\n          columns.push({ role: 'annotation' });\r\n        }\r\n      });\r\n      ProductWiseTransfer.push(columns);\r\n\r\n      Object.keys(hourlydata).forEach(function (key) {\r\n        let Answered = _.countBy(hourlydata[key], function (item) {\r\n          return item.callstatus != \"ABANDON\";\r\n        });\r\n        let ABANDON = _.countBy(hourlydata[key], function (item) {\r\n          return item.callstatus == \"ABANDON\";\r\n        })\r\n        data.push([key, hourlydata[key].length, hourlydata[key].length, Answered.true ?? 0, Answered.true ?? 0, ABANDON.true ?? 0, ABANDON.true ?? 0]);\r\n\r\n        let TransToProduct = _.countBy(hourlydata[key], function (item) {\r\n          return item.product != '';\r\n        });\r\n\r\n        let TransToProductABANDON = _.countBy(hourlydata[key], function (item) {\r\n          return item.mainQueueCallStatus == \"ABANDON\" && item.product != '';\r\n        });\r\n\r\n        TransferToAgentData.push([key, Answered.true ?? 0, Answered.true ?? 0, TransToProduct.true ?? 0, TransToProduct.true ?? 0, TransToProductABANDON.true ?? 0, TransToProductABANDON.true ?? 0]);\r\n\r\n        let values = [key];\r\n        for (let index = 1; index < columns.length; index++) {\r\n          values.push(0);\r\n        }\r\n        ProductWiseTransfer.push(values);\r\n      });\r\n\r\n      // ProductWiseTransfer.push([\"\", \"Total\",\r\n      //   { role: \"style\" },\r\n      //   { role: 'annotation' }]);\r\n\r\n\r\n      // Object.keys(ProductWisedata).forEach(function (key) {\r\n      //   if (key == 'noinput' || key == '' || key == 'null' || key == null) {\r\n\r\n      //   }\r\n      //   else {\r\n      //     ProductWiseTransfer.push([key, ProductWisedata[key].length, \"#ffeb3b\", ProductWisedata[key].length]);\r\n      //   }\r\n      // });\r\n\r\n\r\n\r\n\r\n\r\n      Object.keys(ProductWisedata).forEach(function (key) {\r\n        if (key != '') {\r\n\r\n          var P_hourlydata = _.groupBy(ProductWisedata[key], 'hour');\r\n          Object.keys(P_hourlydata).forEach(function (item) {\r\n\r\n            // let TransToProductABANDON = _.countBy(ProductWisedata[item], function (item) {\r\n            //   return item.callstatus == \"ABANDON\";\r\n            // });\r\n\r\n            for (let i = 1; i < ProductWiseTransfer.length; i++) {\r\n              //for (let j = 0; j < columns.length; j++) {\r\n              if (ProductWiseTransfer[i][0] == item) {\r\n                let j = columns.indexOf(key);\r\n                //if (columns[j] == key || columns[j] > 0) {\r\n\r\n                ProductWiseTransfer[i][j] = P_hourlydata[item].length;\r\n                ProductWiseTransfer[i][j + 1] = P_hourlydata[item].length;\r\n                //}\r\n              }\r\n              //}\r\n\r\n            }\r\n            //ProductWiseTransfer.push(values);\r\n\r\n          });\r\n        }\r\n      });\r\n\r\n\r\n      debugger;\r\n\r\n\r\n      this.setState({ ChartData: data, TransferToAgent: TransferToAgentData, FinalData: ProductWiseTransfer });\r\n\r\n\r\n    }\r\n  }\r\n  CreateChart(ChartData, title) {\r\n    let lineChart = null;\r\n    if (ChartData && ChartData.length > 0) {\r\n\r\n      lineChart = (\r\n\r\n        <Chart\r\n          chartType={this.state.charttype}\r\n          data={ChartData}\r\n          loader={<div>Loading Chart</div>}\r\n          width=\"100%\"\r\n          height=\"200px\"\r\n          options={{\r\n            title: title,\r\n            is3D: true,\r\n            //isStacked: true,\r\n            chartArea: { width: '80%' },\r\n            hAxis: {\r\n              title: ChartData[0][0],\r\n              minValue: 0,\r\n            },\r\n            vAxis: {\r\n              title: 'Total',\r\n              minValue: 0,\r\n            },\r\n            bar: { groupWidth: '80%' },\r\n            legend: { position: 'bottom' },\r\n            animation: {\r\n              startup: true,\r\n              easing: 'linear',\r\n              duration: 1000,\r\n            }\r\n          }}\r\n          legendToggle\r\n        />\r\n\r\n      )\r\n      return lineChart;\r\n    }\r\n  }\r\n  handleStartDateChange = (e, props) => {\r\n    if (e._isAMomentObject) {\r\n      this.setState({ startdate: e.format(\"YYYY-MM-DD\") }, function () {\r\n        \r\n      });\r\n    }\r\n\r\n  }\r\n  handleEndDateChange = (e, props) => {\r\n    if (e._isAMomentObject) {\r\n      this.setState({ enddate: e.format(\"YYYY-MM-DD\") }, function () {\r\n        \r\n      });\r\n    }\r\n  }\r\n  validation = (currentDate) => {\r\n    return !currentDate.isBefore(moment(this.state.maxdate));\r\n  };\r\n\r\n  validationEndDate = (currentDate) => {\r\n    return currentDate.isBefore(moment(new Date()));\r\n  };\r\n\r\n  render() {\r\n    const columns = this.columnlist;\r\n    const { items, PageTitle, UnRegisteredChart, showAlert, AlertMsg, AlertVarient, ReportTime } = this.state;\r\n\r\n    let selectedLeads = [];\r\n\r\n    let AutoAndAnswerChart = this.CreateChart(this.state.ChartData, 'Hourly Call Flow - UnRegistered Queue');\r\n    let TransferToAgent = this.CreateChart(this.state.TransferToAgent, 'Call Transfer');\r\n    console.log(this.state.FinalData);\r\n    let finalChart = this.CreateChart(this.state.FinalData, 'Product Wise - Transfer');\r\n    let TicketData;//= this.CreateChart(this.state.TicketData, 'Ticket Report');\r\n\r\n    return (\r\n      <>\r\n        <div className=\"content\">\r\n          <AlertBox show={showAlert} variant={AlertVarient} body={AlertMsg}></AlertBox>\r\n          <ToastContainer />\r\n          <Row>\r\n            <Col md=\"12\">\r\n              <Card>\r\n                <CardHeader>\r\n                  <Row>\r\n                    <Col md={3}>\r\n                      <CardTitle tag=\"h4\">{PageTitle}</CardTitle>\r\n                    </Col>\r\n                    \r\n                    <Col md={2}>\r\n\r\n                      <DropDown\r\n                        value={this.state.charttype}\r\n                        col={this.chartList}\r\n                        onChange={this.chartchange}>\r\n                      </DropDown>\r\n\r\n\r\n                    </Col>\r\n                    <Col md={2}>\r\n                      <Datetime value={new Date()}\r\n                        dateFormat=\"YYYY-MM-DD\"\r\n                        value={this.state.startdate}\r\n                        isValidDate={this.validation}\r\n                        onChange={moment => this.handleStartDateChange(moment)}\r\n                        utc={true}\r\n                        timeFormat={false}\r\n                      />\r\n                    </Col>\r\n                    <Col md={2}>\r\n                      <Datetime value={new Date()}\r\n                        dateFormat=\"YYYY-MM-DD\"\r\n                        value={this.state.enddate}\r\n                        isValidDate={this.validationEndDate}\r\n                        onChange={moment => this.handleEndDateChange(moment)}\r\n                        utc={true}\r\n                        timeFormat={false}\r\n                      />\r\n                    </Col>\r\n                    <Col md={3}>\r\n                    <Button variant=\"primary\" onClick={() => this.fetchSQLCallBackData()}>Fetch</Button>\r\n                    &nbsp;\r\n                    <Button variant=\"primary\" onClick={() => this.fetchCallBackData()}>Today</Button>\r\n                    </Col>\r\n                  </Row>\r\n\r\n                </CardHeader>\r\n                <CardBody>\r\n                  <Row>\r\n                    <Col md=\"6\">\r\n                      {AutoAndAnswerChart}\r\n                    </Col>\r\n                    <Col md=\"6\">\r\n                      {TransferToAgent}\r\n                    </Col>\r\n                    <Col md=\"12\">\r\n                      {finalChart}\r\n                    </Col>\r\n\r\n                  </Row>\r\n\r\n                  <DataTable\r\n                    columns={columns}\r\n                    data={(UnRegisteredChart && UnRegisteredChart.length > 0) ? UnRegisteredChart : []}\r\n\r\n\r\n                  />\r\n                </CardBody>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n\r\n\r\n\r\n\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    CommonData: state.CommonData\r\n  };\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    GetMySqlData,\r\n    GetCommonData,\r\n    GetCommonspData\r\n  }\r\n)(UnRegisteredChart);","\r\nimport React from \"react\";\r\nimport { Alert } from 'react-bootstrap';\r\n\r\n\r\nclass AlertBox extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            show: this.props.show\r\n        }\r\n    }\r\n    componentDidUpdate() {\r\n\r\n    }\r\n    componentWillReceiveProps(nextProps) {\r\n        this.setState({ show: nextProps.show });\r\n        if (nextProps.show) {\r\n            setTimeout(function () {\r\n                this.setState({ show: false });\r\n            }.bind(this), 5000);\r\n        }\r\n    }\r\n    render() {\r\n        if (this.state.show) {\r\n            return (\r\n                <Alert variant={this.props.variant}>\r\n                    {this.props.body}\r\n                </Alert>\r\n            );\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n}\r\n\r\nexport default AlertBox;\r\n","import axios from \"axios\";\nimport config from \"../../config.jsx\";\nimport constants from \"../../Constants/Constants.jsx\";\n\nconst GetCommonData_fetched = Todos => {\n\n  if (Todos.dataToSend.state && Todos.dataToSend.statename) {\n    localStorage.setItem(Todos.dataToSend.statename, JSON.stringify(Todos.data));\n  }\n\n  return {\n    type: constants.GET_COMMON_SUCCESS,\n    payload: Todos.data,\n    root: Todos.dataToSend.root\n  };\n};\n\nconst GetCommonData_fetch_error = error => {\n  return {\n    type: constants.GET_COMMON_FAIL,\n    payload: error\n  };\n};\n\nexport const GetMySqlData = (dataToSend,cb) => {\n\n  if (dataToSend.data != null || dataToSend.data != undefined) {\n    return function (dispatch, getState) {\n      dispatch(GetCommonData_fetched({ data: dataToSend.data, dataToSend: dataToSend }));\n    };\n  }\n  try {\n    if ((dataToSend.state && localStorage.getItem(dataToSend.statename)) || localStorage.getItem(dataToSend.statename)) {\n\n      return function (dispatch, getState) {\n        let data = JSON.parse(localStorage.getItem(dataToSend.statename))\n        dispatch(GetCommonData_fetched({ data: data, dataToSend: dataToSend }));\n      }\n    }\n  }\n  catch (e) {\n\n  }\n\n\n  return function (dispatch, getState) {\n    axios\n      .get(config.api.base_url + \"/mydb/list/\", {\n        params: dataToSend\n      })\n      .then(data => {\n        if (dataToSend.state && dataToSend.statename) {\n          localStorage.setItem(dataToSend.statename, JSON.stringify(data.data.data));\n        }\n        if (cb) {\n          cb(data);\n        }\n        dispatch(GetCommonData_fetched({ data: data.data.data[0], dataToSend: dataToSend }));\n      })\n      .catch(error => {\n        dispatch(GetCommonData_fetch_error(error, dataToSend));\n      });\n  };\n};\n\n\n\n\nconst InsertData_fetched = Todos => {\n\n  return {\n    type: constants.INSERT_COMMON_SUCCESS,\n    payload: Todos.data\n  };\n};\n\nconst InsertData_fetch_error = error => {\n  return {\n    type: constants.INSERT_COMMON_FAIL,\n    payload: error\n  };\n};\n\nexport const InsertData = (dataToSend, cb) => {\n  return function (dispatch, getState) {\n    axios\n      .post(config.api.base_url + \"/mydb/insert/\", {\n        data: dataToSend\n      })\n      .then(data => {\n        if (cb) {\n          cb(data);\n        }\n        dispatch(InsertData_fetched({ data: data.data }));\n      })\n      .catch(error => {\n        dispatch(InsertData_fetch_error(error));\n      });\n  };\n};\n\n\nconst UpdateData_fetched = Todos => {\n\n  return {\n    type: constants.UPDATE_COMMON_SUCCESS,\n    payload: Todos.data\n  };\n};\n\nconst UpdateData_fetch_error = error => {\n  return {\n    type: constants.UPDATE_COMMON_FAIL,\n    payload: error\n  };\n};\n\nexport const UpdateData = (dataToSend, cb) => {\n\n  return function (dispatch, getState) {\n    axios\n      .post(config.api.base_url + \"/mydb/update/\", {\n        data: dataToSend\n      })\n      .then(data => {\n        if (cb) {\n          cb(data);\n        }\n        dispatch(UpdateData_fetched({ data: data.data }));\n      })\n      .catch(error => {\n        dispatch(UpdateData_fetch_error(error));\n      });\n  };\n};\n\n\n\n\nexport const GetDataDirect = (dataToSend, cb) => {\n\n  try {\n    if ((dataToSend.state && localStorage.getItem(dataToSend.statename)) || localStorage.getItem(dataToSend.statename)) {\n\n      let data = JSON.parse(localStorage.getItem(dataToSend.statename));\n      cb(data);\n      return;\n    }\n  }\n  catch (e) {\n\n  }\n  //return function (dispatch, getState) {\n  axios\n    .get(config.api.base_url + \"/mydb/list/\", {\n      params: dataToSend\n    })\n    .then(data => {\n      if (dataToSend.state && dataToSend.statename) {\n        localStorage.setItem(dataToSend.statename, JSON.stringify(data.data.data));\n      }\n      cb(data.data.data);\n\n      //dispatch(GetCommonData_fetched({ data: data.data.data[0], dataToSend: dataToSend }));\n    })\n    .catch(error => {\n      //dispatch(GetCommonData_fetch_error(error, dataToSend));\n    });\n  //};\n\n};\n\nexport const GetRealTimeAgentData = (manager, context, cb) => {\n\n  let url = config.api.realtimeurl + \"RealTimeAgentStatus?managercode=\" + (context == \"\" ? manager : \"\") + \"&context=\" + context;\n\n  axios\n    .get(url)\n    .then(data => {\n\n      cb(data);\n      //dispatch(GetCommonData_fetched({ data: data.data.data[0], dataToSend: dataToSend }));\n    })\n    .catch(error => {\n      //dispatch(GetCommonData_fetch_error(error, dataToSend));\n    });\n  //};\n\n};\n\nexport const GetRealTimeTotalData = (context, cb) => {\n\n  let url = config.api.realtimeurl + \"RealTimeData?context=\" + context;\n\n  axios\n    .get(url)\n    .then(data => {\n\n      cb(data);\n      //dispatch(GetCommonData_fetched({ data: data.data.data[0], dataToSend: dataToSend }));\n    })\n    .catch(error => {\n      //dispatch(GetCommonData_fetch_error(error, dataToSend));\n    });\n  //};\n\n};\n\n\nexport const SendOTP = (dataToSend, cb) => {\n  let url = config.api.SendOTP;\n  const headers = {\n    'Content-Type': 'application/json',\n    'Authorization': 'cG9saWN5 YmF6YWFy'\n  }\n  axios\n    .post(url,\n      dataToSend\n      , {\n        headers: headers\n      })\n    .then(data => {\n\n      cb(data);\n    })\n    .catch(error => {\n    });\n};\n\nexport const ValidateOTP = (dataToSend, cb) => {\n  let url = config.api.ValidateOTP;\n  const headers = {\n    'Content-Type': 'application/json',\n    'Authorization': 'cG9saWN5 YmF6YWFy'\n  }\n  axios\n    .post(url,\n      dataToSend\n      , {\n        headers: headers\n      })\n    .then(data => {\n\n      cb(data);\n    })\n    .catch(error => {\n    });\n};\n\nexport const GetComunicationData = (dataToSend, cb) => {\n\n  return function (dispatch, getState) {\n    axios\n      .get(config.api.ServiceAPI + dataToSend.root, {\n        params: dataToSend.data\n      })\n      .then(data => {\n        cb(data);\n        //dispatch(GetCommonData_fetched({ data: data, dataToSend: dataToSend }));\n      })\n      .catch(error => {\n        dispatch(GetCommonData_fetch_error(error, dataToSend));\n      });\n  };\n};"],"sourceRoot":""}