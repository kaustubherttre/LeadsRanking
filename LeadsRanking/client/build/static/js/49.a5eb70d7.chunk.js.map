{"version":3,"sources":["views/ConferenceDetails.jsx","views/Common/AlertBox.jsx","store/actions/CommonMysqlAction.jsx","views/Common/ManagerHierarchy.jsx","views/Common/DropDown.jsx"],"names":["ConferenceDetails","props","handleChange","e","_isAMomentObject","setState","ReportDate","format","this","fetchCallBackData","handleStartDateChange","startdate","enddate","add","handleEndDateChange","validation","currentDate","isBefore","moment","validationEndDate","state","root","PageTitle","ProductId","subtract","ReportTime","SelectedSupervisors","ConfType","showMoreInfoModal","MoreInfoData","addClass","confTypes","conftypechange","bind","columnlist","label","name","width","type","cell","row","className","callid","hide","ServerIp","searchable","blocked_agent_call","insurer_name","sortable","hhmmss","TTBeforeTransfer","TransferInitiateTime","utc","ServiceAgentAnswerTime","CallConferenceTime","ConferenceCancelTime","CustomerDisconnectTime","SalesAgentDisconnect","ServiceAgentDisconnect","TransferedToAgent","ThirdPartyDialStatus","Hanguptime","onClick","clickMoreinfo","ConfTypeList","config","data","Id","Display","moreinfolist","selector","calldate","indexOf","custom_disposition","getHtmlListenMoreInfo","GetMySqlData","result","nextProps","CommonData","isError","console","log","fnDatatableCol","queueip","uniqueid","Campaign","queueServerIp","conftype","number","audio","document","getElementById","icon","paused","play","classList","remove","pause","currentTime","id","row_num","CreateMoreInfoRecordingURL","class","innerHTML","userfield","dstchannel","date","Date","hour","datetime","phoneNo","substring","recfilename","GetAwsRecordingUrl","results","status","url","src","GetFileExists","params","onloadedmetadata","duration","onended","target","value","columns","moreinfocolumns","items","showAlert","AlertMsg","AlertVarient","show","variant","body","md","tag","Group","as","Col","controlId","firstoption","onChange","dateFormat","fetchConferenceData","length","onHide","dialogClassName","Header","closeButton","Title","Body","pagination","striped","noHeader","highlightOnHover","dense","Footer","React","Component","connect","GetCommonData","GetCommonspData","AlertBox","setTimeout","GetCommonData_fetched","Todos","dataToSend","statename","localStorage","setItem","JSON","stringify","constants","GET_COMMON_SUCCESS","payload","GetCommonData_fetch_error","error","GET_COMMON_FAIL","cb","undefined","dispatch","getState","getItem","parse","axios","get","api","base_url","then","catch","InsertData","post","INSERT_COMMON_SUCCESS","INSERT_COMMON_FAIL","InsertData_fetch_error","UpdateData","UPDATE_COMMON_SUCCESS","UPDATE_COMMON_FAIL","UpdateData_fetch_error","GetDataDirect","ManagerHierarchy","nodes","checked","expanded","UserId","getuser","RoleId","UserID","ManagerId","res","replace","handleShow","forceUpdate","style","right","checkeditem","index","splice","onMouseLeave","onMouseOut","onMouseEnter","onButtonClick","checkModel","showNodeIcon","onCheck","onExpand","showExpandAll","DropDown","item","key","visible","Control","disabled","map","displayoption"],"mappings":"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","file":"static/js/49.a5eb70d7.chunk.js","sourcesContent":["\nimport React from \"react\";\nimport {\n  GetCommonData, GetCommonspData, GetDataDirect, GetFileExists, GetAwsRecordingUrl\n} from \"../store/actions/CommonAction\";\nimport {\n  GetMySqlData\n} from \"../store/actions/CommonMysqlAction\";\nimport { connect } from \"react-redux\";\nimport { OpenSalesView, getUrlParameter, getuser, fnDatatableCol, hhmmss } from '../utility/utility.jsx';\nimport DataTable from './Common/DataTableWithFilter';\nimport DropDown from './Common/DropDown';\nimport ManagerHierarchy from './Common/ManagerHierarchy';\nimport Moment from 'react-moment';\nimport moment from 'moment';\nimport { If, Then, Else } from 'react-if';\nimport AlertBox from './Common/AlertBox';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport * as Datetime from 'react-datetime';\nimport 'react-datetime/css/react-datetime.css'\n\n\n\n// reactstrap components\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Table,\n  Row,\n  Col\n} from \"reactstrap\";\nimport { ButtonGroup, Button, Modal, Form } from 'react-bootstrap';\nimport { func, string } from \"prop-types\";\n\nclass ConferenceDetails extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      root: \"conference\",\n      PageTitle: \"ConferenceDetails\",\n      ConferenceDetails: [],\n      ProductId: 0,\n      ReportDate: moment().subtract(1, 'days').format(\"YYYY-MM-DD\"),\n      ReportTime: null,\n      SelectedSupervisors: [],\n      ConfType: 'sales_to_service',\n      startdate: moment().format(\"YYYY-MM-DD\"),\n      // enddate: moment().format(\"YYYY-MM-DD\"),\n      //startdate: moment().subtract(60, 'days').format(\"YYYY-MM-DD\"),\n      enddate: moment().add(60, 'days').format(\"YYYY-MM-DD\"),\n      // maxdate: moment().subtract(60, 'days').format(\"YYYY-MM-DD\"),\n      showMoreInfoModal: false,\n      MoreInfoData: [],\n      addClass: \"fa fa-play-circle\",\n      confTypes: [],\n    };\n    this.conftypechange = this.conftypechange.bind(this);\n    this.columnlist = [\n      {\n        label: \"CallId\",\n        name: \"callid\",\n        width: \"150px\",\n        type: \"string\",\n        cell: row => <div className=\"callid\">{row.callid ? row.callid : \"N.A\"}</div>,\n      },\n      {\n        label: \"ServerIp\",\n        name: \"ServerIp\",\n        hide: true,\n        cell: row => <div className=\"serverip\">{row.ServerIp ? row.ServerIp : \"N.A\"}</div>,\n      },\n      {\n        label: \"LeadId\",\n        name: \"LeadId\",\n        searchable: true\n      },\n      {\n        label: \"BookingId\",\n        \"name\": \"BookingId\",\n        searchable: true,\n      },\n      {\n        label: \"Campaign\",\n        name: \"Campaign\",\n      },\n      {\n        label: \"TP Call Type\",\n        name: \"blocked_agent_call\",\n        cell: row => <div className=\"insurer_name\">{row.blocked_agent_call ? 'BlockedAgent' : \"Queue\"}</div>,\n      },\n      {\n        label: \"Insurer\",\n        name: \"insurer_name\",\n        cell: row => <div className=\"insurer_name\">{row.insurer_name ? row.insurer_name : \"N.A\"}</div>,\n      },\n      {\n        label: \"TTBeforeTransfer\",\n        name: \"TTBeforeTransfer\",\n        sortable: true,\n        width: \"130px\",\n        cell: row => hhmmss(row.TTBeforeTransfer),\n      },\n      {\n        label: \"Transfered By\",\n        name: \"TransferedBy\",\n        searchable: true\n      },\n      {\n        label: \"TransferInitiateTime\",\n        name: \"TransferInitiateTime\",\n        cell: row => <div className=\"calldate\">{row.TransferInitiateTime ? <Moment format=\"YYYY-MM-DD HH:mm:ss\" utc={true}\n        >{row.TransferInitiateTime}</Moment> : \"N.A\"}</div>,\n        type: \"datetime\",\n        \"sortable\": true,\n        width: \"150px\",\n      },\n      {\n        label: \"TP Answer Time\",\n        name: \"ServiceAgentAnswerTime\",\n        cell: row => <div className=\"calldate\">{row.ServiceAgentAnswerTime ? <Moment format=\"YYYY-MM-DD HH:mm:ss\" utc={true}\n        >{row.ServiceAgentAnswerTime}</Moment> : \"N.A\"}</div>,\n        type: \"datetime\",\n        \"sortable\": true,\n        width: \"150px\",\n      },\n      {\n        label: \"CallConferenceTime\",\n        name: \"CallConferenceTime\",\n        cell: row => <div className=\"calldate\">{row.CallConferenceTime ? <Moment format=\"YYYY-MM-DD HH:mm:ss\" utc={true}\n        >{row.CallConferenceTime}</Moment> : \"N.A\"}</div>,\n        type: \"datetime\",\n        \"sortable\": true,\n        width: \"150px\",\n\n      },\n      {\n        label: \"ConferenceCancelTime\",\n        name: \"ConferenceCancelTime\",\n        cell: row => <div className=\"calldate\">{row.ConferenceCancelTime ? <Moment format=\"YYYY-MM-DD HH:mm:ss\" utc={true}\n        >{row.ConferenceCancelTime}</Moment> : \"N.A\"}</div>,\n        type: \"datetime\",\n        \"sortable\": true,\n        width: \"150px\",\n\n      },\n      {\n        label: \"CustomerDisconnectTime\",\n        name: \"CustomerDisconnectTime\",\n        cell: row => <div className=\"calldate\">{row.CustomerDisconnectTime ? <Moment format=\"YYYY-MM-DD HH:mm:ss\" utc={true}\n        >{row.CustomerDisconnectTime}</Moment> : \"N.A\"}</div>,\n        type: \"datetime\",\n        \"sortable\": true,\n        width: \"150px\",\n\n      },\n      {\n        label: \"Disconnect(First Agent)\",\n        name: \"SalesAgentDisconnect\",\n        cell: row => <div className=\"calldate\">{row.SalesAgentDisconnect ? <Moment format=\"YYYY-MM-DD HH:mm:ss\" utc={true}\n        >{row.SalesAgentDisconnect}</Moment> : \"N.A\"}</div>,\n        type: \"datetime\",\n        \"sortable\": true,\n        width: \"150px\",\n\n      },\n      {\n        label: \"Disconnect(TP)\",\n        name: \"ServiceAgentDisconnect\",\n        cell: row => <div className=\"calldate\">{row.ServiceAgentDisconnect ? <Moment format=\"YYYY-MM-DD HH:mm:ss\" utc={true}\n        >{row.ServiceAgentDisconnect}</Moment> : \"N.A\"}</div>,\n        type: \"datetime\",\n        \"sortable\": true,\n        width: \"150px\",\n\n      },\n      {\n        name: \"TransferedToAgent\",\n        label: \"TP Agent\",\n        type: \"string\",\n        cell: row => <div className=\"transferedagent\">{row.TransferedToAgent ? row.TransferedToAgent : \"N.A\"}</div>,\n      },\n      {\n        name: \"ThirdPartyDialStatus\",\n        label: \"TP CallStatus\",\n        type: \"string\",\n        cell: row => <div className=\"ThirdPartyDialStatus\">{row.ThirdPartyDialStatus ? row.ThirdPartyDialStatus : \"N.A\"}</div>,\n      },\n      {\n        label: \"Hanguptime\",\n        name: \"Hanguptime\",\n        cell: row => <div className=\"calldate\">{row.Hanguptime ? <Moment format=\"YYYY-MM-DD HH:mm:ss\" utc={true}\n        >{row.Hanguptime}</Moment> : \"N.A\"}</div>,\n        type: \"datetime\",\n        \"sortable\": true,\n        width: \"150px\",\n\n      },\n      {\n        label: \"More Info\",\n        name: \"More Info\", cell: row => <div className=\"moreinfo\"><a onClick={(e) => this.clickMoreinfo(e, row)} className=\"detailsinfo\">\n          <i className=\"fa fa-eye\"></i></a>\n        </div>\n      },\n\n    ];\n\n    this.ConfTypeList = {\n      config:\n      {\n        root: \"Products\",\n        data: [{ Id: \"sales_to_service\", Display: \"Life Hot Call Transfer\" }, { Id: \"telimedical\", Display: \"Teli-Medical [BMS Transfer]\" }, { Id: \"telemax\", Display: \"Tele-Max\" }, { Id: \"telehdfc\", Display: \"Tele-Hdfc\" }, { Id: \"teleipru\", Display: \"Tele-Ipru\" }, { Id: \"teletata\", Display: \"Tele-Tata\" }, { Id: \"tltransfer\", Display: \"TLTransfer\" }\n          , { Id: \"transfer_salesservice\", Display: \"Service Agent Transfer\" }, { Id: 0, Display: \"Other\" }],\n      }\n    };\n\n    this.moreinfolist = [\n      { name: \"callid\", selector: \"callid\" },\n      { name: \"leadid\", selector: \"leadid\" }, { name: \"Calldate\", cell: row => <div className=\"calldate\">{row.calldate ? <Moment utc={true} format=\"YYYY-MM-DD HH:mm:ss\">{row.calldate}</Moment> : \"N.A\"}</div> },\n      { name: \"agentno\", selector: \"agentno\" }, { name: \"agentid\", selector: \"agentid\" },\n      { name: \"duration\", selector: \"ringtime\" }, { name: \"disposition\", selector: \"custom_disposition\" },\n      {\n        name: \"Listen\", cell: row =>(['Playback','Hangup'].indexOf(row.custom_disposition) > -1)?'No file found':\n        <div className=\"listen\">\n            {this.getHtmlListenMoreInfo(row)}\n        </div>\n      },\n      // {\n      //   name: \"Listen\", cell: row =>\n      //     <div className=\"listen\">\n      //       {this.CreateRecordingURL(row)}\n      //     </div>\n      // }\n    ];\n  }\n\n  componentDidMount() {\n\n    this.props.GetMySqlData({\n      root: \"getConferenceType\",\n    }, function (result) {\n      this.setState({ confTypes: result.data.data[0] });\n    }.bind(this));\n\n  }\n\n  componentWillMount() {\n    // this.props.GetMySqlData({\n    //   root: this.state.root,\n    //   startdate: this.state.startdate,\n    //   enddate: this.state.enddate,\n    //   conftype: 'sales_to_service',\n    // }, function (result) {\n    //   this.setState({ ConferenceDetails: result.data.data[0] });\n    // }.bind(this));\n\n  }\n\n  componentWillReceiveProps(nextProps) {\n    //debugger;\n    if (!nextProps.CommonData.isError) {\n      //this.setState({ ConferenceDetails: nextProps.CommonData[this.state.root] });\n      console.log(nextProps.CommonData[this.state.root]);\n    }\n  }\n\n  fnDatatableCol() {\n\n    var columns = fnDatatableCol(this.columnlist);\n    return columns;\n  }\n\n  clickMoreinfo(e, row) {\n    var queueip = \"10.0.91.34\";\n    var uniqueid = row.callid;\n    if (row.Campaign == 'telemax') {\n      queueip = \"10.0.91.32\";\n    }\n    if (this.state.ConfType == 'telimedical') {\n      queueip = row.ServerIp;\n    }\n    /*if (row.callid == null || row.callid == \"\") {\n      uniqueid = row.main_callid;\n      queueip = row.ServerIp;\n    }*/\n    if (row.blocked_agent_call) {\n      queueip = row.ServerIp;\n    }\n    this.props.GetMySqlData({\n      root: \"moreinfo\",\n      uniqueid: uniqueid,\n      queueServerIp: queueip,\n      startdate: this.state.startdate,\n      enddate: this.state.enddate,\n    }, function (result) {//debugger;\n      this.setState({ showMoreInfoModal: true, MoreInfoData: result.data.data[0] });\n    }.bind(this));\n\n  }\n\n  fetchConferenceData() {\n    //debugger;\n    this.props.GetMySqlData({\n      root: this.state.root,\n      startdate: this.state.startdate,\n      enddate: this.state.enddate,\n      conftype: this.state.ConfType,\n    }, function (result) {\n      this.setState({ ConferenceDetails: result.data.data[0] });\n    }.bind(this));\n\n  }\n\n  play(number) {\n    var audio = document.getElementById('audio_' + number);\n    var icon = document.getElementById(\"play\" + number);\n    if (audio.paused) {\n      audio.play();\n      icon.classList.remove(\"fa-play-circle\");\n      icon.classList.add(\"fa-stop-circle\");\n    } else {\n      audio.pause();\n      audio.currentTime = 0\n      icon.classList.remove(\"fa-stop-circle\");\n      icon.classList.add(\"fa-play-circle\");\n    }\n  }\n\n  // CreateRecordingURL(row) {\n\n  //   let userfield = row.userfield;\n  //   let dstchannel = row.dstchannel;\n  //   let date = moment(new Date(userfield)).format(\"DD-MM-YYYY\");\n  //   let hour = moment(new Date(userfield)).format(\"H\");\n  //   let datetime = moment(new Date(userfield)).format(\"YYYYMMDDHHmmss\");\n  //   let phoneNo = dstchannel.substring(dstchannel.indexOf(\"/\") + 1, dstchannel.indexOf(\"-\"));\n  //   let callid = row.callid;\n  //   console.log(date, hour, datetime, phoneNo, callid);\n  //   let url = \"https://asterisk-log.s3.ap-south-1.amazonaws.com/recording/\" + date + \"/\" + hour + \"/\" + callid + \"-\" + datetime + \"-\" + phoneNo + \".wav\";\n\n\n  //   if (date == \"Invalid date\" || hour == \"Invalid date\" || datetime == \"Invalid date\" || phoneNo == null) {\n  //     return <span>File not found</span>\n  //   }\n\n  //   GetFileExists(url, function (params) {\n  //     //debugger;\n  //     if (params && params.status && params.status != 404) {\n  //     }\n  //     else {\n  //       document.getElementById(\"span_\" + row.row_num).innerHTML = \"File not found\";\n  //     }\n  //   });\n\n  //   //let url = \"https://asterisk-log.s3.ap-south-1.amazonaws.com/recording/12-05-2020/10/1589258668.10883-20200512101428-07509883158.wav\";\n  //   return <span id={\"span_\" + row.row_num}><audio src={url} id={\"audio\" + \"_\" + row.row_num}></audio>\n  //     <i className={this.state.addClass} id={\"play\" + row.row_num} onClick={(e) => this.play(row.row_num, e)}></i>\n  //   </span>;\n  // }\n\n  getHtmlListenMoreInfo(row){\n    return  (<span id={\"span_\" + row.row_num} onClick={(e) => this.CreateMoreInfoRecordingURL(e, row)}>\n      <i class=\"fa fa-play-circle listen\"></i>\n      </span>)\n  }\n\n  CreateMoreInfoRecordingURL(e, row){\n    var audio = document.getElementById('audio2');\n    var number = row.row_num;\n    if (audio.paused) {\n      document.getElementById('span_'+ number).innerHTML = '<i class=\"fa fa-spinner fa-spin\"></i>';\n      let userfield = row.userfield;\n      let dstchannel = row.dstchannel;\n      let date = moment(new Date(userfield)).format(\"DD-MM-YYYY\");\n      let hour = moment(new Date(userfield)).format(\"H\");\n      let datetime = moment(new Date(userfield)).format(\"YYYYMMDDHHmmss\");\n      let phoneNo = dstchannel.substring(dstchannel.indexOf(\"/\") + 1, dstchannel.indexOf(\"-\"));\n      let callid = row.callid;\n      console.log(date, hour, datetime, phoneNo, callid);\n      let recfilename = \"recording/\"+ date + \"/\" + hour + \"/\" + callid + \"-\" + datetime + \"-\" + phoneNo + \".wav\";\n      //let url = \"https://asterisk-log.s3.ap-south-1.amazonaws.com/recording/\" + date + \"/\" + hour + \"/\" + callid + \"-\" + datetime + \"-\" + phoneNo + \".wav\";\n  \n  \n      if (date == \"Invalid date\" || hour == \"Invalid date\" || datetime == \"Invalid date\" || phoneNo == null) {\n        document.getElementById('span_'+ number).innerHTML = 'No File Found';\n        return;\n      }\n     \n      //debugger;\n          GetAwsRecordingUrl(recfilename, 'asterisk-log' ,function (results) {debugger;\n            //debugger;\n\n            console.log(\"results\", results);\n            if (results.data.status == 200) {\n              let url = results.data.data;\n              audio.src = results.data.data;\n              document.getElementById('span_'+ number).innerHTML = '<i class=\"fa fa-spinner fa-spin\"></i>';\n              GetFileExists(url, function (params) {\n                //debugger;\n                if (params && params.status && params.status != 404) {\n                  audio.onloadedmetadata = function() {\n                    console.log(audio.duration)\n                    //setTimeout(function () {\n                      audio.play();\n                      console.log(audio.duration);\n                      if(audio.paused == false && audio.duration > 0 && audio.duration != 'Infinity' && audio.duration != 'NaN'){\n                      document.getElementById('span_'+ number).innerHTML = '<i class=\"fa fa-stop-circle listen\"></i>';\n                     \n                      audio.onended = function() {\n                        document.getElementById('span_'+ number).innerHTML = '<i class=\"fa fa-play-circle listen\"></i>';\n                      };\n                     \n                      }else{\n                      document.getElementById('span_'+ number).innerHTML = 'No File Found'; \n                      }\n                   // }.bind(this), 500);\n                  };\n                } else {\n                  try {\n                    document.getElementById(\"span_\" + row.row_num).innerHTML = \"File not found\";\n                  } catch (e) {\n                    //console.log('error', e);        \n                  }\n                }\n              });\n            \n              \n            } else {\n              document.getElementById('span_'+ number).innerHTML = 'No File Found';\n            }\n          }.bind(this));\n       \n\n\n    } else {\n      //debugger;\n      audio.pause();\n      audio.currentTime = 0;\n      document.getElementById('span_'+ number).innerHTML = '<i class=\"fa fa-play-circle listen\"></i>';\n\n    }\n\n  }\n\n  conftypechange(e, props) {\n    this.setState({\n      ConfType: e.target.value\n    }, function () {\n      //this.fetchConferenceData();\n    });\n\n  }\n  handleChange = (e, props) => {\n\n    if (e._isAMomentObject) {\n      this.setState({ ReportDate: e.format(\"YYYY-MM-DD\") }, function () {\n        this.fetchCallBackData();\n      });\n    }\n\n\n  }\n\n  // handleStartDateChange = (e, props) => {\n\n  //   if (e._isAMomentObject) {\n  //     this.setState({ startdate: e.format(\"YYYY-MM-DD\") }, function () {\n  //       //this.fetchCallBackData();\n  //     });\n  //   }\n\n\n  // }\n\n  // handleEndDateChange = (e, props) => {\n\n  //   if (e._isAMomentObject) {\n  //     this.setState({ enddate: e.format(\"YYYY-MM-DD\") }, function () {\n  //       //this.fetchCallBackData();\n  //     });\n  //   }\n\n\n  // }\n\n  handleStartDateChange = (e, props) => {\n    if (e._isAMomentObject) {\n      //this.props.onStartDate(e.format(\"YYYY-MM-DD\"));\n      this.setState({ startdate: e.format(\"YYYY-MM-DD\"), enddate: e.add(60, 'days').format(\"YYYY-MM-DD\") }, function () {\n      });\n    }\n  }\n\n  handleEndDateChange = (e, props) => {\n    if (e._isAMomentObject) {\n      //this.props.onEndDate(e.format(\"YYYY-MM-DD\"));\n      this.setState({ enddate: e.format(\"YYYY-MM-DD\") }, function () {\n        //this.fetchCallBackData();\n      });\n    }\n  }\n\n  // validation = (currentDate) => {    \n  //   return !currentDate.isBefore(moment(this.state.maxdate));\n  // };\n\n  // validationEndDate = (currentDate) => {    \n  //   return !currentDate.isBefore(moment(this.state.startdate));\n  // };\n  validation = (currentDate) => {\n    return currentDate.isBefore(moment());\n  };\n\n  validationEndDate = (currentDate) => {\n\n\n    if (!currentDate.isBefore(moment(this.state.enddate))) {\n      return false;\n    }\n\n    if (currentDate.isBefore(moment(this.state.startdate))) {\n      return false;\n    }\n\n    return true;\n\n  };\n\n  render() {\n    //const columns = this.columnlist;\n    const columns = this.fnDatatableCol();\n    const moreinfocolumns = this.moreinfolist;\n    const { items, PageTitle, ConferenceDetails, showAlert, AlertMsg, AlertVarient, ReportTime, MoreInfoData } = this.state;\n    console.log(ConferenceDetails);\n    let selectedLeads = [];\n\n\n    return (\n      <>\n        <div className=\"content\">\n          <AlertBox show={showAlert} variant={AlertVarient} body={AlertMsg}></AlertBox>\n          <ToastContainer />\n          <Row>\n            <Col md=\"12\">\n              <Card>\n                <CardHeader>\n                  <Row>\n                    <Col md={3}>\n                      <CardTitle tag=\"h4\">{PageTitle}</CardTitle>\n                    </Col>\n                    <Col md={3}>\n                      <Form.Group as={Col} md={12} controlId=\"conftype_dropdown\">\n                        <DropDown firstoption=\"Select Conference Type\" items={this.state.confTypes} onChange={this.conftypechange}>\n                        </DropDown>\n                      </Form.Group>\n                    </Col>\n                    <Col md={2}>\n                      <Datetime value={new Date()}\n                        dateFormat=\"YYYY-MM-DD\"\n                        value={this.state.startdate}\n                        isValidDate={this.validation}\n                        onChange={moment => this.handleStartDateChange(moment)}\n                        utc={true}\n                        timeFormat={false}\n                      />\n                    </Col>\n                    <Col md={2}>\n                      <Datetime value={new Date()}\n                        dateFormat=\"YYYY-MM-DD\"\n                        value={this.state.enddate}\n                        isValidDate={this.validationEndDate}\n                        onChange={moment => this.handleEndDateChange(moment)}\n                        utc={true}\n                        timeFormat={false}\n                      />\n                    </Col>\n                    <Col md={1}>\n                      <Button variant=\"primary\" onClick={() => this.fetchConferenceData()}>Fetch</Button>\n                    </Col>\n                    <Col md={2}>\n                    </Col>\n                  </Row>\n\n                </CardHeader>\n                <CardBody>\n                  <DataTable\n                    columns={columns}\n                    data={(ConferenceDetails && ConferenceDetails.length > 0) ? ConferenceDetails : []}\n                  />\n                </CardBody>\n              </Card>\n            </Col>\n          </Row>\n\n          <audio src=\"\" id={\"audio2\"}></audio>\n\n          <Modal show={this.state.showMoreInfoModal} onHide={() => this.setState({ showMoreInfoModal: false })} dialogClassName=\"modal-90w\">\n            <Modal.Header closeButton>\n              <Modal.Title></Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n              <div className=\"modalmoreinfodata\">\n                <DataTable\n                  columns={moreinfocolumns}\n                  data={(MoreInfoData && MoreInfoData.length > 0) ? MoreInfoData : []}\n                  pagination={false}\n                  striped={true}\n                  noHeader={true}\n                  highlightOnHover\n                  dense\n\n                />\n              </div>\n            </Modal.Body>\n            <Modal.Footer>\n\n            </Modal.Footer>\n          </Modal>\n\n\n\n        </div>\n      </>\n    );\n  }\n}\n\n\nfunction mapStateToProps(state) {\n  return {\n    CommonData: state.CommonData\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  {\n    GetCommonData,\n    GetCommonspData,\n    GetMySqlData\n  }\n)(ConferenceDetails);","\r\nimport React from \"react\";\r\nimport { Alert } from 'react-bootstrap';\r\n\r\n\r\nclass AlertBox extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            show: this.props.show\r\n        }\r\n    }\r\n    componentDidUpdate() {\r\n\r\n    }\r\n    componentWillReceiveProps(nextProps) {\r\n        this.setState({ show: nextProps.show });\r\n        if (nextProps.show) {\r\n            setTimeout(function () {\r\n                this.setState({ show: false });\r\n            }.bind(this), 5000);\r\n        }\r\n    }\r\n    render() {\r\n        if (this.state.show) {\r\n            return (\r\n                <Alert variant={this.props.variant}>\r\n                    {this.props.body}\r\n                </Alert>\r\n            );\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n}\r\n\r\nexport default AlertBox;\r\n","import axios from \"axios\";\nimport config from \"../../config.jsx\";\nimport constants from \"../../Constants/Constants.jsx\";\n\nconst GetCommonData_fetched = Todos => {\n\n  if (Todos.dataToSend.state && Todos.dataToSend.statename) {\n    localStorage.setItem(Todos.dataToSend.statename, JSON.stringify(Todos.data));\n  }\n\n  return {\n    type: constants.GET_COMMON_SUCCESS,\n    payload: Todos.data,\n    root: Todos.dataToSend.root\n  };\n};\n\nconst GetCommonData_fetch_error = error => {\n  return {\n    type: constants.GET_COMMON_FAIL,\n    payload: error\n  };\n};\n\nexport const GetMySqlData = (dataToSend,cb) => {\n\n  if (dataToSend.data != null || dataToSend.data != undefined) {\n    return function (dispatch, getState) {\n      dispatch(GetCommonData_fetched({ data: dataToSend.data, dataToSend: dataToSend }));\n    };\n  }\n  try {\n    if ((dataToSend.state && localStorage.getItem(dataToSend.statename)) || localStorage.getItem(dataToSend.statename)) {\n\n      return function (dispatch, getState) {\n        let data = JSON.parse(localStorage.getItem(dataToSend.statename))\n        dispatch(GetCommonData_fetched({ data: data, dataToSend: dataToSend }));\n      }\n    }\n  }\n  catch (e) {\n\n  }\n\n\n  return function (dispatch, getState) {\n    axios\n      .get(config.api.base_url + \"/mydb/list/\", {\n        params: dataToSend\n      })\n      .then(data => {\n        if (dataToSend.state && dataToSend.statename) {\n          localStorage.setItem(dataToSend.statename, JSON.stringify(data.data.data));\n        }\n        if (cb) {\n          cb(data);\n        }\n        dispatch(GetCommonData_fetched({ data: data.data.data[0], dataToSend: dataToSend }));\n      })\n      .catch(error => {\n        dispatch(GetCommonData_fetch_error(error, dataToSend));\n      });\n  };\n};\n\n\n\n\nconst InsertData_fetched = Todos => {\n\n  return {\n    type: constants.INSERT_COMMON_SUCCESS,\n    payload: Todos.data\n  };\n};\n\nconst InsertData_fetch_error = error => {\n  return {\n    type: constants.INSERT_COMMON_FAIL,\n    payload: error\n  };\n};\n\nexport const InsertData = (dataToSend, cb) => {\n  return function (dispatch, getState) {\n    axios\n      .post(config.api.base_url + \"/mydb/insert/\", {\n        data: dataToSend\n      })\n      .then(data => {\n        if (cb) {\n          cb(data);\n        }\n        dispatch(InsertData_fetched({ data: data.data }));\n      })\n      .catch(error => {\n        dispatch(InsertData_fetch_error(error));\n      });\n  };\n};\n\n\nconst UpdateData_fetched = Todos => {\n\n  return {\n    type: constants.UPDATE_COMMON_SUCCESS,\n    payload: Todos.data\n  };\n};\n\nconst UpdateData_fetch_error = error => {\n  return {\n    type: constants.UPDATE_COMMON_FAIL,\n    payload: error\n  };\n};\n\nexport const UpdateData = (dataToSend, cb) => {\n\n  return function (dispatch, getState) {\n    axios\n      .post(config.api.base_url + \"/mydb/update/\", {\n        data: dataToSend\n      })\n      .then(data => {\n        if (cb) {\n          cb(data);\n        }\n        dispatch(UpdateData_fetched({ data: data.data }));\n      })\n      .catch(error => {\n        dispatch(UpdateData_fetch_error(error));\n      });\n  };\n};\n\n\n\n\nexport const GetDataDirect = (dataToSend, cb) => {\n\n  try {\n    if ((dataToSend.state && localStorage.getItem(dataToSend.statename)) || localStorage.getItem(dataToSend.statename)) {\n\n      let data = JSON.parse(localStorage.getItem(dataToSend.statename));\n      cb(data);\n      return;\n    }\n  }\n  catch (e) {\n\n  }\n  //return function (dispatch, getState) {\n  axios\n    .get(config.api.base_url + \"/mydb/list/\", {\n      params: dataToSend\n    })\n    .then(data => {\n      if (dataToSend.state && dataToSend.statename) {\n        localStorage.setItem(dataToSend.statename, JSON.stringify(data.data.data));\n      }\n      cb(data.data.data);\n\n      //dispatch(GetCommonData_fetched({ data: data.data.data[0], dataToSend: dataToSend }));\n    })\n    .catch(error => {\n      //dispatch(GetCommonData_fetch_error(error, dataToSend));\n    });\n  //};\n\n};\n\nexport const GetRealTimeAgentData = (manager, context, cb) => {\n\n  let url = config.api.realtimeurl + \"RealTimeAgentStatus?managercode=\" + (context == \"\" ? manager : \"\") + \"&context=\" + context;\n\n  axios\n    .get(url)\n    .then(data => {\n\n      cb(data);\n      //dispatch(GetCommonData_fetched({ data: data.data.data[0], dataToSend: dataToSend }));\n    })\n    .catch(error => {\n      //dispatch(GetCommonData_fetch_error(error, dataToSend));\n    });\n  //};\n\n};\n\nexport const GetRealTimeTotalData = (context, cb) => {\n\n  let url = config.api.realtimeurl + \"RealTimeData?context=\" + context;\n\n  axios\n    .get(url)\n    .then(data => {\n\n      cb(data);\n      //dispatch(GetCommonData_fetched({ data: data.data.data[0], dataToSend: dataToSend }));\n    })\n    .catch(error => {\n      //dispatch(GetCommonData_fetch_error(error, dataToSend));\n    });\n  //};\n\n};\n\n\nexport const SendOTP = (dataToSend, cb) => {\n  let url = config.api.SendOTP;\n  const headers = {\n    'Content-Type': 'application/json',\n    'Authorization': 'cG9saWN5 YmF6YWFy'\n  }\n  axios\n    .post(url,\n      dataToSend\n      , {\n        headers: headers\n      })\n    .then(data => {\n\n      cb(data);\n    })\n    .catch(error => {\n    });\n};\n\nexport const ValidateOTP = (dataToSend, cb) => {\n  let url = config.api.ValidateOTP;\n  const headers = {\n    'Content-Type': 'application/json',\n    'Authorization': 'cG9saWN5 YmF6YWFy'\n  }\n  axios\n    .post(url,\n      dataToSend\n      , {\n        headers: headers\n      })\n    .then(data => {\n\n      cb(data);\n    })\n    .catch(error => {\n    });\n};\n\nexport const GetComunicationData = (dataToSend, cb) => {\n\n  return function (dispatch, getState) {\n    axios\n      .get(config.api.ServiceAPI + dataToSend.root, {\n        params: dataToSend.data\n      })\n      .then(data => {\n        cb(data);\n        //dispatch(GetCommonData_fetched({ data: data, dataToSend: dataToSend }));\n      })\n      .catch(error => {\n        dispatch(GetCommonData_fetch_error(error, dataToSend));\n      });\n  };\n};","\r\nimport React, { Suspense } from 'react';\r\n\r\nimport {\r\n    GetCommonData, GetCommonspData, GetDataDirect\r\n} from \"../../store/actions/CommonAction\";\r\nimport { getUrlParameter, getuser } from '../../utility/utility.jsx';\r\n\r\n\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport 'react-checkbox-tree/lib/react-checkbox-tree.css';\r\nimport CheckboxTree from 'react-checkbox-tree';\r\n\r\n\r\nclass ManagerHierarchy extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            nodes: [],\r\n            checked: [],\r\n            expanded: [],\r\n        }\r\n        //this.onExpand = this.onExpand.bind(this);\r\n    }\r\n    componentDidMount() {\r\n\r\n        let UserId = getuser().RoleId == 2 ? 75 : getuser().UserID;\r\n\r\n        GetDataDirect({\r\n            root: \"Hierarchy\",\r\n            ManagerId: UserId,\r\n            statename: \"Hierarchy-\" + UserId,\r\n            value: this.props.value,\r\n            state: true\r\n        }, function (result) {\r\n\r\n            let str = JSON.stringify(result);\r\n            var res = str.replace(/UserName/g, \"label\");\r\n            res = res.replace(this.props.value, \"value\");\r\n\r\n            this.setState({ nodes: JSON.parse(res) });\r\n        }.bind(this));\r\n    }\r\n    componentWillReceiveProps(nextProps) {\r\n\r\n    }\r\n\r\n\r\n    onButtonClick() {\r\n        this.props.handleShow({\r\n            SelectedSupervisors: this.state.checked\r\n        });\r\n        this.forceUpdate();\r\n    }\r\n    onMouseEnter(e) {\r\n        document.getElementById(\"floating\").style.right = 0\r\n        document.getElementById(\"handle\").style.right = \"395px\"\r\n        //e.target.style.right = 0;\r\n    }\r\n    onMouseOut(e) {\r\n        setTimeout(function () {\r\n            document.getElementById(\"floating\").style.right = \"-400px\"\r\n            document.getElementById(\"handle\").style.right = \"-15px\"\r\n        }, 700);\r\n\r\n        //e.target.style.right = \"-350px\";\r\n    }\r\n    RemoveChecked(checkeditem) {\r\n        const { checked } = this.state;\r\n        let index = checked.indexOf(checkeditem);\r\n        if (index > -1) {\r\n            checked.splice(index, 1);\r\n        }\r\n        this.setState(checked);\r\n    }\r\n    onClick() {\r\n\r\n    }\r\n    render() {\r\n        const { nodes, checked } = this.state;\r\n        if (nodes.length == 0) {\r\n            return null;\r\n        }\r\n        return (\r\n\r\n\r\n            <div id=\"floating\" className=\"floating\" onMouseLeave={this.onMouseOut}>\r\n\r\n                <Row >\r\n                    <Col md=\"8\"><div id=\"handle\" className=\"handle\" onClick={this.onMouseEnter}>Filter</div></Col>\r\n                    <Col md=\"4\"><input type=\"button\" className=\"btn btn-primary\" onClick={this.onButtonClick.bind(this)} value=\"Show\" /></Col>\r\n                </Row>\r\n\r\n                <Row>\r\n                    <Col>\r\n\r\n                        <div className=\"managers\">\r\n                            <CheckboxTree\r\n                                nodes={nodes}\r\n                                checked={this.state.checked}\r\n                                expanded={this.state.expanded}\r\n                                checkModel=\"all\"\r\n                                name=\"UserName\"\r\n                                showNodeIcon={false}\r\n                                onCheck={checked => this.setState({ checked })}\r\n                                onExpand={expanded => this.setState({ expanded })}\r\n                                showExpandAll={true}\r\n                            />\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n\r\n\r\n\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default ManagerHierarchy;\r\n","\nimport React from \"react\";\nimport { Form } from 'react-bootstrap';\nimport { connect } from \"react-redux\";\n// reactstrap components\n\nimport {\n    GetCommonData\n} from \"../../store/actions/CommonAction\";\nclass DropDown extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            items: [],\n        }\n    }\n    componentDidMount() {\n    }\n    componentWillReceiveProps(nextProps) {\n        this.setState({ items: nextProps.items });\n\n    }\n\n    displayoption(item) {\n        return <option key={item.Id} value={item.Id}>{item.Display}</option>\n    }\n\n    render() {\n\n\n        let { name, value, onChange, visible, items } = this.props;\n        if (!items) {\n            items = [];\n        }\n        if (visible == false) {\n            return null;\n        }\n        return (\n\n            <div>\n\n                <Form.Control as=\"select\" disabled={this.props.disabled} value={value} name={name} onChange={onChange}>\n                    {(this.props.firstoption !== false) && (\n                        <option key={0} value={0}>{this.props.firstoption ? this.props.firstoption : \"Select\"}</option>\n                    )}\n                    {items.map(item => (\n                        this.displayoption(item)\n                    ))}\n\n                </Form.Control>\n            </div>\n\n        );\n    }\n}\n\n\nexport default DropDown;\n\n"],"sourceRoot":""}