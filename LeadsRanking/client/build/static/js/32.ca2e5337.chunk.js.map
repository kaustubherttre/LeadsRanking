{"version":3,"sources":["views/UploadAgentChatData.jsx","views/Common/AlertBox.jsx","store/actions/CommonMysqlAction.jsx","views/Common/ManagerHierarchy.jsx","views/Common/DropDownListMysql.jsx","views/Common/Date.jsx","views/RealTimePanel/RealTimePanel.jsx","views/RealTimePanel/RealTimePanelQueuewiseTwo.jsx"],"names":["UploadAgentChatData","props","handleStartDate","StartDateValue","setState","StartDate","state","root","PageTitle","selectedIvrProduct","ivrType","ivrProducts","ivrQueues","SelectedQueues","addClass","UserId","RealTimeUrl","selectedValue","label","value","selectedFile","uploadFile","ManagerId","DownloadedFile","ResponseData","UploadStatusColumns","moment","format","UploadFileList","config","data","Id","Display","dateRangeRef","React","createRef","this","UserList","columnlist","fnDatatableCol","managerid","getuser","UserID","event","console","log","target","files","e","preventDefault","formData","FormData","append","name","PostAgentChatFileData","results","AgentChatAPICall","bind","toast","type","forEach","element","EmployeeID","ChatLimit","DailyLimit","json","UpdateAgentChatParams","UpdateAgentList","to","download","length","Object","entries","map","key","push","cell","row","className","Status","toString","searchable","columns","md","tag","onStartDate","ref","onSubmit","onFileUpload","onChange","onFileChange","renderDownloadFile","fileData","renderUploadStatus","Component","connect","CommonData","GetMySqlData","AlertBox","show","nextProps","setTimeout","variant","body","GetCommonData_fetched","Todos","dataToSend","statename","localStorage","setItem","JSON","stringify","constants","GET_COMMON_SUCCESS","payload","GetCommonData_fetch_error","error","GET_COMMON_FAIL","cb","undefined","dispatch","getState","getItem","parse","axios","get","api","base_url","params","then","catch","InsertData","post","INSERT_COMMON_SUCCESS","INSERT_COMMON_FAIL","InsertData_fetch_error","UpdateData","UPDATE_COMMON_SUCCESS","UPDATE_COMMON_FAIL","UpdateData_fetch_error","GetDataDirect","ManagerHierarchy","nodes","checked","expanded","RoleId","result","res","replace","handleShow","SelectedSupervisors","forceUpdate","document","getElementById","style","right","checkeditem","index","indexOf","splice","id","onMouseLeave","onMouseOut","onClick","onMouseEnter","onButtonClick","checkModel","showNodeIcon","onCheck","onExpand","showExpandAll","DropDownListMysql","items","CallApi","isError","col","Idfield","Displayfield","limit","skip","cols","con","visible","Control","as","disabled","firstoption","item","Date","handleStartDateChange","_isAMomentObject","startdate","enddate","add","handleEndDateChange","onEndDate","validation","currentDate","isBefore","validationEndDate","Group","controlId","dateFormat","RealTimePanel","AgentData","TotalData","onBarge","winactive","BargeWith","statuschange","_handleKeyDown","userAgent","schdular","selector","sortable","width","bargecall","Barge","aria-hidden","displayStatus","AgentCode","LastUpdatedOn","utc","from","ServerTime","hhmmss","TotalTalkTime","m","setInterval","hasFocus","window","addEventListener","context","c","GetRealTimeTotalData","user","join","EmployeeId","GetRealTimeAgentData","clearInterval","hangup","BargeWithAgent","unbargecall","toUpperCase","User","Pass","Realm","Asterisk_Url","WSServer","LoginAsteriskServer","CallingCompany","DIDNo","call","onsuccess","onerror","media","remote","audio","ua","uri","wsServers","authorizationUser","password","Web","Simple","on","stream","isRegistered","alldata","answered","unanswered","totalAgents","waitingCalls","totalAvailableAgents","totalcolumnlist","filterdata","required","onKeyDown","username","placeholder","_handleOnClick","pagination","striped","noHeader","highlightOnHover","dense","GetCommonData","GetCommonspData","RealTimePanelQueuewise","queues","QueueData","MoreInfoData","contextName","showModal","showMoreInfoModal","queueServerIp","clickedQueue","wraptime","wrapcomplete","unansweredlist","calltime","ModalTitle","entertime","mainqueueentertime","getHtmlListen","clickMoreinfo","moreinfolist","calldate","custom_disposition","getHtmlListenMoreInfo","fromNow","getLastUpdatedOn","getUrlParameter","getqueue","queueList","totalList","row_num","CreateMoreInfoRecordingURL","class","now","hanguptime","diff","call_type","data-toggle","title","CreateNCallersRecordingURL","number","paused","innerHTML","userfield","dstchannel","date","hour","datetime","phoneNo","substring","callid","recfilename","GetAwsRecordingUrl","status","url","src","GetFileExists","onloadedmetadata","duration","play","onended","pause","currentTime","calldataid","orig_callid","AwsRecordingUrl","GetRecordingName","CheckFile","extension","file_available","agent_file","record","queuestring","val","queuename","serverip","server_ip","GetRealTimeQueueData","is_mobile","is_claim","proid","product","ProductType","ProductId","IsMobile","IsClaim","filterContext","filter","queue","newContext","isMaster","child","UnansweredData","uniqueid","find","toLowerCase","lastupdatetime","lastsincetime","icon","classList","remove","CheckAudioFinishedPlay","tr","changeContext","data-myattribute","clickanswered","clickUnanswered","waitingibcalls","waitingctccalls","waitingassignedcalls","totalcalls","responsive","unansweredcolumns","moreinfocolumns","renderTotalData","onHide","dialogClassName","Header","closeButton","Title","Body","Footer"],"mappings":"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","file":"static/js/32.ca2e5337.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {\r\n    GetCommonData, GetCommonspData, GetFileExists, PostIncentiveFormData, PostAgentChatFileData, UpdateAgentChatParams\r\n} from \"../store/actions/CommonAction\";\r\nimport {\r\n    GetMySqlData, GetDataDirect\r\n} from \"../store/actions/CommonMysqlAction\";\r\nimport { connect } from \"react-redux\";\r\nimport { getuser, fnDatatableCol, joinObject } from '../utility/utility.jsx';\r\nimport DropDownListMysql from './Common/DropDownListMysql';\r\nimport MultiSelect from \"react-multi-select-component\";\r\nimport DropDown from './Common/DropDownList';\r\nimport RealTimePanel from './RealTimePanel/RealTimePanel';\r\nimport RealTimePanelQueuewise from './RealTimePanel/RealTimePanelQueuewiseTwo';\r\nimport { If, Then, Else } from 'react-if';\r\nimport AlertBox from './Common/AlertBox';\r\nimport DataTable from './Common/DataTableWithFilter';\r\nimport Date from \"./Common/Date\"\r\nimport moment from 'moment';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\n// reactstrap components\r\nimport {\r\n    Card,\r\n    CardHeader,\r\n    CardBody,\r\n    CardTitle,\r\n    Table,\r\n    Row,\r\n    Col\r\n} from \"reactstrap\";\r\nimport { ButtonGroup, Button, Modal, Form } from 'react-bootstrap';\r\nimport { func, string } from \"prop-types\";\r\n\r\nclass UploadAgentChatData extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            root: \"\",\r\n            PageTitle: \"\",\r\n            selectedIvrProduct: \"\",\r\n            ivrType: \"0\",\r\n            ivrProducts: [],\r\n            ivrQueues: [],\r\n            SelectedQueues: [],\r\n            addClass: '',\r\n            UserId: '',\r\n            RealTimeUrl: '',\r\n            selectedValue: [{ label: \"Select IVR Queues\", value: \"0\" }],\r\n            selectedFile: null,\r\n            uploadFile: '',\r\n            ManagerId: '',\r\n            DownloadedFile: '/SampleExcelfiles/AgentChatUploadData.xlsx',\r\n            ResponseData:'',\r\n            UploadStatusColumns: [],\r\n            StartDate: moment().format(\"YYYY-MM-01\"),\r\n        };\r\n\r\n        this.UploadFileList = {\r\n            config:\r\n            {\r\n                data: [{ Id: 1, Display: \"First Premium Paid only\" }, { Id: 2, Display: \"Free Look Cancellation\" }, { Id: 3, Display: \"Quality Score\" }\r\n                    , { Id: 4, Display: \"Warning Letters\" }, { Id: 5, Display: \"Arrears and Claw backs\" }],\r\n            }\r\n        };\r\n\r\n        this.dateRangeRef = React.createRef();\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.UserList();\r\n    }\r\n\r\n    fnDatatableCol(columnlist) {\r\n\r\n        var columns = fnDatatableCol(columnlist);\r\n        return columns;\r\n    }\r\n\r\n    UserList() {debugger;\r\n        const user = getuser();\r\n        var managerid = user.UserID;\r\n        this.setState({ManagerId : managerid});\r\n    }\r\n\r\n    // On file select (from the pop up) \r\n    onFileChange(event) { debugger;\r\n        console.log(event.target.files[0]);\r\n        // Update the state \r\n        this.setState({ selectedFile: event.target.files[0] }); \r\n       \r\n    }; \r\n\r\n    // On file upload (click the upload button) \r\n    onFileUpload(e)\r\n    {   \r\n        e.preventDefault();\r\n         debugger;\r\n        // if (this.state.uploadFile == '') {\r\n        // toast(\"Please select Upload File Type\", { type: 'error' });\r\n        // return;\r\n        // }\r\n        if (this.state.selectedFile == null) {\r\n        toast(\"Please choose Excel File\", { type: 'error' });\r\n        return;\r\n        }\r\n        // Create an object of formData \r\n        const formData = new FormData(); \r\n        console.log(formData);\r\n        // Update the formData object \r\n        formData.append( \r\n          \"myFile\", \r\n          this.state.selectedFile, \r\n          this.state.selectedFile.name \r\n        ); \r\n        // formData.append('TypeId', this.state.uploadFile); \r\n        // formData.append('UserId', this.state.ManagerId); \r\n        // formData.append('ValidFrom', moment(this.state.StartDate).format(\"YYYY-MM-01\"));    \r\n        \r\n       \r\n        // Details of the uploaded file \r\n        console.log(this.state.selectedFile);      \r\n        // Request made to the backend api \r\n        // Send formData object \r\n        PostAgentChatFileData(formData, function (results) {\r\n            console.log(results);\r\n            this.setState({ ResponseData: results.data.data }, () =>\r\n            this.AgentChatAPICall());\r\n        //     if(results.data.status == 200){\r\n        //     toast(results.data.data, { type: 'success' });\r\n        //     }else{\r\n        //    // toast(results.data.data, { type: 'error' });    \r\n        //     }\r\n        }.bind(this));\r\n    }\r\n\r\n    AgentChatAPICall(){\r\n        let requestdata = this.state.ResponseData;\r\n        requestdata.forEach(element => {\r\n            console.log(element.EmployeeID);\r\n            console.log(element.ChatLimit);\r\n            console.log(element.DailyLimit);\r\n            var json = {\r\n                \"employeeId\" : element.EmployeeID,\r\n               \"departmentname\":\"Health\",\r\n               \"chatlimit\":element.ChatLimit,\r\n               \"dailylimit\":element.DailyLimit\r\n               };\r\n               UpdateAgentChatParams(json, function (results) {\r\n    \r\n                this.setState({ UpdateAgentList: results.data.data})\r\n    \r\n            }.bind(this));\r\n        });\r\n        \r\n    }\r\n\r\n    fileData() \r\n    {      debugger;\r\n        if (this.state.selectedFile) { \r\n            \r\n          return ( \r\n            <div> \r\n              {/* <span>File Details:</span>  */}\r\n              <span>File Name: {this.state.selectedFile.name}</span> \r\n              <p>File Type: {this.state.selectedFile.type}</p> \r\n              {/* <p> \r\n                Last Modified:{\" \"} \r\n                {this.state.selectedFile.lastModifiedDate.toDateString()} \r\n              </p>  */}\r\n            </div> \r\n          ); \r\n        } else { \r\n          return ( \r\n            <div> \r\n              <br /> \r\n              <h4>Choose before Pressing the Upload button</h4> \r\n            </div> \r\n          ); \r\n        } \r\n    } \r\n\r\n    uploadfilechange(e, props){debugger;\r\n        this.setState({\r\n            uploadFile: e.target.value,\r\n            DownloadedFile: '/SampleExcelfiles/FirstPremPaid.xlsx'\r\n         });\r\n       \r\n    }\r\n\r\n    renderDownloadFile(){\r\n        if (this.state.DownloadedFile) {\r\n            return  <Link to={this.state.DownloadedFile} target=\"_blank\" download>Download Sample Excel File</Link>\r\n        }\r\n    }\r\n\r\n    renderUploadStatus() {debugger;\r\n\r\n        if (this.state.ResponseData && this.state.ResponseData.length > 0) {\r\n            let UploadStatusColumns = [];\r\n            let ResponseData = this.state.ResponseData;\r\n      \r\n            Object.entries(ResponseData[0]).map(([key,value])=>{\r\n                    if(key == 'Status'){                       \r\n                    UploadStatusColumns.push({ label: \"Status\",\r\n                                name: \"Status\",\r\n                                cell: row => <div className=\"Status\">{row.Status ? row.Status : \"N.A\"}</div>,\r\n                    })       \r\n                    }else if(key == 'FirstPremPaid' || key == 'FLC'){\r\n                        UploadStatusColumns.push({ label: key.toString(),\r\n                                name: key.toString(),\r\n                                type: \"bool\",\r\n                    })  \r\n                    }else{\r\n                    UploadStatusColumns.push({\r\n                    \"name\": key.toString(),\r\n                    \"label\": key.toString(),\r\n                     searchable: true,                    \r\n                    })\r\n                    }\r\n              })\r\n\r\n            const columns = this.fnDatatableCol(UploadStatusColumns);\r\n\r\n            return <Row>\r\n                <Col md=\"12\">\r\n                    <Card>\r\n                        <CardHeader>\r\n                            <Row>\r\n                                <Col md={12}>\r\n                                    <CardTitle tag=\"h6\">Upload Data Status</CardTitle>\r\n                                </Col>\r\n                            </Row>\r\n                        </CardHeader>\r\n                        <CardBody>\r\n                            <DataTable columns={columns} data={this.state.ResponseData} />\r\n                        </CardBody>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    renderMonthField(){\r\n        let type = this.state.uploadFile\r\n        if(type == 3 || type == 4 || type ==5){\r\n            return  <Col md={2}><Date onStartDate={this.handleStartDate.bind(this)}> </Date></Col>\r\n        }\r\n    }\r\n\r\n    handleStartDate = (StartDateValue) => {debugger;\r\n        this.setState({ StartDate: StartDateValue });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <div className=\"content\">\r\n                    <ToastContainer />\r\n                    <Row>\r\n                        <Col md=\"12\">\r\n                            <Card>\r\n                                <CardHeader>                                    \r\n                                    <Row>\r\n                                    {/* <Col md={3}>\r\n                                            <Form.Group controlId=\"upload_file_dropdown\">\r\n                                                <DropDown firstoption=\"Select Upload File\" value={this.state.uploadFile} col={this.UploadFileList} onChange={this.uploadfilechange.bind(this)}>\r\n                                                </DropDown>\r\n                                            </Form.Group>\r\n                                    </Col>                                  */}\r\n                                    {/* {this.renderMonthField()}    */}\r\n                                    <form ref=\"form\" onSubmit={this.onFileUpload.bind(this)}>\r\n                                            <input type=\"file\" onChange={this.onFileChange.bind(this)} /> \r\n                                            <button type=\"submit\" className=\"btn btn-primary\">Upload!</button>\r\n                                    </form>\r\n\r\n                                    {/* <Col md={3}>\r\n                                            <Form.Group controlId=\"Incentivefile_upload\" >\r\n                                                <Form.Label><i>*</i> File Upload </Form.Label>\r\n                                                <input type=\"file\" onChange={this.onFileChange.bind(this)} /> \r\n                                            </Form.Group>\r\n                                    </Col>\r\n                                    <Col md={3}>\r\n                                    <Button onClick={this.onFileUpload.bind(this)}> Upload! </Button> \r\n                                    </Col> */}\r\n                                 \r\n                                    </Row>\r\n\r\n                                </CardHeader>\r\n                                <CardBody>\r\n                                {this.renderDownloadFile()}   \r\n                                {this.fileData()}\r\n                                {this.renderUploadStatus()}\r\n                                </CardBody>\r\n                            </Card>\r\n                        </Col>\r\n                    </Row>\r\n                 </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        CommonData: state.CommonData\r\n    };\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    {\r\n        GetMySqlData,\r\n    }\r\n)(UploadAgentChatData);","\r\nimport React from \"react\";\r\nimport { Alert } from 'react-bootstrap';\r\n\r\n\r\nclass AlertBox extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            show: this.props.show\r\n        }\r\n    }\r\n    componentDidUpdate() {\r\n\r\n    }\r\n    componentWillReceiveProps(nextProps) {\r\n        this.setState({ show: nextProps.show });\r\n        if (nextProps.show) {\r\n            setTimeout(function () {\r\n                this.setState({ show: false });\r\n            }.bind(this), 5000);\r\n        }\r\n    }\r\n    render() {\r\n        if (this.state.show) {\r\n            return (\r\n                <Alert variant={this.props.variant}>\r\n                    {this.props.body}\r\n                </Alert>\r\n            );\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n}\r\n\r\nexport default AlertBox;\r\n","import axios from \"axios\";\nimport config from \"../../config.jsx\";\nimport constants from \"../../Constants/Constants.jsx\";\n\nconst GetCommonData_fetched = Todos => {\n\n  if (Todos.dataToSend.state && Todos.dataToSend.statename) {\n    localStorage.setItem(Todos.dataToSend.statename, JSON.stringify(Todos.data));\n  }\n\n  return {\n    type: constants.GET_COMMON_SUCCESS,\n    payload: Todos.data,\n    root: Todos.dataToSend.root\n  };\n};\n\nconst GetCommonData_fetch_error = error => {\n  return {\n    type: constants.GET_COMMON_FAIL,\n    payload: error\n  };\n};\n\nexport const GetMySqlData = (dataToSend,cb) => {\n\n  if (dataToSend.data != null || dataToSend.data != undefined) {\n    return function (dispatch, getState) {\n      dispatch(GetCommonData_fetched({ data: dataToSend.data, dataToSend: dataToSend }));\n    };\n  }\n  try {\n    if ((dataToSend.state && localStorage.getItem(dataToSend.statename)) || localStorage.getItem(dataToSend.statename)) {\n\n      return function (dispatch, getState) {\n        let data = JSON.parse(localStorage.getItem(dataToSend.statename))\n        dispatch(GetCommonData_fetched({ data: data, dataToSend: dataToSend }));\n      }\n    }\n  }\n  catch (e) {\n\n  }\n\n\n  return function (dispatch, getState) {\n    axios\n      .get(config.api.base_url + \"/mydb/list/\", {\n        params: dataToSend\n      })\n      .then(data => {\n        if (dataToSend.state && dataToSend.statename) {\n          localStorage.setItem(dataToSend.statename, JSON.stringify(data.data.data));\n        }\n        if (cb) {\n          cb(data);\n        }\n        dispatch(GetCommonData_fetched({ data: data.data.data[0], dataToSend: dataToSend }));\n      })\n      .catch(error => {\n        dispatch(GetCommonData_fetch_error(error, dataToSend));\n      });\n  };\n};\n\n\n\n\nconst InsertData_fetched = Todos => {\n\n  return {\n    type: constants.INSERT_COMMON_SUCCESS,\n    payload: Todos.data\n  };\n};\n\nconst InsertData_fetch_error = error => {\n  return {\n    type: constants.INSERT_COMMON_FAIL,\n    payload: error\n  };\n};\n\nexport const InsertData = (dataToSend, cb) => {\n  return function (dispatch, getState) {\n    axios\n      .post(config.api.base_url + \"/mydb/insert/\", {\n        data: dataToSend\n      })\n      .then(data => {\n        if (cb) {\n          cb(data);\n        }\n        dispatch(InsertData_fetched({ data: data.data }));\n      })\n      .catch(error => {\n        dispatch(InsertData_fetch_error(error));\n      });\n  };\n};\n\n\nconst UpdateData_fetched = Todos => {\n\n  return {\n    type: constants.UPDATE_COMMON_SUCCESS,\n    payload: Todos.data\n  };\n};\n\nconst UpdateData_fetch_error = error => {\n  return {\n    type: constants.UPDATE_COMMON_FAIL,\n    payload: error\n  };\n};\n\nexport const UpdateData = (dataToSend, cb) => {\n\n  return function (dispatch, getState) {\n    axios\n      .post(config.api.base_url + \"/mydb/update/\", {\n        data: dataToSend\n      })\n      .then(data => {\n        if (cb) {\n          cb(data);\n        }\n        dispatch(UpdateData_fetched({ data: data.data }));\n      })\n      .catch(error => {\n        dispatch(UpdateData_fetch_error(error));\n      });\n  };\n};\n\n\n\n\nexport const GetDataDirect = (dataToSend, cb) => {\n\n  try {\n    if ((dataToSend.state && localStorage.getItem(dataToSend.statename)) || localStorage.getItem(dataToSend.statename)) {\n\n      let data = JSON.parse(localStorage.getItem(dataToSend.statename));\n      cb(data);\n      return;\n    }\n  }\n  catch (e) {\n\n  }\n  //return function (dispatch, getState) {\n  axios\n    .get(config.api.base_url + \"/mydb/list/\", {\n      params: dataToSend\n    })\n    .then(data => {\n      if (dataToSend.state && dataToSend.statename) {\n        localStorage.setItem(dataToSend.statename, JSON.stringify(data.data.data));\n      }\n      cb(data.data.data);\n\n      //dispatch(GetCommonData_fetched({ data: data.data.data[0], dataToSend: dataToSend }));\n    })\n    .catch(error => {\n      //dispatch(GetCommonData_fetch_error(error, dataToSend));\n    });\n  //};\n\n};\n\nexport const GetRealTimeAgentData = (manager, context, cb) => {\n\n  let url = config.api.realtimeurl + \"RealTimeAgentStatus?managercode=\" + (context == \"\" ? manager : \"\") + \"&context=\" + context;\n\n  axios\n    .get(url)\n    .then(data => {\n\n      cb(data);\n      //dispatch(GetCommonData_fetched({ data: data.data.data[0], dataToSend: dataToSend }));\n    })\n    .catch(error => {\n      //dispatch(GetCommonData_fetch_error(error, dataToSend));\n    });\n  //};\n\n};\n\nexport const GetRealTimeTotalData = (context, cb) => {\n\n  let url = config.api.realtimeurl + \"RealTimeData?context=\" + context;\n\n  axios\n    .get(url)\n    .then(data => {\n\n      cb(data);\n      //dispatch(GetCommonData_fetched({ data: data.data.data[0], dataToSend: dataToSend }));\n    })\n    .catch(error => {\n      //dispatch(GetCommonData_fetch_error(error, dataToSend));\n    });\n  //};\n\n};\n\n\nexport const SendOTP = (dataToSend, cb) => {\n  let url = config.api.SendOTP;\n  const headers = {\n    'Content-Type': 'application/json',\n    'Authorization': 'cG9saWN5 YmF6YWFy'\n  }\n  axios\n    .post(url,\n      dataToSend\n      , {\n        headers: headers\n      })\n    .then(data => {\n\n      cb(data);\n    })\n    .catch(error => {\n    });\n};\n\nexport const ValidateOTP = (dataToSend, cb) => {\n  let url = config.api.ValidateOTP;\n  const headers = {\n    'Content-Type': 'application/json',\n    'Authorization': 'cG9saWN5 YmF6YWFy'\n  }\n  axios\n    .post(url,\n      dataToSend\n      , {\n        headers: headers\n      })\n    .then(data => {\n\n      cb(data);\n    })\n    .catch(error => {\n    });\n};\n\nexport const GetComunicationData = (dataToSend, cb) => {\n\n  return function (dispatch, getState) {\n    axios\n      .get(config.api.ServiceAPI + dataToSend.root, {\n        params: dataToSend.data\n      })\n      .then(data => {\n        cb(data);\n        //dispatch(GetCommonData_fetched({ data: data, dataToSend: dataToSend }));\n      })\n      .catch(error => {\n        dispatch(GetCommonData_fetch_error(error, dataToSend));\n      });\n  };\n};","\r\nimport React, { Suspense } from 'react';\r\n\r\nimport {\r\n    GetCommonData, GetCommonspData, GetDataDirect\r\n} from \"../../store/actions/CommonAction\";\r\nimport { getUrlParameter, getuser } from '../../utility/utility.jsx';\r\n\r\n\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport 'react-checkbox-tree/lib/react-checkbox-tree.css';\r\nimport CheckboxTree from 'react-checkbox-tree';\r\n\r\n\r\nclass ManagerHierarchy extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            nodes: [],\r\n            checked: [],\r\n            expanded: [],\r\n        }\r\n        //this.onExpand = this.onExpand.bind(this);\r\n    }\r\n    componentDidMount() {\r\n\r\n        let UserId = getuser().RoleId == 2 ? 75 : getuser().UserID;\r\n\r\n        GetDataDirect({\r\n            root: \"Hierarchy\",\r\n            ManagerId: UserId,\r\n            statename: \"Hierarchy-\" + UserId,\r\n            value: this.props.value,\r\n            state: true\r\n        }, function (result) {\r\n\r\n            let str = JSON.stringify(result);\r\n            var res = str.replace(/UserName/g, \"label\");\r\n            res = res.replace(this.props.value, \"value\");\r\n\r\n            this.setState({ nodes: JSON.parse(res) });\r\n        }.bind(this));\r\n    }\r\n    componentWillReceiveProps(nextProps) {\r\n\r\n    }\r\n\r\n\r\n    onButtonClick() {\r\n        this.props.handleShow({\r\n            SelectedSupervisors: this.state.checked\r\n        });\r\n        this.forceUpdate();\r\n    }\r\n    onMouseEnter(e) {\r\n        document.getElementById(\"floating\").style.right = 0\r\n        document.getElementById(\"handle\").style.right = \"395px\"\r\n        //e.target.style.right = 0;\r\n    }\r\n    onMouseOut(e) {\r\n        setTimeout(function () {\r\n            document.getElementById(\"floating\").style.right = \"-400px\"\r\n            document.getElementById(\"handle\").style.right = \"-15px\"\r\n        }, 700);\r\n\r\n        //e.target.style.right = \"-350px\";\r\n    }\r\n    RemoveChecked(checkeditem) {\r\n        const { checked } = this.state;\r\n        let index = checked.indexOf(checkeditem);\r\n        if (index > -1) {\r\n            checked.splice(index, 1);\r\n        }\r\n        this.setState(checked);\r\n    }\r\n    onClick() {\r\n\r\n    }\r\n    render() {\r\n        const { nodes, checked } = this.state;\r\n        if (nodes.length == 0) {\r\n            return null;\r\n        }\r\n        return (\r\n\r\n\r\n            <div id=\"floating\" className=\"floating\" onMouseLeave={this.onMouseOut}>\r\n\r\n                <Row >\r\n                    <Col md=\"8\"><div id=\"handle\" className=\"handle\" onClick={this.onMouseEnter}>Filter</div></Col>\r\n                    <Col md=\"4\"><input type=\"button\" className=\"btn btn-primary\" onClick={this.onButtonClick.bind(this)} value=\"Show\" /></Col>\r\n                </Row>\r\n\r\n                <Row>\r\n                    <Col>\r\n\r\n                        <div className=\"managers\">\r\n                            <CheckboxTree\r\n                                nodes={nodes}\r\n                                checked={this.state.checked}\r\n                                expanded={this.state.expanded}\r\n                                checkModel=\"all\"\r\n                                name=\"UserName\"\r\n                                showNodeIcon={false}\r\n                                onCheck={checked => this.setState({ checked })}\r\n                                onExpand={expanded => this.setState({ expanded })}\r\n                                showExpandAll={true}\r\n                            />\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n\r\n\r\n\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default ManagerHierarchy;\r\n","\r\nimport React from \"react\";\r\nimport { Form } from 'react-bootstrap';\r\nimport { connect } from \"react-redux\";\r\n// reactstrap components\r\n\r\nimport {\r\n    GetMySqlData\r\n} from \"../../store/actions/CommonMysqlAction\";\r\nclass DropDownListMysql extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            items: [],\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        if (this.state.items && this.state.items.length === 0) {\r\n            this.CallApi();\r\n        }\r\n    }\r\n    componentWillReceiveProps(nextProps) {\r\n        \r\n        // if (nextProps.col.config.rebind) {\r\n            \r\n        // }\r\n\r\n        if (!nextProps.CommonData.isError) {\r\n            //debugger;\r\n            if (nextProps.CommonData[this.props.col.config.root]) {\r\n                let str = JSON.stringify(nextProps.CommonData[this.props.col.config.root]);\r\n                var res = str.replace(this.props.col.config.Idfield, \"Id\");\r\n                res = res.replace(this.props.col.config.Displayfield, \"Display\");\r\n\r\n                this.setState({ items: JSON.parse(res) });\r\n            }\r\n        }\r\n    }\r\n\r\n    componentWillUpdate(){\r\n        //this.CallApi();\r\n    }\r\n\r\n    CallApi() {\r\n\r\n        this.props.GetMySqlData({\r\n            limit: 10,\r\n            skip: 0,\r\n            root: this.props.col.config.root,\r\n            cols: this.props.col.config.cols,\r\n            con: this.props.col.config.con,\r\n            data: this.props.col.config.data,\r\n            statename: this.props.col.config.statename,\r\n            state: this.props.col.config.state\r\n        });\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        let { items } = this.state;\r\n        const { value, onChange, visible } = this.props;\r\n\r\n        if (!items) {\r\n            items = [];\r\n        }\r\n        if (visible == false) {\r\n            return null;\r\n        }\r\n        return (\r\n\r\n            <div>\r\n\r\n                <Form.Control as=\"select\" disabled={this.props.disabled} value={value} name={this.props.col.name} onChange={onChange}>\r\n                    <option key={0} value={0}>{this.props.firstoption ? this.props.firstoption : \"Select\"}</option>\r\n                    {items.map(item => (\r\n                        <option key={item.Id} value={item.Id}>{item.Display}</option>\r\n                    ))}\r\n\r\n                </Form.Control>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        CommonData: state.CommonData\r\n    };\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    {\r\n        GetMySqlData\r\n    }\r\n)(DropDownListMysql);\r\n\r\n","\r\nimport React from \"react\";\r\nimport { Form } from 'react-bootstrap';\r\n\r\n// reactstrap components\r\nimport moment from 'moment';\r\n\r\nimport * as Datetime from 'react-datetime';\r\nimport 'react-datetime/css/react-datetime.css'\r\n\r\n\r\nimport { Row, Col } from 'react-bootstrap';\r\n\r\n\r\n\r\nclass Date extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleStartDateChange = this.handleStartDateChange.bind(this);\r\n        this.handleEndDateChange = this.handleEndDateChange.bind(this);\r\n\r\n        this.state = {\r\n            startdate: moment().format(\"YYYY-MM-DD\"),            \r\n        }\r\n    }\r\n    componentDidMount() {\r\n\r\n    }\r\n    componentWillReceiveProps(nextProps) {\r\n\r\n    }\r\n\r\n    handleStartDateChange = (e, props) => {\r\n        if (e._isAMomentObject) {\r\n            this.props.onStartDate(e.format(\"YYYY-MM-DD\"));\r\n            this.setState({ startdate: e.format(\"YYYY-MM-DD\"), enddate: e.add(30, 'days').format(\"YYYY-MM-DD\") }, function () {\r\n            });\r\n        }\r\n    }\r\n\r\n    handleEndDateChange = (e, props) => {\r\n        if (e._isAMomentObject) {\r\n            this.props.onEndDate(e.format(\"YYYY-MM-DD\"));\r\n            this.setState({ enddate: e.format(\"YYYY-MM-DD\") }, function () {\r\n                //this.fetchCallBackData();\r\n            });\r\n        }\r\n    }\r\n    validation = (currentDate) => {\r\n        return currentDate.isBefore(moment());\r\n    };\r\n\r\n    validationEndDate = (currentDate) => {\r\n        \r\n\r\n        if (!currentDate.isBefore(moment(this.state.enddate))) {\r\n            return false;\r\n        }\r\n\r\n        if(currentDate.isBefore(moment(this.state.startdate))) {\r\n            return false;\r\n        }\r\n        \r\n        return true;\r\n        \r\n    };\r\n\r\n    getSelectedDateRange() {\r\n        return {\r\n            startdate: this.state.startdate,\r\n            enddate: this.state.enddate\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n\r\n        let { visible } = this.props;\r\n\r\n        if (visible == false) {\r\n            return null;\r\n        }\r\n        return (\r\n\r\n            <>\r\n                    <Form.Group controlId=\"startdate_field\">\r\n                        <Datetime value={new Date()}\r\n                            dateFormat=\"YYYY-MM-DD\"\r\n                            value={this.state.startdate}\r\n                            isValidDate={this.validation.bind(this)}\r\n                            onChange={moment => this.handleStartDateChange(moment)}\r\n                            utc={true}\r\n                            timeFormat={false}\r\n                            className=\"form-group\"\r\n                        />\r\n                    </Form.Group>\r\n            </>\r\n\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default Date;\r\n\r\n","import React from \"react\";\r\nimport {\r\n  GetCommonData, GetCommonspData, GetRealTimeAgentData, GetRealTimeTotalData\r\n} from \"../../store/actions/CommonAction\";\r\nimport { hhmmss, getuser } from '../../utility/utility.jsx';\r\nimport { connect } from \"react-redux\";\r\nimport DataTable from 'react-data-table-component';\r\nimport ManagerHierarchy from '../Common/ManagerHierarchy';\r\nimport Moment from 'react-moment';\r\nimport { Web } from \"sip.js\";\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n// reactstrap components\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  Row,\r\n  Col\r\n} from \"reactstrap\";\r\nimport { Form } from 'react-bootstrap';\r\n\r\nclass RealTimePanel extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      PageTitle: \"RealTime Panel\",\r\n      AgentData: [],\r\n      TotalData: [],\r\n      items: [],\r\n      key: \"ALL\",\r\n      onBarge: false,\r\n      SelectedSupervisors: [],\r\n      winactive: 0,\r\n      BargeWith: \"\"\r\n    };\r\n    this.handleShow = this.handleShow.bind(this);\r\n    this.statuschange = this.statuschange.bind(this);\r\n    this._handleKeyDown = this._handleKeyDown.bind(this);\r\n    //this.bargecall = this.bargecall.bind(this);\r\n    this.userAgent = null;\r\n    this.winactive = 0;\r\n    this.schdular = null;\r\n    this.columnlist = [\r\n      {\r\n        name: \"Barging\",\r\n        selector: \"Barging\",\r\n        sortable: true,\r\n        width: \"80px\",\r\n        cell: row =>\r\n          <div className={row.Status == \"BUSY\" ? \"\" : \"hide\"} >\r\n\r\n            <button onClick={(e) => this.bargecall(e, row)} className={row.Barge ? \"hide\" : \"show\"}><i className=\"fa fa-volume-up\" aria-hidden=\"true\"></i></button>\r\n\r\n\r\n          </div>\r\n      },\r\n      {\r\n        name: \"Agent Code\",\r\n        selector: \"AgentCode\",\r\n\r\n        sortable: true,\r\n      },\r\n      {\r\n        name: \"Status\",\r\n        selector: \"Status\",\r\n        sortable: true,\r\n\r\n        cell: row => <div className={this.displayStatus(row) + \" RealtimeStatus\"}>{this.displayStatus(row)}</div>\r\n      },\r\n      {\r\n        name: \"Agent Name\",\r\n        selector: \"AgentName\",\r\n        sortable: true,\r\n      },\r\n      {\r\n        name: \"Call Type\",\r\n        selector: \"CallType\",\r\n      },\r\n      {\r\n        name: \"Lead Id\",\r\n        selector: \"LeadId\",\r\n        sortable: true,\r\n      },\r\n      {\r\n        name: \"D.C.\",\r\n        selector: \"CallingCompany\",\r\n\r\n        sortable: true,\r\n      },\r\n      {\r\n        name: \"DIDNo\",\r\n        selector: \"DIDNo\",\r\n\r\n        sortable: true,\r\n      },\r\n      // {\r\n      //   name: \"Asterisk_Url\",\r\n      //   selector: \"Asterisk_Url\",\r\n      //   width: \"120px\",\r\n      //   sortable: true,\r\n      // },\r\n\r\n      // {\r\n      //   name: \"Last Updated On\",\r\n      //   selector: \"LastUpdatedOn\",\r\n      //   width: \"130px\",\r\n      //   sortable: true,\r\n      //   cell: row => <div className={row.AgentCode}>{row.LastUpdatedOn ? <Moment format=\"HH:mm:ss A\">{row.LastUpdatedOn}</Moment> : \"N.A\"}</div>\r\n      // },\r\n      {\r\n        name: \"Since\",\r\n        selector: \"LastUpdatedOn\",\r\n        sortable: true,\r\n        width: \"130px\",\r\n        cell: row => <div className={row.AgentCode}>{row.LastUpdatedOn ? <Moment utc={true} from={row.ServerTime}>{row.LastUpdatedOn}</Moment> : \"N.A\"}</div>\r\n      },\r\n      {\r\n        name: \"T Calls\",\r\n        selector: \"TotalCalls\",\r\n        width: \"70px\",\r\n        sortable: true,\r\n      },\r\n      {\r\n        name: \"U Dials\",\r\n        selector: \"UniqueDials\",\r\n        width: \"70px\",\r\n        sortable: true,\r\n      },\r\n      {\r\n        name: \"C Dials\",\r\n        selector: \"ConnectedDials\",\r\n        width: \"70px\",\r\n        sortable: true,\r\n      },\r\n      {\r\n        name: \"T TalkTime\",\r\n        selector: \"TotalTalkTime\",\r\n        sortable: true,\r\n        width: \"130px\",\r\n        cell: row => hhmmss(row.TotalTalkTime),\r\n      },\r\n\r\n    ];\r\n\r\n\r\n  }\r\n\r\n  componentDidMount() {\r\n\r\n    const user = getuser();\r\n    this.setState({ SelectedSupervisors: [this.props.m] }, function () {\r\n      this.UserList();\r\n    }.bind(this));\r\n\r\n    if (this.schdular == null) {\r\n      this.schdular = setInterval(function () {\r\n        //if (!this.state.onBarge) {\r\n        //if ((new Date()).getHours() >= 21 || (new Date()).getHours() < 9) {\r\n        if (this.state.winactive == 1 || document.hasFocus()) {\r\n          this.UserList();\r\n          //this.totalList();\r\n        }\r\n        // }\r\n        // else {\r\n        //   this.UserList();\r\n        //   this.totalList();\r\n        // }\r\n        //}\r\n      }.bind(this), 2500)\r\n\r\n      window.addEventListener(\"message\", function (event) {\r\n        if (event.data.type == \"checkactive\") {\r\n          this.setState({ winactive: event.data.winactive })\r\n          this.winactive = event.data.winactive;\r\n        }\r\n      }.bind(this));\r\n    }\r\n  }\r\n\r\n  totalList() {\r\n    let context = this.props.c;\r\n    if (context != \"\") {\r\n      GetRealTimeTotalData(context, function (results) {\r\n        this.setState({ TotalData: results.data });\r\n      }.bind(this));\r\n    }\r\n  }\r\n\r\n  UserList() {\r\n    let managerid = this.props.m;\r\n    let context = this.props.c\r\n    const user = getuser();\r\n    if (this.state.SelectedSupervisors.length > 0) {\r\n      managerid = this.state.SelectedSupervisors.join()\r\n    }\r\n\r\n    if (managerid == \"\" && context == \"\") {\r\n      managerid = user.EmployeeId;\r\n      this.setState({ SelectedSupervisors: [managerid] });\r\n    }\r\n\r\n    GetRealTimeAgentData(managerid, context, function (results) {\r\n      this.setState({ AgentData: results.data });\r\n    }.bind(this));\r\n\r\n  }\r\n\r\n  handleShow(e) {\r\n    this.setState({ SelectedSupervisors: e.SelectedSupervisors });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    clearInterval(this.schdular);\r\n    if (this.userAgent != null)\r\n      this.userAgent.hangup();\r\n  }\r\n\r\n  displayStatus(row) {\r\n    // var diff = (new Date() - new Date(row.LastUpdatedOn)) / 1000;\r\n    // if (diff > 60 && row.Status == \"IDLE\") {\r\n    //   return \"Away\";\r\n    // } else return row.Status;\r\n    let BargeWithAgent = this.state.BargeWithAgent;\r\n    if (BargeWithAgent && BargeWithAgent.AgentCode == row.AgentCode && row.Status != \"BUSY\") {\r\n\r\n      // if (this.userAgent) {\r\n      //   this.userAgent.hangup();\r\n      //   this.userAgent = null;        \r\n      // }\r\n      // this.setState({ onBarge: false, BargeWith: \"\" });\r\n      this.unbargecall();\r\n    }\r\n    else if (BargeWithAgent && BargeWithAgent.AgentCode == row.AgentCode && row.Status == \"BUSY\") {\r\n      // if (this.userAgent == null) {\r\n      //   this.bargecall(null, BargeWithAgent);\r\n      // }\r\n    }\r\n    return row.Status.toUpperCase()\r\n  }\r\n\r\n  unbargecall(e) {\r\n    if (this.userAgent) {\r\n      this.userAgent.hangup();\r\n      this.userAgent = null;\r\n    }\r\n    this.setState({ onBarge: false, BargeWith: \"\", BargeWithAgent: null });\r\n  }\r\n\r\n\r\n  bargecall(e, row) {\r\n    try {\r\n      if (this.userAgent) {\r\n        this.userAgent.hangup();\r\n        this.userAgent = null\r\n      }\r\n      //if (!this.state.onBarge) {\r\n\r\n      let user = {\r\n        Display: getuser().EmployeeId,\r\n        User: getuser().EmployeeId,\r\n        Pass: getuser().EmployeeId,\r\n        Realm: row.Asterisk_Url,\r\n        WSServer: \"wss://\" + row.Asterisk_Url + \":8089/ws\"\r\n      }\r\n      this.LoginAsteriskServer(user, function () {\r\n        setTimeout(function () {\r\n\r\n          if (this.userAgent) {\r\n            let target = \"*222\" + row.AgentCode;\r\n            if (row.CallingCompany == \"WFH\" || row.CallingCompany == \"KNOWLARITY\") {\r\n              target = \"*222\" + row.DIDNo;\r\n            }\r\n\r\n            this.userAgent.call(target);\r\n          }\r\n          this.setState({ onBarge: true, BargeWith: row.AgentCode, BargeWithAgent: row });\r\n\r\n          // setTimeout(function () {\r\n          //   //this.forceUpdate();\r\n\r\n          // }.bind(this), 500);\r\n\r\n        }.bind(this), 1000);\r\n      }.bind(this), function () {\r\n        document.getElementById(row.AgentCode).checked = false;\r\n      }.bind(this));\r\n\r\n      // }\r\n      // else {\r\n      //   toast(\"Close previous call barging\", { type: 'error' });\r\n      //   e.target.checked = false;\r\n      //   return false;\r\n      // }\r\n\r\n\r\n    } catch (e) {\r\n\r\n    }\r\n\r\n  }\r\n\r\n  LoginAsteriskServer(user, onsuccess, onerror) {\r\n\r\n    if (user) {\r\n      var config = {\r\n        media: {\r\n          remote: {\r\n            //video: document.getElementById('remoteVideo'),\r\n            // This is necessary to do an audio/video call as opposed to just a video call\r\n            audio: document.getElementById('audioRemote')\r\n          }\r\n        },\r\n        ua: {\r\n          uri: user.User + '@' + user.Realm,\r\n          wsServers: [user.WSServer],\r\n          authorizationUser: user.Display,\r\n          password: user.Pass\r\n        }\r\n      }\r\n\r\n      if (Web) {\r\n        this.userAgent = new Web.Simple(config);\r\n\r\n        //let remoteElem = document.getElementById('audioRemote');\r\n        //let localElem = document.getElementById('audioLocal');\r\n        this.userAgent.on('connected', function (e) {\r\n          toast(\"Barging Connected!\", { type: 'success' });\r\n        });\r\n        this.userAgent.on('disconnected', function (e) {\r\n\r\n        });\r\n        this.userAgent.on('registered', function (e) {\r\n          if (onsuccess) {\r\n            onsuccess();\r\n          }\r\n\r\n        });\r\n        this.userAgent.on('registrationFailed', function (e) {\r\n          toast(\"Make sure your VPN is connected!\", { type: 'error' });\r\n        });\r\n        this.userAgent.on('unregistered', function (e) {\r\n          toast(\"Dialer issue please contact administrator!\", { type: 'error' });\r\n          if (onerror) {\r\n            onerror();\r\n          }\r\n\r\n        });\r\n        this.userAgent.on('userMediaFailed', function (e) {\r\n\r\n        });\r\n        this.userAgent.on('userMediaRequest', function (e) {\r\n\r\n        });\r\n        this.userAgent.on('userMedia', function (e) {\r\n\r\n        });\r\n        this.userAgent.on('invite', function (e) {\r\n\r\n        });\r\n        this.userAgent.on('addStream', function (stream) {\r\n\r\n        });\r\n        this.userAgent.on('ended', function (stream) {\r\n\r\n        });\r\n      }\r\n    }\r\n\r\n    setTimeout(function () {\r\n      if (this.userAgent && this.userAgent.ua && this.userAgent.ua.isRegistered() == false) {\r\n        toast(\"Make sure your VPN is connected!\", { type: 'error' });\r\n      }\r\n    }.bind(this), 10000);\r\n    return this.userAgent;\r\n  }\r\n  componentWillReceiveProps(nextProps) {\r\n    if (!nextProps.CommonData.isError) {\r\n\r\n    }\r\n  }\r\n\r\n  statuschange(e) {\r\n    this.setState({ key: e.target.value });\r\n\r\n  }\r\n\r\n  filterdata(e) {\r\n\r\n    let alldata = this.state.AgentData\r\n    let that = this;\r\n    if (this.state.key === \"ALL\") {\r\n      return alldata;\r\n    }\r\n    if (this.state.key === \"Away\") {\r\n      let AgentData = [];\r\n      alldata.forEach(element => {\r\n        var diff = (new Date() - new Date(element.LastUpdatedOn)) / 1000;\r\n        if (diff > 60 && element.Status === \"IDLE\") {\r\n          AgentData.push(element);\r\n        }\r\n      });\r\n      return AgentData;\r\n    }\r\n\r\n    let AgentData = [];\r\n    alldata.forEach(element => {\r\n      if (this.state.key.indexOf(element.Status) > -1) {\r\n        AgentData.push(element);\r\n      }\r\n    });\r\n    return AgentData;\r\n  }\r\n  _handleKeyDown(e) {\r\n\r\n    if (e.key === 'Enter') {\r\n      this.setState({ SelectedSupervisors: [e.target.value] });\r\n    }\r\n  }\r\n\r\n  _handleOnClick(e) {\r\n\r\n\r\n    this.setState({ SelectedSupervisors: [document.getElementById(\"EmpId\").value] });\r\n\r\n  }\r\n\r\n  renderTotalData() {\r\n    const context = this.props.c;\r\n    let TotalData = this.state.TotalData;\r\n    if (context != \"\") {\r\n      return <div>\r\n\r\n        <div className=\"totaldata\">\r\n          <Row></Row>\r\n          <Row>\r\n            <Col md={2}><span className=\"totaltext\">Context : {TotalData.context}</span></Col>\r\n            <Col md={2}><span className=\"totaltext\">Answered : {TotalData.answered}</span></Col>\r\n            <Col md={2}><span className=\"totaltext\">Unanswered : {TotalData.unanswered}</span></Col>\r\n            <Col md={2}><span className=\"totaltext\"># Agents : {TotalData.totalAgents}</span></Col>\r\n            <Col md={2}><span className=\"totaltext\">Waiting Calls : {TotalData.waitingCalls}</span></Col>\r\n            <Col md={2}><span className=\"totaltext\"># Avail. Agents : {TotalData.totalAvailableAgents}</span></Col>\r\n          </Row>\r\n        </div>\r\n        <br />\r\n      </div>\r\n    }\r\n    else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n\r\n  render() {\r\n    const columns = this.columnlist;\r\n    const totalcolumns = this.totalcolumnlist;\r\n    const data = this.filterdata();\r\n    const managerid = this.props.m;\r\n    const context = this.props.c;\r\n\r\n    const { items, PageTitle } = this.state;\r\n\r\n\r\n    return (\r\n      <>\r\n        <ToastContainer />\r\n        <Row>\r\n          <Col md=\"12\">\r\n            <Card>\r\n              <CardHeader>\r\n                <Row>\r\n                  <Col md={3}>\r\n                    <CardTitle tag=\"h4\">{PageTitle}</CardTitle>\r\n                  </Col>\r\n                  <Col md={4}>\r\n                    <CardTitle tag=\"h6\">{this.state.SelectedSupervisors.join()}</CardTitle>\r\n                  </Col>\r\n                  <Col md={3}>\r\n                    <div className=\"input-group\">\r\n\r\n                      <Form.Control required type=\"text\" name=\"EmpId\" id=\"EmpId\" onKeyDown={this._handleKeyDown} onChange={(e) => this.setState({ username: e.target.value })} value={this.state.username} placeholder={\"Enter Supervisor Id\"} />\r\n                      <div className=\"input-group-append\">\r\n                        <button onClick={(e) => this._handleOnClick(e)} className=\"btn btn-primary input-group-button\"><i className=\"fa fa-search\" aria-hidden=\"true\"></i></button>\r\n\r\n                      </div>\r\n                    </div>\r\n                  </Col>\r\n                  <Col md={2}>\r\n                    <div className=\"form-group\">\r\n                      <select className=\"form-control\" onChange={this.statuschange}>\r\n                        <option value=\"ALL\">ALL</option>\r\n                        <option value=\"IDLE\">IDLE</option>\r\n                        <option value=\"Away\">Away</option>\r\n                        <option value=\"BUSY\">BUSY</option>\r\n                        <option value=\"Lunch,Tea,Training,Meeting,Day End\">Break</option>\r\n                        <option value=\"PAUSE\">PAUSE</option>\r\n                        <option value=\"Auto Logout,LOGOUT\">LOGOUT</option>\r\n                      </select>\r\n                    </div>\r\n                    {\r\n                      (managerid == '' && context == '') ? <ManagerHierarchy handleShow={this.handleShow} value={/EmployeeId/g} ></ManagerHierarchy> : null\r\n                    }\r\n                    <button id=\"BargeWith\" onClick={(e) => this.unbargecall(e)} className={this.state.BargeWith == \"\" ? \"hide\" : \"btn btn-primary hangupwith show\"} ><i className=\"fa fa-volume-off\" aria-hidden=\"true\"></i> Hang Up With: {this.state.BargeWith}</button>\r\n                  </Col>\r\n\r\n                </Row>\r\n\r\n              </CardHeader>\r\n\r\n              <CardBody>\r\n                {/* {this.renderTotalData()} */}\r\n                <div className=\"statusdata\">\r\n                  <DataTable\r\n                    columns={columns}\r\n                    data={data}\r\n                    pagination={false}\r\n                    striped={true}\r\n                    noHeader={true}\r\n                    highlightOnHover\r\n                    dense\r\n\r\n                  />\r\n\r\n                </div>\r\n              </CardBody>\r\n\r\n            </Card>\r\n          </Col>\r\n          <audio id=\"audioRemote\"></audio>\r\n          <audio id=\"audioLocal\"></audio>\r\n        </Row>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    CommonData: state.CommonData\r\n  };\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    GetCommonData,\r\n    GetCommonspData\r\n  }\r\n)(RealTimePanel);\r\n\r\n\r\n\r\n\r\n","import React from \"react\";\nimport {\n  GetMySqlData\n} from \"../../store/actions/CommonMysqlAction\";\nimport {\n  GetCommonData, GetCommonspData, GetRealTimeAgentData, GetRealTimeTotalData, GetRealTimeQueueData, GetFileExists, \n  GetAwsRecordingUrl, GetRecordingName\n} from \"../../store/actions/CommonAction\";\nimport { getUrlParameter, hhmmss, getuser } from '../../utility/utility.jsx';\nimport { connect } from \"react-redux\";\nimport DataTable from 'react-data-table-component';\nimport ManagerHierarchy from '../Common/ManagerHierarchy';\nimport Moment from 'react-moment';\nimport moment from 'moment';\nimport { Web } from \"sip.js\";\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n// reactstrap components\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Table\n} from \"reactstrap\";\nimport { Form, Modal, Glyphicon } from 'react-bootstrap';\nimport { If, Then, Else } from 'react-if';\n\nclass RealTimePanelQueuewise extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      PageTitle: \"RealTime Panel\",\n      AgentData: [],\n      TotalData: [],\n      items: [],\n      key: \"ALL\",\n      onBarge: false,\n      SelectedSupervisors: [],\n      winactive: 0,\n      BargeWith: \"\",\n      queues: [],\n      QueueData: [],\n      MoreInfoData: [],\n      contextName: null,\n      showModal: false,\n      showMoreInfoModal: false,\n      addClass: \"fa fa-play-circle\",\n      queueServerIp: \"\",\n      clickedQueue : \"\",\n      wraptime: \"\",\n      wrapcomplete: false,\n    };\n    this.handleShow = this.handleShow.bind(this);\n    this.statuschange = this.statuschange.bind(this);\n    this._handleKeyDown = this._handleKeyDown.bind(this);\n    //this.bargecall = this.bargecall.bind(this);\n    this.userAgent = null;\n    this.winactive = 0;\n    this.schdular = null;\n\n    this.unansweredlist = [\n      { name: \"Callid\", selector: \"callid\" },\n      { name: \"leadid\", selector: \"leadid\" },\n      { name: \"Calltime\", cell: row => <div className=\"calltime\">{row.calltime ? <Moment format=\"YYYY-MM-DD HH:mm:ss\" utc={true}>{row.calltime}</Moment> : \"N.A\"}</div> },\n      { name: \"Status\", cell: row => <div className=\"abandon\">{this.state.ModalTitle.indexOf(\"Unanswered\") > -1 ? \"ABANDON\" : \"ANSWERED\"}</div> },\n      { name: \"Waiting Time\", selector: \"waittime\" },\n      { name: \"EnterTime\", cell: row => <div className=\"calltime\">{row.entertime ? <Moment format=\"YYYY-MM-DD HH:mm:ss\" utc={true}>{row.entertime}</Moment> : \"N.A\"}</div>,\n       width: \"150px\",\n    },\n      { name: \"Main Queue EnterTime\", cell: row => <div className=\"calltime\">{row.mainqueueentertime ? <Moment format=\"YYYY-MM-DD HH:mm:ss\" utc={true}>{row.mainqueueentertime}</Moment> : \"N.A\"}</div>,\n      width: \"150px\",\n    },\n      { name: \"IVR Time\", selector: \"ivrtime\" },\n      { name: \"Call Type\", selector: \"call_type\" },\n      {\n        name: \"Listen\", cell: row =>\n        <div className=\"listenUserDetails\">\n            {this.getHtmlListen(row)}\n        </div>\n      },\n      {\n        name: \"More Info\", cell: row => <div className=\"moreinfo\"><a onClick={(e) => this.clickMoreinfo(e, row)} className=\"detailsinfo\">\n          <i className=\"fa fa-eye\"></i></a>\n        </div>\n      },\n    ];\n    this.moreinfolist = [\n      { name: \"callid\", selector: \"callid\" },\n      { name: \"leadid\", selector: \"leadid\" }, \n      { name: \"Calldate\", cell: row => <div className=\"calldate\">{row.calldate ? <Moment utc={true} format=\"YYYY-MM-DD HH:mm:ss\">{row.calldate}</Moment> : \"N.A\"}</div> },\n      { name: \"agentno\", selector: \"agentno\" },\n      { name: \"agentid\", selector: \"agentid\" },\n      { name: \"isassignedagent\", selector: \"isassignedagent\" },\n      { name: \"duration\", selector: \"ringtime\" }, \n      { name: \"disposition\", \n        //selector: \"custom_disposition\",\n        cell: row => this.state.ModalTitle.indexOf(\"Unanswered\") > -1 && row.custom_disposition === \"ANSWERED\" ? \"NO ANSWER\" : row.custom_disposition\n      },\n      {\n        name: \"Listen\", cell: row =>(['Playback','Hangup'].indexOf(row.custom_disposition) > -1)?'No file found':\n        <div className=\"listen\">\n            {this.getHtmlListenMoreInfo(row)}\n        </div>\n      },\n      // {\n      //   name: \"Listen\", cell: row =>\n      //     <div className=\"listen\">\n      //       {this.CreateRecordingURL(row)}\n      //     </div>\n      // }\n    ];\n    this.columnlist = [\n      {\n        name: \"Barging\",\n        selector: \"Barging\",\n        sortable: true,\n        width: \"80px\",\n        cell: row =>\n          <div className={row.Status == \"BUSY\" ? \"\" : \"hide\"} >\n            <button onClick={(e) => this.bargecall(e, row)} className={row.Barge ? \"hide\" : \"show\"}><i className=\"fa fa-volume-up\" aria-hidden=\"true\"></i></button>\n          </div>\n      },\n      {\n        name: \"Agent Code\",\n        selector: \"AgentCode\",\n\n        sortable: true,\n      },\n      {\n        name: \"Status\",\n        selector: \"Status\",\n        sortable: true,\n\n        cell: row => <div className={this.displayStatus(row) + \" RealtimeStatus\"}>{this.displayStatus(row)}</div>\n      },\n      {\n        name: \"Agent Name\",\n        selector: \"AgentName\",\n        sortable: true,\n      },\n      {\n      name: \"TL Name\",\n      selector: \"TLName\",\n      sortable: true,\n      },\n      {\n        name: \"Call Type\",\n        selector: \"CallType\",\n      },\n      {\n        name: \"Lead Id\",\n        selector: \"LeadId\",\n        sortable: true,\n      },\n      {\n        name: \"D.C.\",\n        selector: \"CallingCompany\",\n\n        sortable: true,\n      },\n      {\n        name: \"DIDNo\",\n        selector: \"DIDNo\",\n\n        sortable: true,\n      },\n      {\n        name: \"Asterisk_Url\",\n        selector: \"Asterisk_Url\",\n        width: \"120px\",\n        sortable: true,\n      },\n\n      // {\n      //   name: \"Last Updated On\",\n      //   selector: \"LastUpdatedOn\",\n      //   width: \"130px\",\n      //   sortable: true,\n      //   cell: row => <div className={row.AgentCode}>{row.LastUpdatedOn ? <Moment format=\"HH:mm:ss A\">{row.LastUpdatedOn}</Moment> : \"N.A\"}</div>\n      // },\n      {\n        name: \"Since\",\n        selector: \"LastUpdatedOn\",\n        sortable: true,\n        width: \"130px\",\n        cell: row => <div className={row.AgentCode}>{row.LastUpdatedOn ? <Moment fromNow>{this.getLastUpdatedOn(row)}</Moment> : \"N.A\"}</div>\n\n        //cell: row => <div className={row.AgentCode}>{row.LastUpdatedOn ? <Moment fromNow>{row.LastUpdatedOn}</Moment> : \"N.A\"}</div>\n      },\n      {\n        name: \"T Calls\",\n        selector: \"TotalCalls\",\n        width: \"70px\",\n        sortable: true,\n      },\n      {\n        name: \"U Dials\",\n        selector: \"UniqueDials\",\n        width: \"70px\",\n        sortable: true,\n      },\n      {\n        name: \"C Dials\",\n        selector: \"ConnectedDials\",\n        width: \"70px\",\n        sortable: true,\n      },\n      {\n        name: \"T TalkTime\",\n        selector: \"TotalTalkTime\",\n        sortable: true,\n        width: \"130px\",\n        cell: row => hhmmss(row.TotalTalkTime),\n      },\n\n    ];\n\n\n  }\n\n  componentWillReceiveProps(nextProps) {debugger;\n    if ((nextProps.queues && nextProps.queues != this.props.queues) ) {\n\n    const user = getuser();\n    this.setState({ SelectedSupervisors: [getUrlParameter(\"m\") == \"\" ? user.EmployeeId : getUrlParameter(\"m\")] }, function () {\n      \n      this.getqueue();\n      this.UserList();\n      this.queueList();\n    }.bind(this));\n\n  }\n    if (this.schdular == null) {\n      this.schdular = setInterval(function () {\n        //if (!this.state.onBarge) {\n        //if ((new Date()).getHours() >= 21 || (new Date()).getHours() < 9) {\n        if (this.state.winactive == 1 || document.hasFocus()) {\n          //this.getqueue();\n          this.UserList();\n          this.totalList();\n          this.queueList();\n        }\n        // }\n        // else {\n        //   this.UserList();\n        //   this.totalList();\n        // }\n        //}\n      }.bind(this), 2500)\n\n      window.addEventListener(\"message\", function (event) {\n        if (event.data.type == \"checkactive\") {\n          this.setState({ winactive: event.data.winactive })\n          this.winactive = event.data.winactive;\n        }\n      }.bind(this));\n    }\n  \n  }\n\n  componentDidMount() {\n\n    const user = getuser();\n    this.setState({ SelectedSupervisors: [getUrlParameter(\"m\") == \"\" ? user.EmployeeId : getUrlParameter(\"m\")] }, function () {\n      \n      this.getqueue();\n      this.UserList();\n      this.queueList();\n    }.bind(this));\n\n  \n    if (this.schdular == null) {\n      this.schdular = setInterval(function () {\n        //if (!this.state.onBarge) {\n        //if ((new Date()).getHours() >= 21 || (new Date()).getHours() < 9) {\n        if (this.state.winactive == 1 || document.hasFocus()) {\n          //this.getqueue();\n          this.UserList();\n          this.totalList();\n          this.queueList();\n        }\n        // }\n        // else {\n        //   this.UserList();\n        //   this.totalList();\n        // }\n        //}\n      }.bind(this), 2500)\n\n      window.addEventListener(\"message\", function (event) {\n        if (event.data.type == \"checkactive\") {\n          this.setState({ winactive: event.data.winactive })\n          this.winactive = event.data.winactive;\n        }\n      }.bind(this));\n    }\n  \n  }\n\n  getHtmlListenMoreInfo(row){\n    return  (<span id={\"span_\" + row.row_num} onClick={(e) => this.CreateMoreInfoRecordingURL(e, row)}>\n      <i class=\"fa fa-play-circle listen\"></i>\n      </span>)\n  }\n\n  getHtmlListen(row){debugger;\n    //var diff = (new Date() - new Date(row.hanguptime)) / 1000;\n    var now = moment().format(\"YYYY-MM-DD HH:mm:ss\");\n    var then = moment.utc(new Date(row.hanguptime)).format(\"YYYY-MM-DD HH:mm:ss\");\n\n    //var then = moment(row.hanguptime).format(\"YYYY-MM-DD HH:mm:ss\");\n    var diff = (moment(now,\"YYYY-MM-DD HH:mm:ss\").diff(moment(then,\"YYYY-MM-DD HH:mm:ss\")))/ 1000;\n\n    //if (row.orig_callid == 0){\n    //  return <i class=\"fa fa-info-circle infotooltip\" data-toggle=\"tooltip\" title=\"Transferred Call- Recording available next day on AI Portal\" aria-hidden=\"true\"></i>\n    //}\n    if (row.call_type == 1 && diff < 600) {\n      return <i class=\"fa fa-info-circle infotooltip\" diff={diff} data-toggle=\"tooltip\" title=\"Transferred Call- Recording available after 10 minutes of Call\" aria-hidden=\"true\"></i>\n    }\n    else if(diff < 600){\n      return <i class=\"fa fa-info-circle infotooltip\" data-toggle=\"tooltip\" title=\"IB - Recording available after 10 minutes of Call\" aria-hidden=\"true\"></i>\n    }else{\n      return  (<span id={\"span_\" + row.row_num} onClick={(e) => this.CreateNCallersRecordingURL(e, row)}>\n      <i class=\"fa fa-play-circle listen\"></i>\n      </span>)\n    }\n  }\n\n  CreateMoreInfoRecordingURL(e, row){\n    var audio = document.getElementById('audio2');\n    var number = row.row_num;\n    if (audio.paused) {\n      document.getElementById('span_'+ number).innerHTML = '<i class=\"fa fa-spinner fa-spin\"></i>';\n      let userfield = row.userfield;\n      let dstchannel = row.dstchannel;\n      let date = moment(new Date(userfield)).format(\"DD-MM-YYYY\");\n      let hour = moment(new Date(userfield)).format(\"H\");\n      let datetime = moment(new Date(userfield)).format(\"YYYYMMDDHHmmss\");\n      let phoneNo = dstchannel.substring(dstchannel.indexOf(\"/\") + 1, dstchannel.indexOf(\"-\"));\n      let callid = row.callid;\n      console.log(date, hour, datetime, phoneNo, callid);\n      let recfilename = \"recording/\"+ date + \"/\" + hour + \"/\" + callid + \"-\" + datetime + \"-\" + phoneNo + \".wav\";\n      //let url = \"https://asterisk-log.s3.ap-south-1.amazonaws.com/recording/\" + date + \"/\" + hour + \"/\" + callid + \"-\" + datetime + \"-\" + phoneNo + \".wav\";\n  \n  \n      if (date == \"Invalid date\" || hour == \"Invalid date\" || datetime == \"Invalid date\" || phoneNo == null) {\n        document.getElementById('span_'+ number).innerHTML = 'No File Found';\n        return;\n      }\n      //debugger;\n          GetAwsRecordingUrl(recfilename, 'asterisk-log' ,function (results) {debugger;\n            //debugger;\n\n            console.log(\"results\", results);\n            if (results.data.status == 200) {\n              let url = results.data.data;\n              audio.src = results.data.data;\n              document.getElementById('span_'+ number).innerHTML = '<i class=\"fa fa-spinner fa-spin\"></i>';\n              GetFileExists(url, function (params) {\n                //debugger;\n                if (params && params.status && params.status != 404) {\n                  audio.onloadedmetadata = function() {\n                    console.log(audio.duration)\n                    //setTimeout(function () {\n                      audio.play();\n                      console.log(audio.duration);\n                      if(audio.paused == false && audio.duration > 0 && audio.duration != 'Infinity' && audio.duration != 'NaN'){\n                      document.getElementById('span_'+ number).innerHTML = '<i class=\"fa fa-stop-circle listen\"></i>';\n                     \n                      audio.onended = function() {\n                        document.getElementById('span_'+ number).innerHTML = '<i class=\"fa fa-play-circle listen\"></i>';\n                      };\n                     \n                      }else{\n                      document.getElementById('span_'+ number).innerHTML = 'No File Found'; \n                      }\n                   // }.bind(this), 500);\n                  };\n                } else {\n                  try {\n                    document.getElementById(\"span_\" + row.row_num).innerHTML = \"File not found\";\n                  } catch (e) {\n                    //console.log('error', e);        \n                  }\n                }\n              });\n            \n              \n            } else {\n              document.getElementById('span_'+ number).innerHTML = 'No File Found';\n            }\n          }.bind(this));\n       \n\n\n    } else {\n      //debugger;\n      audio.pause();\n      audio.currentTime = 0;\n      document.getElementById('span_'+ number).innerHTML = '<i class=\"fa fa-play-circle listen\"></i>';\n\n    }\n\n  }\n  CreateNCallersRecordingURL(e,row){\n    var audio = document.getElementById('audio1');\n    var number = row.row_num;\n    if (audio.paused) {\n\n      let calldataid = row.orig_callid;\n      this.state.AwsRecordingUrl = '';\n      document.getElementById('span_'+ number).innerHTML = '<i class=\"fa fa-spinner fa-spin\"></i>';\n      //debugger;\n      GetRecordingName(calldataid, function (results) {\n        //console.log(\"results\", results);   \n        var CheckFile = '';\n        var extension = '';\n        if(results.data.file_available == true){\n          extension = '.wav';\n          CheckFile = results.data.file_available;\n        }else{\n          extension = '-out.wav';\n          CheckFile = results.data.agent_file;\n        }\n\n        if (CheckFile == true) {\n          //this.setState({ RecordingName: results.data.record });\n          GetAwsRecordingUrl(results.data.record+extension, 'newcctecbuckt', function (results) {\n            //debugger;\n            console.log(\"results\", results);\n            if (results.data.status == 200) {\n              this.setState({ AwsRecordingUrl: results.data.data });\n              audio.src = results.data.data;\n              document.getElementById('span_'+ number).innerHTML = '<i class=\"fa fa-spinner fa-spin\"></i>';\n\n              audio.onloadedmetadata = function() {\n                console.log(audio.duration)\n                //setTimeout(function () {\n                  audio.play();\n                  console.log(audio.duration);\n                  if(audio.paused == false && audio.duration > 0 && audio.duration != 'Infinity' && audio.duration != 'NaN'){\n                  document.getElementById('span_'+ number).innerHTML = '<i class=\"fa fa-stop-circle listen\"></i>';\n                 \n                  audio.onended = function() {\n                    document.getElementById('span_'+ number).innerHTML = '<i class=\"fa fa-play-circle listen\"></i>';\n                  };\n                 \n                  }else{\n                  document.getElementById('span_'+ number).innerHTML = 'No File Found'; \n                  }\n               // }.bind(this), 500);\n              };\n              \n            } else {\n              document.getElementById('span_'+ number).innerHTML = 'No File Found';\n            }\n          }.bind(this));\n        } else {\n          document.getElementById('span_'+ number).innerHTML = 'No File Name Found';\n        }\n\n      }.bind(this));\n\n    } else {\n      //debugger;\n      audio.pause();\n      audio.currentTime = 0;\n      document.getElementById('span_'+ number).innerHTML = '<i class=\"fa fa-play-circle listen\"></i>';\n\n    }\n\n  }\n\n  // CreateRecordingURL(row) {debugger;\n\n  //   let userfield = row.userfield;\n  //   let dstchannel = row.dstchannel;\n  //   let date = moment(new Date(userfield)).format(\"DD-MM-YYYY\");\n  //   let hour = moment(new Date(userfield)).format(\"H\");\n  //   let datetime = moment(new Date(userfield)).format(\"YYYYMMDDHHmmss\");\n  //   let phoneNo = dstchannel.substring(dstchannel.indexOf(\"/\") + 1, dstchannel.indexOf(\"-\"));\n  //   let callid = row.callid;\n  //   console.log(date, hour, datetime, phoneNo, callid);\n  //   let recfilename = date + \"/\" + hour + \"/\" + callid + \"-\" + datetime + \"-\" + phoneNo + \".wav\";\n  //   //let url = \"https://asterisk-log.s3.ap-south-1.amazonaws.com/recording/\" + date + \"/\" + hour + \"/\" + callid + \"-\" + datetime + \"-\" + phoneNo + \".wav\";\n\n\n  //   if (date == \"Invalid date\" || hour == \"Invalid date\" || datetime == \"Invalid date\" || phoneNo == null) {\n  //     return <span>File not found</span>\n  //   }\n\n  //   GetAwsRecordingUrl(recfilename, function (results) {debugger;\n\n  //     console.log(\"results\", results);\n  //     if (results.data.status == 200) {\n  //       let url = results.data.data;  \n             \n  //     } else {\n  //       try {\n  //         document.getElementById(\"span_\" + row.row_num).innerHTML = \"File not found\";\n  //       } catch (e) {\n  //         //console.log('error', e);        \n  //       }}\n  //   }.bind(this));\n\n  // }\n\n  totalList() {\n    let context = getUrlParameter(\"c\");\n    if (context != \"\") {\n      GetRealTimeTotalData(context, function (results) {\n        this.setState({ TotalData: results.data });\n      }.bind(this));\n    }\n  }\n\n  queueList() {//debugger;\n    let queues = this.state.queues;\n    //console.log(\"queues\", queues);\n\n    var queuestring = queues.map(function (val) {\n      return val.queuename;\n    });\n\n    var serverip = queues.map(function (val) {\n      return val.server_ip;\n    });\n\n    //var contextName = this.state.contextName ?? queuestring[0];\n\n    //this.setState({ queueServerIp: serverip[0], contextName: contextName });\n    this.setState({ queueServerIp: serverip[0] });\n\n    GetRealTimeQueueData(queuestring.join(\",\"), function (results) {\n      //console.log(\"results\", results);\n      this.setState({ QueueData: results.data });\n    }.bind(this));\n  }\n  getqueue() {debugger;\n    // let type = getUrlParameter(\"type\") == \"\" ? \"sales\" : getUrlParameter(\"type\");\n    // let proid = getUrlParameter(\"product\") == \"\" ? \"1\" : getUrlParameter(\"product\");\n    let is_mobile = getUrlParameter(\"IsMobile\") == \"\" ? \"0\" : getUrlParameter(\"IsMobile\");\n    let is_claim = getUrlParameter(\"IsClaim\") == \"\" ? \"0\" : getUrlParameter(\"IsClaim\");\n    // let queues =  getUrlParameter(\"queues\");\n    let type = this.props.type == \"\" ? \"sales\" : this.props.type;\n    let proid = this.props.product == \"\" ? \"1\" : this.props.product;\n    let queues =  this.props.queues;\n\n    // this.props.GetMySqlData({\n    //   root: \"getqueue\",\n    //   ProductType: type,\n    //   ProductId: proid,\n    //   IsMobile: is_mobile,\n    //   IsClaim:  is_claim,\n    // });\n\n    this.props.GetMySqlData({\n      root: \"getqueuetwo\",\n      ProductType: type,\n      ProductId: proid,\n      IsMobile: is_mobile,\n      IsClaim:  is_claim,\n      queues:   queues,\n    }, function (result) {\n      //console.log(\"result\",result);\n      this.setState({ queues: result.data.data[0] });\n    }.bind(this));\n  }\n\n  UserList() {\n    let managerid = getUrlParameter(\"m\");\n    let context = this.state.contextName == null ? getUrlParameter(\"c\") : this.state.contextName;\n    if(context == 'breakinmotor'){\n      context = 'BreakinMotor';\n    }\n    // if(context == 'claimofflinemotorib'){\n    //   context = \"claimofflinemotornia,claimofflinemotorprivate,claimofflinemotoruiic,claimofflinemotornao\";\n    // }\n    // if(context == 'claimonlinemotorib'){\n    //   context = \"claimonlinemotordc,claimonlinemotorqc,claimonlinemotorpayment\";\n    // }\n    let queues = this.state.queues;\n    const filterContext = queues.filter( (queue)=> queue.queuename == context);\n    //console.log(filterContext);\n    let newContext = '';\n    if(filterContext.length > 0){\n      this.setState({ wraptime : filterContext[0].wraptime});\n      if(filterContext[0].isMaster == 1){\n        newContext=filterContext[0].child\n      }else{\n        newContext=filterContext[0].queuename\n      }\n    }\n\n    const user = getuser();\n    if (this.state.SelectedSupervisors.length > 0) {\n      managerid = this.state.SelectedSupervisors.join()\n    }\n\n    if (managerid == \"\" && context == \"\") {\n      managerid = user.EmployeeId;\n      this.setState({ SelectedSupervisors: [managerid] });\n    }\n    if (managerid || context){\n    GetRealTimeAgentData(managerid, newContext, function (results) {\n      this.setState({ AgentData: results.data });\n    }.bind(this));\n  }\n\n  }\n\n  handleShow(e) {\n    this.setState({ SelectedSupervisors: e.SelectedSupervisors });\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.schdular);\n    if (this.userAgent != null)\n      this.userAgent.hangup();\n  }\n\n  changeContext(e, row) {\n    this.setState({ contextName: row.context });\n  }\n\n  clickUnanswered(e, row) {\n    let queuename = row.context;\n    this.setState({clickedQueue : queuename});\n    this.props.GetMySqlData({\n      root: \"unanswered\",\n      queues: queuename,\n    }, function (result) {\n      ////debugger;\n      this.setState({ showModal: true, UnansweredData: result.data.data[0], ModalTitle: \"Unanswered Calls\" });\n    }.bind(this));\n\n  }\n  clickanswered(e, row) {\n    let queuename = row.context;\n    this.setState({clickedQueue : queuename});\n\n    this.props.GetMySqlData({\n      root: \"answered\",\n      queues: queuename,\n    }, function (result) {\n      ////debugger;\n      this.setState({ showModal: true, UnansweredData: result.data.data[0], ModalTitle: \"Answered Calls\" });\n    }.bind(this));\n\n  }\n\n  clickMoreinfo(e, row) {//debugger;\n    let uniqueid = row.callid;\n    let queues = this.state.queues;\n    let queue = this.state.clickedQueue;\n\n    const queueData = queues.find((item) => item.queuename.toLowerCase() === queue.toLowerCase());\n\n    // if (queue == 'breakinmotor'){\n    //   var queueServerIp = \"10.0.91.32\";\n    // }else{\n    var queueServerIp = queueData.server_ip;\n    // }\n\n    this.props.GetMySqlData({\n      root: \"moreinfo\",\n      uniqueid: uniqueid,\n      queueServerIp: queueServerIp,\n    }, function (result) {////debugger;\n      this.setState({ showMoreInfoModal: true, MoreInfoData: result.data.data[0] });\n    }.bind(this));\n\n  }\n\n  getLastUpdatedOn(row) {\n    if(this.state.wraptime && row.Status == \"IDLE\"){\n      let lastupdatetime = moment(row.LastUpdatedOn).format('YYYY-MM-DD HH:mm:ss');\n      let currentTime = moment(row.ServerTime).format('YYYY-MM-DD HH:mm:ss');//moment().format(\"YYYY-MM-DD HH:mm:ss\");\n      var diff = (moment(currentTime,\"YYYY-MM-DD HH:mm:ss\").diff(moment(lastupdatetime,\"YYYY-MM-DD HH:mm:ss\")))/ 1000;\n\n      if(diff > this.state.wraptime){\n        let lastsincetime =  moment(row.LastUpdatedOn).add(this.state.wraptime, 'seconds').format('YYYY-MM-DD HH:mm:ss');\n        console.log('agent',row.AgentCode,'since',lastsincetime,'currenttime',currentTime);\n        console.log('agent',row.AgentCode,moment(lastsincetime).fromNow());\n        return lastsincetime;\n      }else{\n        return row.LastUpdatedOn;\n      }\n\n    }else{\n      return row.LastUpdatedOn;\n    }\n\n  }\n\n  displayStatus(row) {\n    // var diff = (new Date() - new Date(row.LastUpdatedOn)) / 1000;\n    // if (diff > 60 && row.Status == \"IDLE\") {\n    //   return \"Away\";\n    // } else return row.Status;\n    let BargeWithAgent = this.state.BargeWithAgent;\n    if (BargeWithAgent && BargeWithAgent.AgentCode == row.AgentCode && row.Status != \"BUSY\") {\n\n      // if (this.userAgent) {\n      //   this.userAgent.hangup();\n      //   this.userAgent = null;        \n      // }\n      // this.setState({ onBarge: false, BargeWith: \"\" });\n      this.unbargecall();\n    }\n    else if (BargeWithAgent && BargeWithAgent.AgentCode == row.AgentCode && row.Status == \"BUSY\") {\n      // if (this.userAgent == null) {\n      //   this.bargecall(null, BargeWithAgent);\n      // }\n    }\n    console.log('wraptime',this.state.wraptime);\n    let status = row.Status;\n    if(this.state.wraptime && row.Status == \"IDLE\"){\n      let lastupdatetime = moment(row.LastUpdatedOn).format('YYYY-MM-DD HH:mm:ss');\n      let currentTime =  moment(row.ServerTime).format('YYYY-MM-DD HH:mm:ss');//moment().format(\"YYYY-MM-DD HH:mm:ss\");\n      var diff = (moment(currentTime,\"YYYY-MM-DD HH:mm:ss\").diff(moment(lastupdatetime,\"YYYY-MM-DD HH:mm:ss\")))/ 1000;\n\n      if(diff < this.state.wraptime){\n        console.log('agent',row.AgentCode,'lastupdatetime',lastupdatetime,'currenttime',currentTime,'diff',diff);\n        status = \"OnWrap\";\n      }else{\n        status = row.Status;\n      }\n\n    }\n    return status.toUpperCase()\n  }\n\n  unbargecall(e) {\n    if (this.userAgent) {\n      this.userAgent.hangup();\n      this.userAgent = null;\n    }\n    this.setState({ onBarge: false, BargeWith: \"\", BargeWithAgent: null });\n  }\n\n\n  bargecall(e, row) {\n    try {\n      if (this.userAgent) {\n        this.userAgent.hangup();\n        this.userAgent = null\n      }\n      //if (!this.state.onBarge) {\n\n      let user = {\n        Display: getuser().EmployeeId,\n        User: getuser().EmployeeId,\n        Pass: getuser().EmployeeId,\n        Realm: row.Asterisk_Url,\n        WSServer: \"wss://\" + row.Asterisk_Url + \":8089/ws\"\n      }\n      this.LoginAsteriskServer(user, function () {\n        setTimeout(function () {\n\n          if (this.userAgent) {\n            let target = \"*222\" + row.AgentCode;\n            if (row.DIDNo) {\n              target = \"*222\" + row.DIDNo;\n            }\n\n            this.userAgent.call(target);\n          }\n          this.setState({ onBarge: true, BargeWith: row.AgentCode, BargeWithAgent: row });\n\n          // setTimeout(function () {\n          //   //this.forceUpdate();\n\n          // }.bind(this), 500);\n\n        }.bind(this), 1000);\n      }.bind(this), function () {\n        document.getElementById(row.AgentCode).checked = false;\n      }.bind(this));\n\n      // }\n      // else {\n      //   toast(\"Close previous call barging\", { type: 'error' });\n      //   e.target.checked = false;\n      //   return false;\n      // }\n\n\n    } catch (e) {\n\n    }\n\n  }\n\n  LoginAsteriskServer(user, onsuccess, onerror) {\n\n    if (user) {\n      var config = {\n        media: {\n          remote: {\n            //video: document.getElementById('remoteVideo'),\n            // This is necessary to do an audio/video call as opposed to just a video call\n            audio: document.getElementById('audioRemote')\n          }\n        },\n        ua: {\n          uri: user.User + '@' + user.Realm,\n          wsServers: [user.WSServer],\n          authorizationUser: user.Display,\n          password: user.Pass\n        }\n      }\n\n      if (Web) {\n        this.userAgent = new Web.Simple(config);\n\n        //let remoteElem = document.getElementById('audioRemote');\n        //let localElem = document.getElementById('audioLocal');\n        this.userAgent.on('connected', function (e) {\n          toast(\"Barging Connected!\", { type: 'success' });\n        });\n        this.userAgent.on('disconnected', function (e) {\n\n        });\n        this.userAgent.on('registered', function (e) {\n          if (onsuccess) {\n            onsuccess();\n          }\n\n        });\n        this.userAgent.on('registrationFailed', function (e) {\n          toast(\"Make sure your VPN is connected!\", { type: 'error' });\n        });\n        this.userAgent.on('unregistered', function (e) {\n          toast(\"Dialer issue please contact administrator!\", { type: 'error' });\n          if (onerror) {\n            onerror();\n          }\n\n        });\n        this.userAgent.on('userMediaFailed', function (e) {\n\n        });\n        this.userAgent.on('userMediaRequest', function (e) {\n\n        });\n        this.userAgent.on('userMedia', function (e) {\n\n        });\n        this.userAgent.on('invite', function (e) {\n\n        });\n        this.userAgent.on('addStream', function (stream) {\n\n        });\n        this.userAgent.on('ended', function (stream) {\n\n        });\n      }\n    }\n\n    setTimeout(function () {\n      if (this.userAgent && this.userAgent.ua && this.userAgent.ua.isRegistered() == false) {\n        toast(\"Make sure your VPN is connected!\", { type: 'error' });\n      }\n    }.bind(this), 10000);\n    return this.userAgent;\n  }\n  // componentWillReceiveProps(nextProps) {\n  //   if (!nextProps.CommonData.isError) {\n  //     //this.setState({ queues: nextProps.CommonData[\"getqueue\"] });\n  //     //this.setState({ UnansweredData: nextProps.CommonData[\"unanswered\"] });\n  //   }\n  // }\n\n  play(number) {\n    var audio = document.getElementById('audio_' + number);\n    var icon = document.getElementById(\"play\" + number);\n    if (audio.paused) {\n      audio.play();\n      icon.classList.remove(\"fa-play-circle\");\n      icon.classList.add(\"fa-stop-circle\");\n      this.CheckAudioFinishedPlay(audio, icon);\n     \n    } else {\n      audio.pause();\n      audio.currentTime = 0\n      icon.classList.remove(\"fa-stop-circle\");\n      icon.classList.add(\"fa-play-circle\");\n    }\n  }\n\n  CheckAudioFinishedPlay(audio, icon){//debugger;\n    audio.onended = function() {\n      icon.classList.remove(\"fa-stop-circle\");\n      icon.classList.add(\"fa-play-circle\");\n     };\n  }\n\n  statuschange(e) {\n    this.setState({ key: e.target.value });\n  }\n\n  filterdata(e) {\n\n    let alldata = this.state.AgentData\n    let that = this;\n    if (this.state.key === \"ALL\") {\n      return alldata;\n    }\n    if (this.state.key === \"Away\") {\n      let AgentData = [];\n      alldata.forEach(element => {\n        var diff = (new Date() - new Date(element.LastUpdatedOn)) / 1000;\n        if (diff > 60 && element.Status === \"IDLE\") {\n          AgentData.push(element);\n        }\n      });\n      return AgentData;\n    }\n\n    let AgentData = [];\n    alldata.forEach(element => {\n      if (this.state.key.indexOf(element.Status) > -1) {\n        AgentData.push(element);\n      }\n    });\n    return AgentData;\n  }\n  _handleKeyDown(e) {\n\n    if (e.key === 'Enter') {\n      this.setState({ SelectedSupervisors: [e.target.value] });\n    }\n  }\n\n  _handleOnClick(e) {\n\n\n    this.setState({ SelectedSupervisors: [document.getElementById(\"EmpId\").value] });\n\n  }\n\n  renderTotalData() {\n\n\n    let tr = [];\n    let QueueData = this.state.QueueData;\n    //console.log('..............................',QueueData);\n    if (QueueData && QueueData.length > 0) {\n\n      QueueData.forEach(element => {\n        tr.push(<tr className={this.state.contextName == element.context ? \"active\" : \"\"}>\n          <td>{<a onClick={(e) => this.changeContext(e, element)} data-myattribute=\"check\" className=\"abutton clickMe\">{element.context}</a>}</td>\n          {/* <td>{element.answered}</td> */}\n          <td>{<a onClick={(e) => this.clickanswered(e, element)} className=\"abutton\">{element.answered}</a>}</td>\n          <td>{<a onClick={(e) => this.clickUnanswered(e, element)} className=\"abutton\">{element.unanswered}</a>}</td>\n          <td className={element.waitingibcalls > 0 ? \"waiting_call_gt0\" : \"\"}>{element.waitingibcalls}</td>\n          <td className={element.waitingctccalls > 0 ? \"waiting_call_gt0\" : \"\"}>{element.waitingctccalls}</td>\n          <td className={element.waitingassignedcalls > 0 ? \"waiting_call_gt0\" : \"\"}>{element.waitingassignedcalls}</td>\n          <td>{element.totalcalls}</td>\n        </tr>)\n      });\n      return <Table responsive>\n        <thead className=\"text-primary\">\n          <tr>\n            <th>context</th>\n            <th>answered</th>\n            <th>unanswered</th>\n            <th>waitingibcalls</th>\n            <th>waitingctccalls</th>\n            <th>waitingassignedcalls</th>\n            <th>totalcalls</th>\n          </tr>\n        </thead>\n        <tbody>\n          {tr}\n        </tbody>\n      </Table>\n    }\n    else {\n      return null;\n    }\n  }\n\n\n  render() {\n    const columns = this.columnlist;\n\n    const unansweredcolumns = this.unansweredlist;\n    const moreinfocolumns = this.moreinfolist;\n\n    const totalcolumns = this.totalcolumnlist;\n    const data = this.filterdata();\n    const managerid = getUrlParameter(\"m\");\n    const context = getUrlParameter(\"c\");\n\n    const { PageTitle, UnansweredData, MoreInfoData } = this.state;\n\n    return (\n      <>\n        <div className=\"content\">\n          <ToastContainer />\n          <Row>\n            <Col md=\"12\">\n              <Card>\n                <CardHeader>\n                  <Row>\n                    <Col md={3}>\n                      <CardTitle tag=\"h4\">Queues</CardTitle>\n                    </Col>\n                    <Col md={9}>\n\n                    </Col>\n                  </Row>\n\n                </CardHeader>\n\n                <CardBody>\n                  <div className=\"queuetable\">\n                    {this.renderTotalData()}\n                  </div>\n                </CardBody>\n\n              </Card>\n\n\n\n\n            </Col>\n\n          </Row>\n          <Row>\n            <Col md=\"12\">\n              <Card>\n                <CardHeader>\n\n                  <Row>\n                    <Col md={3}>\n                      <CardTitle tag=\"h4\">{PageTitle}</CardTitle>\n                    </Col>\n                    <Col md={4}>\n                      <div>\n                      Queue Name : {this.state.contextName}\n                      </div>\n                    </Col>\n                    \n                    <Col md={3}>\n                      <div className=\"input-group hide\">\n\n                        <Form.Control required type=\"text\" name=\"EmpId\" id=\"EmpId\" onKeyDown={this._handleKeyDown} onChange={(e) => this.setState({ username: e.target.value })} value={this.state.username} placeholder={\"Enter Supervisor Id\"} />\n                        <div className=\"input-group-append\">\n                          <button onClick={(e) => this._handleOnClick(e)} className=\"btn btn-primary input-group-button\"><i className=\"fa fa-search\" aria-hidden=\"true\"></i></button>\n\n                        </div>\n                      </div>\n                    </Col>\n                    <Col md={2}>\n                      <div className=\"form-group \">\n                        <select className=\"form-control\" onChange={this.statuschange}>\n                          <option value=\"ALL\">ALL</option>\n                          <option value=\"IDLE\">IDLE</option>\n                          <option value=\"Away\">Away</option>\n                          <option value=\"BUSY\">BUSY</option>\n                          <option value=\"Lunch,Tea,Training,Meeting,Day End\">Break</option>\n                          <option value=\"PAUSE\">PAUSE</option>\n                          <option value=\"Auto Logout,LOGOUT\">LOGOUT</option>\n                        </select>\n                      </div>\n                      {\n                        (managerid == '' && context == ' ') ? <ManagerHierarchy handleShow={this.handleShow} value={/EmployeeId/g} ></ManagerHierarchy> : null\n                      }\n                      <button id=\"BargeWith\" onClick={(e) => this.unbargecall(e)} className={this.state.BargeWith == \"\" ? \"hide\" : \"btn btn-primary hangupwith show\"} ><i className=\"fa fa-volume-off\" aria-hidden=\"true\"></i> Hang Up With: {this.state.BargeWith}</button>\n                    </Col>\n\n                  </Row>\n\n                </CardHeader>\n\n                <CardBody>\n                  {/* {this.renderTotalData()} */}\n\n                  <div className=\"statusdata\">\n                    <DataTable\n                      columns={columns}\n                      data={data}\n                      pagination={false}\n                      striped={true}\n                      noHeader={true}\n                      highlightOnHover\n                      dense\n\n                    />\n\n                  </div>\n                </CardBody>\n\n              </Card>\n            </Col>\n            <audio id=\"audioRemote\"></audio>\n            <audio id=\"audioLocal\"></audio>\n\n          </Row>\n          <audio src=\"\" id={\"audio1\"}></audio>\n          <audio src=\"\" id={\"audio2\"}></audio>\n\n          <Modal show={this.state.showModal} onHide={() => this.setState({ showModal: false })} dialogClassName=\"modal-70w\">\n            <Modal.Header closeButton>\n              <Modal.Title>{this.state.ModalTitle}</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n              <div className=\"modaldata\">\n                <DataTable\n                  columns={unansweredcolumns}\n                  data={(UnansweredData && UnansweredData.length > 0) ? UnansweredData : []}\n                  pagination={false}\n                  striped={true}\n                  noHeader={true}\n                  highlightOnHover\n                  dense\n                  pagination={true}\n                />\n              </div>\n            </Modal.Body>\n            <Modal.Footer>\n\n            </Modal.Footer>\n          </Modal>\n          <Modal show={this.state.showMoreInfoModal} onHide={() => this.setState({ showMoreInfoModal: false })} dialogClassName=\"modal-90w\">\n            <Modal.Header closeButton>\n              <Modal.Title></Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n              <div className=\"modalmoreinfodata\">\n                <DataTable\n                  columns={moreinfocolumns}\n                  data={(MoreInfoData && MoreInfoData.length > 0) ? MoreInfoData : []}\n                  pagination={false}\n                  striped={true}\n                  noHeader={true}\n                  highlightOnHover\n                  dense\n\n                />\n              </div>\n            </Modal.Body>\n            <Modal.Footer>\n\n            </Modal.Footer>\n          </Modal>\n        </div>\n      </>\n    );\n  }\n}\n\n\nfunction mapStateToProps(state) {\n  return {\n    CommonData: state.CommonData\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  {\n    GetCommonData,\n    GetCommonspData,\n    GetMySqlData\n  }\n)(RealTimePanelQueuewise);\n\n\n\n\n"],"sourceRoot":""}