{"version":3,"sources":["views/Common/AutoCompleteDropDown.jsx","views/CreateLead/LeadCommonFields.jsx","views/CreateLead/Index.jsx","views/Common/DropDown.jsx","views/Common/RadioOptions.jsx","views/Common/Loader.jsx"],"names":["AutoCompleteDropDown","props","onChange","event","newValue","setState","value","onSuggestionsFetchRequested","suggestions","getSuggestions","onSuggestionsClearRequested","inputValue","trim","toLowerCase","inputLength","length","data","filter","item","name","slice","getSuggestionValue","suggestion","target","state","renderSuggestion","this","inputProps","placeholder","class","autoComplete","theme","defaultTheme","React","Component","LeadCommonFields","fields","DateOfBirth","moment","subtract","format","showProspectFields","showBankFields","ProductId","Cities","CarMakeList","CarMakeModelList","SuppliersList","PlansList","getCities","getCarMakes","field","e","_isAMomentObject","getCarMakeModels","getPlansList","getSuppliersList","GetCommonspData","limit","skip","root","result","List","forEach","element","index","push","Id","MakeId","Display","MakeName","console","log","bind","makeId","params","ModelId","ModelName","SupplierID","SupplierName","supplierId","PlanID","Planname","citiesList","city","CityID","datestr","items","FormTitle","Row","className","Col","md","Form","Group","Label","Input","type","maxLength","handleChange","changed","isSelected","id","dateFormat","timeFormat","utc","required","disabled","Control","as","DropDownList","col","label","config","filterkey","filtervalue","DropDown","visible","firstoption","handleStatusChange","handlePaymentModeChange","connect","CommonData","GetCommonData","CreateLead","formvalue","checked","isLoading","store","activePage","PageTitle","errors","LeadSource","LeadSourceId","MandatoryFields","handleSave","handleValidation","selectedrow","nextProps","isError","InsertSuccessData","status","alert","error","UpdateSuccessData","ivrType","JSON","parse","stringify","RegisterCustomer","toast","customer","saveLeadDetails","CustomerId","customerId","dataToSend","setParameters","setTimeout","formIsValid","errorsList","test","Name","Gender","MobileNo","AltPhoneNo","EmailId","Address","City","StateID","Country","PostalCode","MaritalStatus","AnnualIncome","ProfessionID","UTMMedium","SA","Premium","PaymentSource","BranchName","Cheque","Supplier","PlanName","getuser","UserID","Filter","Status","SubStatus","OfferNo","GroupId","SmsId","PolicyTypeId","PolicyTypeName","ReferralID","TwoYrPremium","IsPreviousClaimsTaken","Bonus","OldPolicyNo","GracePeriod","PolicyExpiryDate","NoticePremium","RenewalYear","DOBofInsured01","DOBofInsured02","DOBofInsured03","DOBofInsured04","DOBofInsured05","ProductTypeID","Model","PropertyType","PropertyRisk","UTMSource","AssignLead","AssignToUser","IsUpdate","fnCleanData","columnlist","window","location","reload","map","err","selectedRowData","Card","CardHeader","CardTitle","tag","Button","variant","onClick","handleShow","CardBody","cols","con","Loader","handleReset","GetCommonMongoData","key","displayoption","i","text","htmlFor","ShowDetail"],"mappings":"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","file":"static/js/43.a91e242b.chunk.js","sourcesContent":["import React from 'react';\nimport Autosuggest from 'react-autosuggest';\nimport { defaultTheme } from 'react-autosuggest/dist/theme';\n\nclass AutoCompleteDropDown extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      value: '',\n      name: this.props.name,\n      suggestions: []\n    };\n  }\n\n  onChange = (event, { newValue }) => {\n    this.setState({\n      value: newValue\n    });\n  };\n\n  // Autosuggest will call this function every time you need to update suggestions.\n  // You already implemented this logic above, so just use it.\n  onSuggestionsFetchRequested = ({ value }) => {\n    this.setState({\n      suggestions: this.getSuggestions(value)\n    });\n  };\n\n  // Autosuggest will call this function every time you need to clear suggestions.\n  onSuggestionsClearRequested = () => {\n    this.setState({\n      suggestions: []\n    });\n  };\n\n    getSuggestions = value => {\n        const inputValue = value.trim().toLowerCase();\n        const inputLength = inputValue.length;\n        const data = this.props.data;\n        return inputLength === 0 ? [] : data.filter(item =>\n            item.name && item.name.toLowerCase().slice(0, inputLength) === inputValue\n        );\n    };\n\n    // When suggestion is clicked, Autosuggest needs to populate the input\n    // based on the clicked suggestion. Teach Autosuggest how to calculate the\n    // input value for every given suggestion.\n    getSuggestionValue = (suggestion, event) => { \n      this.props.onChange({target: { \"name\": this.state.name, \"value\": suggestion.value }}, this.state.name);\n      return suggestion.name;\n    }\n\n    // Use your imagination to render suggestions.\n    renderSuggestion = suggestion => (\n            <div>\n                {suggestion.name}\n            </div>\n        );\n\n  render() {\n    const { value, suggestions } = this.state;\n\n    // Autosuggest will pass through all these props to the input.\n    const inputProps = {\n      name: this.state.name,\n      placeholder: 'Enter ' + this.state.name,\n      class: 'form-control',\n      value,\n      autoComplete:\"none\",\n      onChange: this.onChange\n    };\n\n    // Finally, render it!\n    return (\n      <Autosuggest\n        suggestions={suggestions}\n        onSuggestionsFetchRequested={this.onSuggestionsFetchRequested}\n        onSuggestionsClearRequested={this.onSuggestionsClearRequested}\n        getSuggestionValue={this.getSuggestionValue}\n        renderSuggestion={this.renderSuggestion}\n        inputProps={inputProps}\n        theme={defaultTheme}\n      />\n    );\n  }\n}\n\nexport default AutoCompleteDropDown;","\nimport React from \"react\";\nimport { Button, Form } from 'react-bootstrap';\n\nimport { GetCommonData, GetCommonspData } from \"../../store/actions/CommonAction\";\n\nimport { connect } from \"react-redux\";\n\n//import { fnBindRootData, fnRenderfrmControl, fnCleanData, GetJsonToArray, getMax, joinObject, getuser } from '../../utility/utility.jsx';\n\nimport DropDownList from \"./../Common/DropDownList.jsx\"\nimport DropDown from \"./../Common/DropDown.jsx\"\nimport RadioButton from './../Common/RadioOptions';\nimport * as Datetime from 'react-datetime';\n\n//import moment from \"moment\";\nimport moment from \"moment\";\nimport AutoCompleteDropDown from './../Common/AutoCompleteDropDown.jsx';\n// reactstrap components\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Table,\n  Row,\n  Col,\n  //FormGroup,\n  Input,\n} from \"reactstrap\";\n\n\nclass LeadCommonFields extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      //isLoaded: false,\n      //showModal: false,\n      //store: [],\n      //activePage: 1,\n      //root: \"CreateLead\",\n      //PageTitle: \"Create Lead\",\n      //FormTitle: \"\",\n      //formvalue: {},\n      event: \"\",\n      //errors: {},\n      fields: {\n        DateOfBirth: moment().subtract(0, 'years').format(\"YYYY-MM-DD\")\n      },\n      //LeadSource: 3,\n      showProspectFields: false,\n      showBankFields: false,\n      ProductId: this.props.ProductId\n    };\n    this.Cities = [];\n    this.CarMakeList = [];\n    this.CarMakeModelList = [];\n    this.SuppliersList = [];\n    this.PlansList = [];\n  }\n\n  componentDidMount() {\n    this.getCities();\n    this.getCarMakes();\n  }\n\n  handleChange(field, e){\n    this.props.onChange(e, field);\n    let fields = this.state.fields;\n    if(e._isAMomentObject){\n      fields[field] = e.format(\"YYYY-MM-DD\");        \n    } else {\n      fields[field] = e.target.value;        \n    }\n    this.setState({fields});\n    if(field == 'Make') {\n      this.getCarMakeModels(e.target.value);\n    } else if(field == 'Supplier') {\n      this.getPlansList(e.target.value);\n    }\n  }\n  \n  handleStatusChange(field, e){\n    if(e.target.value == 11) { //Prospect\n      this.setState({ showProspectFields : true, showBankFields : false });\n      this.getSuppliersList();\n    } else {\n      this.setState({ showProspectFields : false, showBankFields : false });\n      this.SuppliersList = [];\n    }\n    this.props.onChange(e, field);\n  }\n\n  handlePaymentModeChange(field, e){\n    if(e.target.value == 3001 || e.target.value == 5001) {\n      this.setState({ showBankFields : true });\n    } else {\n      this.setState({ showBankFields : false });\n    }\n    this.props.onChange(e, field);\n  }\n\n  getCarMakes() {\n    this.props.GetCommonspData({\n      limit: 10,\n      skip: 0,\n      root: \"GetCarMakeList\",\n    }, function(result) {\n      let List = [];\n      if(result.data.data[0] && result.data.data[0].length > 0) {\n        result.data.data[0].forEach((element,index) => {\n          List.push({\n            Id: element.MakeId, Display: element.MakeName\n          })\n        });\n      }\n      console.log(List);\n      this.CarMakeList = List;\n    }.bind(this));\n  }\n\n  getCarMakeModels(makeId) {\n    if(makeId == \"\" || makeId == \"0\" || makeId == 0) {\n      this.CarMakeModelList = [];\n      return;\n    }\n    //let formvalue = JSON.parse(JSON.stringify(this.state.fields));\n    //console.log(formvalue['Make']);\n    this.props.GetCommonspData({\n      limit: 10,\n      skip: 0,\n      root: \"GetCarMakeModelList\",\n      params: [{\"MakeId\": makeId}]\n    }, function(result) {\n      let List = [];\n      if(result.data.data[0] && result.data.data[0].length > 0) {\n        result.data.data[0].forEach((element,index) => {\n          List.push({\n            Id: element.ModelId, Display: element.ModelName\n          })\n        });\n      }\n      this.CarMakeModelList = List;\n    }.bind(this));\n  }\n\n  getSuppliersList() {\n    this.props.GetCommonspData({\n      limit: 10,\n      skip: 0,\n      root: \"GetSuppliersPlansList\",\n      params: [{\"ProductId\": this.state.ProductId}]\n    }, function(result) {\n      let List = [];\n      if(result.data.data[0] && result.data.data[0].length > 0) {\n        result.data.data[0].forEach((element,index) => {\n          List.push({\n            Id: element.SupplierID, Display: element.SupplierName\n          })\n        });\n      }\n      console.log(List);\n      this.SuppliersList = List;\n    }.bind(this));\n  }\n\n  getPlansList(supplierId) {\n    if(supplierId == \"\" || supplierId == \"0\" || supplierId == 0) {\n      this.PlansList = [];\n      return;\n    }\n    this.props.GetCommonspData({\n      limit: 10,\n      skip: 0,\n      root: \"GetSuppliersPlansList\",\n      params: [{\"ProductId\": this.state.ProductId, \"SupplierId\": supplierId}]\n    }, function(result) {\n      let List = [];\n      if(result.data.data[0] && result.data.data[0].length > 0) {\n        result.data.data[0].forEach((element,index) => {\n          List.push({\n            Id: element.PlanID, Display: element.Planname\n          })\n        });\n      }\n      this.PlansList = List;\n    }.bind(this));\n  }\n\n  getCities() {\n    this.props.GetCommonspData({\n      limit: 10,\n      skip: 0,\n      root: \"GetStateCitiesList\",\n    }, function(result) {\n      let citiesList = [];\n      if(result.data.data[0] && result.data.data[0].length > 0) {\n        delete result.data.data[0][0];\n        result.data.data[0].forEach((element,index) => {\n          citiesList.push({\n            name: element.city,\n            value: element.CityID\n          })\n        });\n      }\n      this.Cities = citiesList;\n    }.bind(this));\n  }\n  \n  render() {\n    const { showBankFields, showProspectFields, items, FormTitle, event } = this.state;\n    /*if (datestr === \"\") {\n      const datestr = new Date();\n    } else {\n      const datestr = new Date(datestr);\n    }*/\n    //console.log(this.state.fields['DateOfBirth']);\n    const datestr = this.state.fields['DateOfBirth'] ? moment(this.state.fields['DateOfBirth']).format(\"YYYY-MM-DD\")  : moment().subtract(0, 'years').format(\"YYYY-MM-DD\");\n    \n    return (\n          <Row className=\"CreateLeadContainer\">\n            <Col md={4}>\n              <Form.Group>\n                <Form.Label>Name <span>*</span></Form.Label>\n                <Input \n                  placeholder=\"Enter Name\" \n                  type=\"text\" \n                  name=\"Name\" \n                  maxLength={30} \n                  onChange={this.handleChange.bind(this, \"Name\")}\n                />\n              </Form.Group>\n            </Col>\n            <Col md={4}>\n              <Form.Group>\n                <Form.Label>Email Id <span>*</span></Form.Label>\n                <Input placeholder=\"Enter Email Id\" type=\"text\" name=\"EmailId\" maxLength={50} onChange={this.handleChange.bind(this, \"EmailId\")} />\n              </Form.Group>\n            </Col>\n            <Col md={4}>\n              <Form.Group className=\"GenderContainer\">\n                <Form.Label>Gender? <span>*</span></Form.Label>\n                <RadioButton \n                  name= \"Gender\"\n                  changed={this.handleChange.bind(this, \"Gender\")}\n                  items = {[[\"Male\", \"1\"], [\"Female\", \"0\"]]}\n                  isSelected={ this.state.fields['Gender'] || \"1\" } \n                />\n              </Form.Group>\n            </Col>\n            <Col md={4}>\n              <Form.Group>\n                <Form.Label>Date Of Birth <span>*</span></Form.Label>\n                <Datetime \n                  //value={datestr}\n                  id=\"DateOfBirth\" \n                  name=\"DateOfBirth\" \n                  dateFormat=\"YYYY-MM-DD\"\n                  timeFormat={false}\n                  onChange={moment => this.handleChange(\"DateOfBirth\", moment)}\n                  utc={true}\n                  inputProps={{\n                      id: \"DateOfBirth\",\n                      name: \"DateOfBirth\",\n                      required: true,\n                      disabled: \"\",\n                      value: datestr\n                    }\n                  } \n                />\n              </Form.Group>\n            </Col>\n            <Col md={4}>\n              <Form.Group>\n                <Form.Label>Address</Form.Label>\n                <Form.Control \n                  disabled={false}\n                  name=\"Address\" \n                  type=\"text\" \n                  as=\"textarea\" \n                  placeholder={\"Enter Address\"} \n                  onChange={this.handleChange.bind(this, \"Address\")}\n                />\n              </Form.Group>\n            </Col>\n            <Col md={4}>\n              <Form.Group>\n                <Form.Label>City <span>*</span></Form.Label>\n                <AutoCompleteDropDown name={\"City\"} data={this.Cities} onChange={this.handleChange.bind(this, \"City\")} />\n              </Form.Group>\n            </Col>\n            <Col md={4}>\n              <Form.Group>\n                <Form.Label>Mobile No. <span>*</span></Form.Label>\n                <Input placeholder=\"Enter Mobile\" type=\"text\" name=\"MobileNo\" maxLength={10} onChange={this.handleChange.bind(this, \"MobileNo\")} />\n              </Form.Group>\n            </Col>\n            <Col md={4}>\n              <Form.Group>\n                <Form.Label>UTM Medium</Form.Label>\n                <Input placeholder=\"Enter UTM Medium\" type=\"text\" name=\"UtmMedium\" maxLength={30} onChange={this.handleChange.bind(this, \"UtmMedium\")} />\n              </Form.Group>\n            </Col>\n            <Col md={4}>\n              <Form.Group>\n                <Form.Label>Postal Code</Form.Label>\n                <Input placeholder=\"Enter PostalCode\" type=\"text\" name=\"PostalCode\" maxLength={6} onChange={this.handleChange.bind(this, \"PostalCode\")} />\n              </Form.Group>\n            </Col>\n            <Col md={4}>\n              <Form.Group>\n                <Form.Label>Annual Income</Form.Label>\n                <DropDownList\n                  col={{ \n                    name: \"AnnualIncome\", \n                    label: \"Annual Income\",\n                    type: \"dropdown\",\n                    config: {\n                      root: \"AnnualIncome\",\n                      data: [\n                        { Id: \"299999\", Display: \"upto 3 lakhs\" }, \n                        { Id: \"499999\", Display: \"3 - 5 lakhs\" },\n                        { Id: \"699999\", Display: \"5 - 7 lakhs\" },\n                        { Id: \"899999\", Display: \"7 - 10 lakhs\" },\n                        { Id: \"1000000\", Display: \"10 - 15 lakhs\" },\n                        { Id: \"1500000\", Display: \"15 lakhs +\" },\n                      ],\n                    }\n                  }}\n                  filterkey={null}\n                  filtervalue={null}\n                  onChange={this.handleChange.bind(this, \"AnnualIncome\")}\n                  required= {true} \n                />\n\n              </Form.Group>\n            </Col>\n            <Col md={4}>\n              <Form.Group>\n                <Form.Label>Make</Form.Label>\n                <DropDown\n                  disabled={false}\n                  visible={true} \n                  items= {this.CarMakeList}\n                  name= \"Make\"\n                  firstoption=\"Select Make\"\n                  onChange={this.handleChange.bind(this, \"Make\")}\n                />\n\n              </Form.Group>\n            </Col>\n            <Col md={4}>\n              <Form.Group>\n                <Form.Label>Model</Form.Label>\n                <DropDown\n                  disabled={false}\n                  visible={true} \n                  items= {this.CarMakeModelList}\n                  name= \"Model\"\n                  firstoption=\"Select Model\"\n                  onChange={this.handleChange.bind(this, \"Model\")}\n                />\n\n              </Form.Group>\n            </Col>\n            <Col md={4}>\n              <Form.Group>\n                <Form.Label>Status <span>*</span></Form.Label>\n                <DropDownList\n                  firstoption=\"Select Status\"\n                  col={{ \n                    name: \"Status\", \n                    label: \"Status\",\n                    type: \"dropdown\",\n                    config: {\n                      root: \"Status\",\n                      data: [\n                        { Id: 2, Display: \"Valid\" }, \n                        { Id: 3, Display: \"Contacted\" },\n                        { Id: 4, Display: \"Interested\" },\n                        { Id: 11, Display: \"Prospect\" },\n                      ],\n                    }\n                  }}\n                  filterkey={null}\n                  filtervalue={null}\n                  onChange={this.handleStatusChange.bind(this, \"Status\")}\n                  required= {true} \n                />\n\n              </Form.Group>\n            </Col>\n            {showProspectFields && (\n            <>\n            <Col md={4}>\n              <Form.Group>\n                <Form.Label>Supplier <span>*</span></Form.Label>\n                <DropDown\n                  firstoption=\"Select Supplier\"\n                  name= \"Supplier\" \n                  items={this.SuppliersList}\n                  filterkey={null}\n                  filtervalue={null}\n                  onChange={this.handleChange.bind(this, \"Supplier\")}\n                  required= {true} \n                />\n\n              </Form.Group>\n            </Col>\n            <Col md={4}>\n              <Form.Group>\n                <Form.Label>Plan Name <span>*</span></Form.Label>\n                <DropDown\n                  firstoption=\"Select Supplier\"\n                  name= \"PlanName\" \n                  items={this.PlansList}\n                  filterkey={null}\n                  filtervalue={null}\n                  onChange={this.handleChange.bind(this, \"PlanName\")}\n                  required= {true} \n                />\n\n              </Form.Group>\n            </Col>\n            <Col md={4}>\n              <Form.Group>\n                <Form.Label>Premium</Form.Label>\n                <Input placeholder=\"Enter Premium\" type=\"text\" name=\"Premium\" onChange={this.handleChange.bind(this, \"Premium\")} />\n              </Form.Group>\n            </Col>\n            <Col md={4}>\n              <Form.Group>\n                <Form.Label>SA/IDV</Form.Label>\n                <Input placeholder=\"\" type=\"text\" name=\"SaIdv\" />\n              </Form.Group>\n            </Col>\n            <Col md={4}>\n              <Form.Group>\n                <Form.Label>Mode Of Payment <span>*</span></Form.Label>\n                <DropDownList\n                  firstoption=\"Select Mode\"\n                  col={{ \n                    name: \"PaymentSource\", \n                    label: \"Payment Source\",\n                    type: \"dropdown\",\n                    config: {\n                      root: \"PaymentSource\",\n                      data: [\n                        { Id: \"300\", Display: \"Online Payment\" }, \n                        { Id: \"5001\", Display: \"Cheque\" },\n                        { Id: \"3001\", Display: \"Transfer\" },\n                      ],\n                    }\n                  }}\n                  filterkey={null}\n                  filtervalue={null}\n                  onChange={this.handlePaymentModeChange.bind(this, \"PaymentSource\")}\n                  required= {true} \n                />\n\n              </Form.Group>\n            </Col>\n            {showBankFields && (\n            <>\n            <Col md={4}>\n              <Form.Group>\n                <Form.Label>Bank Branch Name</Form.Label>\n                <Input placeholder=\"Enter Branch Name\" type=\"text\" name=\"BranchName\" onChange={this.handleChange.bind(this, \"BranchName\")} />\n              </Form.Group>\n            </Col>\n            <Col md={4}>\n              <Form.Group>\n                <Form.Label>Cheque No.</Form.Label>\n                <Input placeholder=\"Enter Cheque No.\" type=\"text\" name=\"Cheque\" onChange={this.handleChange.bind(this, \"Cheque\")} />\n              </Form.Group>\n            </Col></>\n            )}\n            </>\n            )}\n            <Col md={4}>\n              <Form.Group>\n                <Form.Label>Assign To User</Form.Label>\n                <AutoCompleteDropDown name={\"AssignToUser\"} data={this.Cities} onChange={this.handleChange.bind(this, \"AssignToUser\")} />\n              </Form.Group>\n            </Col>\n\n          </Row>\n    );\n  }\n}\n\n\nfunction mapStateToProps(state) {\n  return {\n    CommonData: state.CommonData\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  {\n    GetCommonData,\n    GetCommonspData,\n  }\n)(LeadCommonFields);","\nimport React from \"react\";\nimport { ButtonGroup, Button, Modal, Form } from 'react-bootstrap';\n\nimport { GetCommonData, GetCommonspData, RegisterCustomer } from \"../../store/actions/CommonAction\";\nimport { addRecord, GetCommonData as GetCommonMongoData } from \"../../store/actions/CommonMongoAction\";\n\nimport { connect } from \"react-redux\";\n// import { Link } from \"react-router-dom\";\nimport LeadCommonFields from './LeadCommonFields';\nimport { fnBindRootData, fnRenderfrmControl, fnCleanData, GetJsonToArray, getMax, joinObject, getuser } from '../../utility/utility.jsx';\nimport { ToastContainer, toast } from 'react-toastify';\nimport DropDownList from \"./../Common/DropDownList.jsx\"\nimport 'react-toastify/dist/ReactToastify.css';\nimport moment from \"moment\";\nimport './../customStyling.css';\nimport Loader from './../Common/Loader';\n\n// reactstrap components\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Table,\n  Row,\n  Col,\n  Input,\n} from \"reactstrap\";\n\n\nclass CreateLead extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoading: false,\n      items: [],\n      store: [],\n      activePage: 1,\n      root: \"CreateLead\",\n      PageTitle: \"Create Lead\",\n      FormTitle: \"\",\n      formvalue: {},\n      event: \"\",\n      errors: {},\n      fields: {},\n      LeadSource: 'Offline',\n      LeadSourceId: 35,\n      MandatoryFields: [\"LeadSource\", \"ProductId\", \"Name\", \"EmailId\", \"MobileNo\", \"Gender\", \"DateOfBirth\", \"Status\"]\n    };\n    this.handleSave = this.handleSave.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleValidation = this.handleValidation.bind(this);\n\n    this.selectedrow = {\n      \"LeadSourceId\": this.state.LeadSourceId, \n      \"LeadSource\": this.state.LeadSource, \n      \"ProductId\" : 117,\n      \"Gender\" : 1,\n    };\n\n    /*\n    this.columnlist = [\n      { \n        name: \"LeadSource\", \n        label: \"Lead Source\",\n        type: \"dropdown\",\n        config: {\n          root: \"LeadSource\",\n          data: [\n            { Id: \"3\", Display: \"Referral\" }, \n            { Id: \"6\", Display: \"Renewal\" },\n            { Id: \"18\", Display: \"NRI\" },\n            { Id: \"35\", Display: \"Offline\" },\n          ],\n        },\n        value: 3\n      },\n      { \n        name: \"ProductId\", \n        label: \"ProductId\",\n        type: \"dropdown\",\n        config: {\n          root: \"Products\",\n          cols: [\"ID AS Id\", \"ProductName AS Display\"],\n          con: [{ \"Isactive\": 1 }],\n          //order: \"1\",\n        },\n      },\n      { name: \"ReferralId\", label: \"Referral Id\", type: \"string\" },\n      //{ name: \"Name\", label: \"Name\", type: \"string\" },\n      //{ name: \"EmailId\", label: \"Email Id\", type: \"string\" },\n      //{ name: \"MobileNo\", label: \"Mobile No.\", type: \"string\" },\n      //{ name: \"Gender\", label: \"Gender\", type: \"string\" },\n      //{ name: \"DateOfBirth\", label: \"Date Of Birth\", type: \"datetime\", timeFormat: false },\n      //{ name: \"City\", label: \"City\", type: \"string\" },\n      //{ name: \"Address\", label: \"Address\", type: \"textarea\" },\n      //{ name: \"UtmMedium\", label: \"UTM Medium\", type: \"string\" },\n      //{ name: \"PostalCode\", label: \"Postal Code\", type: \"string\" },\n      //{ name: \"MaritalStatus\", label: \"Marital Status\", type: \"string\" },\n      //{ name: \"Profession\", label: \"Profession\", type: \"string\" },\n      //{ name: \"AnnualIncome\", label: \"Annual Income\", type: \"string\" },\n      //{ name: \"PolicyType\", label: \"Policy Type\", type: \"string\" },\n      //{ name: \"Status\", label: \"Status\", type: \"string\" },\n      //{ name: \"SubStatus\", label: \"Sub Status\", type: \"string\" },\n      //{ name: \"Groups\", label: \"Groups\", type: \"string\" },\n      //{ name: \"AssignToUser\", label: \"Assign To User\", type: \"string\" },\n      //{ name: \"Category\", label: \"Category\", type: \"string\" },\n      //{ name: \"CarModel\", label: \"Car Make\", type: \"string\" },\n      //{ name: \"CarModel\", label: \"Car Model\", type: \"string\" },\n      //{ name: \"TwoYearPremium\", label: \"Two Year Premium\", type: \"string\" },\n      //{ name: \"NoticePremium\", label: \"Notice Premium\", type: \"string\" },\n      //{ name: \"RenewalYear\", label: \"Renewal Year\", type: \"string\" },\n      //{ name: \"DobInsured1\", label: \"DOB of Insured 1\", type: \"string\" },\n      //{ name: \"DobInsured2\", label: \"DOB of Insured 2\", type: \"string\" },\n      //{ name: \"DobInsured3\", label: \"DOB of Insured 3\", type: \"string\" },\n      //{ name: \"DobInsured4\", label: \"DOB of Insured 4\", type: \"string\" },\n      //{ name: \"DobInsured5\", label: \"DOB of Insured 5\", type: \"string\" },\n      //{ name: \"Claims Taken\", label: \"Claims Taken\", type: \"string\" },\n      //{ name: \"Bonus\", label: \"Bonus\", type: \"string\" },\n      //{ name: \"PolicyExpiryDate\", label: \"Policy Expiry Date\", type: \"string\" },\n      //{ name: \"OldPolicyNo\", label: \"Old Policy No.\", type: \"string\" },\n      //{ name: \"GracePeriod\", label: \"Grace Period\", type: \"string\" },\n    ]; \n    */\n    let count = 0;\n  }\n  \n  \n  componentDidMount() {\n    this.setState({\n      formvalue: this.selectedrow\n    });    \n  }\n  fnBindStore(col,nextProps){\n    /*if(col.type == \"dropdown\"){\n      let items;\n      \n      if(nextProps.CommonData[this.state.root] && nextProps.CommonData[col.config.root]){\n        \n        items = joinObject(nextProps.CommonData[this.state.root],nextProps.CommonData[col.config.root],col.name)\n        this.setState({ items: items });\n      }\n    }*/\n  }\n  componentWillReceiveProps(nextProps) {\n    \n\n    if (!nextProps.CommonData.isError) {\n      //this.setState({ items: nextProps.CommonData[this.state.root] });\n      //this.setState({ store: nextProps.CommonData });\n      \n      //setTimeout(function(){\n        /*this.columnlist.map(col => (\n          this.fnBindStore(col,nextProps)\n        ));*/\n      //}.bind(this),2000);\n      \n    }\n\n    if (nextProps.CommonData && nextProps.CommonData.InsertSuccessData && nextProps.CommonData.InsertSuccessData.status) {\n      if (nextProps.CommonData.InsertSuccessData.status != 200)\n        alert(nextProps.CommonData.InsertSuccessData.error);\n      else {\n        //this.setState({ showModal: false });\n      }\n    }\n\n    if (nextProps.CommonData && nextProps.CommonData.UpdateSuccessData && nextProps.CommonData.UpdateSuccessData.status) {\n      if (nextProps.CommonData.UpdateSuccessData.status != 200)\n        alert(nextProps.CommonData.UpdateSuccessData.error);\n      else {\n        //this.setState({ showModal: false });\n      }\n    }\n    \n  }\n  \n  leadSourcechange(e, props) {\n    this.setState({\n          ivrType: e.target.value\n        }, function () {\n          //this.fetchProductData();\n        });\n      }\n      \n  handleSave() {\n    this.setState({ isLoading: true });\n    let formvalue = JSON.parse(JSON.stringify(this.state.formvalue));\n    console.log(formvalue);\n    if(this.handleValidation(formvalue)){\n      //formvalue[\"CreatedOn\"] = new Date();\n      //this.fnCleanData(formvalue, false);\n      RegisterCustomer(formvalue, function (data) {\n        if(data.status === 200) {\n          toast(\"Customer registered successfully!\", { type: 'success' });\n          let customer = data.data.customer;\n          this.saveLeadDetails(customer.CustomerId);\n        } else {\n          toast.error(\"Customer could not be registered\"); \n          this.setState({ isLoading: false });\n        }\n      }.bind(this));\n       \n    } else {\n      this.setState({ isLoading: false });\n    }\n  }\n      \n  saveLeadDetails(customerId) {\n    let formvalue = JSON.parse(JSON.stringify(this.state.formvalue));\n    formvalue[\"CustomerId\"] = customerId;\n    console.log(formvalue);\n    let dataToSend = this.setParameters(formvalue);\n    //this.fnCleanData(formvalue, false);\n    this.props.GetCommonspData({\n      root: \"CreateLead\",\n      //body: dataToSend\n      params: [dataToSend],\n    }, function (data) {\n      if(data.data.status === 200) {\n        toast(\"Lead created successfully!\", { type: 'success' });\n        setTimeout(function () {\n          //window.location.reload();\n        }, 2000);\n      } else {\n        toast.error(\"Lead could not be created\"); \n      }\n      this.setState({ isLoading: false });\n    }.bind(this));\n  }\n\n  handleValidation(formvalue){\n      let formIsValid = true;\n      //let ErrorMsg = \"\";\n      let errorsList = {};\n      \n      this.state.MandatoryFields.forEach((element) => {\n        if(!formvalue[element]){\n          formIsValid = false;\n          errorsList[element] = `This ${element} is required`;\n          //ErrorMsg +=  `This ${element} is required \\n`;\n          toast.error(`This ${element} is required`); \n        } \n        else if ( element == 'EmailId' && (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(formvalue[element])) ) \n        {\n          formIsValid = false;\n          errorsList[element] = `Invalid email address`;\n          toast.error(`Invalid email address`); \n        }\n\n      });\n\n      /*\n      console.log(errorsList);\n      this.setState({\n        errors: errorsList\n      });\n        \n      if(!formIsValid) {\n        toast.error(ErrorMsg); \n      }\n      this.renderErrorMessages();\n      */\n      return formIsValid;\n  }\n\n  setParameters(params) {\n    return {\n      \"Name\" : params.Name || null,\n      \"CustId\" : params.CustomerId || null,\n      \"Gender\" : params.Gender || null,\n      \"DOB\" : params.DateOfBirth || null,\n      \"MobileNo\" : params.MobileNo || null,\n      \"AltPhoneNo\" : params.AltPhoneNo || null,\n      \"EmailId\" : params.EmailId || null,\n      \"Address\" : params.Address || null,\n      \"CityID\" : params.City || null,\n      \"StateID\" : params.StateID || \"2\",\n      \"Country\" : params.Country || \"392\",\n      \"PostCode\" : params.PostalCode || null,\n      \"MaritalStatus\" : params.MaritalStatus || null,\n      \"AnnualIncome\" : params.AnnualIncome || null,\n      \"ProfessionID\" : params.ProfessionID || null,\n      \"LeadSource\" : params.LeadSource || null,\n      \"UTMMedium\" : params.UTMMedium || null,\n      \"ProductId\" : params.ProductId || null,\n      \"SA\" : params.SA || null,\n      \"Premium\" : params.Premium || null,\n      \"Paymode\" : params.PaymentSource || null,\n      \"Bank\" : params.BranchName || null,\n      \"Cheque\" : params.Cheque || null,\n      \"Insurer\" : params.Supplier || null,\n      \"Plan\" : params.PlanName || null,\n      \"UserID\" : getuser().UserID,\n      \"Filter\" : params.Filter || null,\n      \"StatusID\" : params.Status || null,\n      \"SubStatusID\" : params.SubStatus || null,\n      \"OfferNo\" : params.OfferNo || null,\n      \"GroupId\" : params.GroupId || null,\n      \"SmsId\" : params.SmsId || null,\n      \"PolicyTypeId\" : params.PolicyTypeId || null,\n      \"PolicyTypeName\" : params.PolicyTypeName || null,\n      \"ReferralID\" : params.ReferralID || null,\n      \"TwoYrPremium\" : params.TwoYrPremium || null,\n      \"IsPreviousClaimsTaken\" : params.IsPreviousClaimsTaken || null,\n      \"Bonus\" : params.Bonus || null,\n      \"OldPolicyNo\" : params.OldPolicyNo || null,\n      \"GracePeriod\" : params.GracePeriod || null,\n      \"PolicyExpiryDate\" : params.PolicyExpiryDate || null,\n      \"NoticePremium\" : params.NoticePremium || null,\n      \"RenewalYear\" : params.RenewalYear || null,\n      \"DOBofInsured01\" : params.DOBofInsured01 || null,\n      \"DOBofInsured02\" : params.DOBofInsured02 || null,\n      \"DOBofInsured03\" : params.DOBofInsured03 || null,\n      \"DOBofInsured04\" : params.DOBofInsured04 || null,\n      \"DOBofInsured05\" : params.DOBofInsured05 || null,\n      \"ProductTypeID\" : params.ProductTypeID || null,\n      \"VehicleModelID\" : params.Model || null,\n      \"PropertyType\" : params.PropertyType || null,\n      \"PropertyRisk\" : params.PropertyRisk || null,\n      \"UTMSource\" : params.UTMSource || null,\n      \"PlanId\" : params.PlanName || null,\n      \"AssignLead\" : params.AssignLead || null,\n      \"AssignToUserId\" : params.AssignToUser || null,\n    };\n  }\n\n  handleChange = (e,props) => {\n    let formvalue = this.state.formvalue;\n    \n    if (e.target && e.target.type == \"checkbox\") {\n      formvalue[e.target.id] = e.target.checked;\n    } else if(e._isAMomentObject){\n      formvalue[props] = e.format(\"YYYY-MM-DD\");\n    } else {\n      formvalue[e.target.name] = e.target.value;\n    }\n    this.setState({ formvalue: formvalue });\n    console.log(this.state.formvalue);\n  }\n\n  fnCleanData(formvalue, IsUpdate) {\n    formvalue = fnCleanData(this.columnlist, formvalue, IsUpdate);\n    this.setState({ formvalue: formvalue });\n  }\n\n  handleReset() {\n    //let formvalue = JSON.parse(JSON.stringify(this.state.formvalue));\n    //this.fnCleanData(formvalue, true);\n    //this.componentDidMount();\n    window.location.reload();\n  }\n\n  renderErrorMessages() {\n    return (\n      <>\n        <div className=\"errorsContainer\">\n          {\n          this.state.errors.map((err) =>\n            <p>this is testing</p>\n          )}\n        </div>\n      </>\n    );\n  }\n\n  render() {\n    const selectedRowData = this.selectedrow;\n    const { isLoading, PageTitle, FormTitle, formvalue,event, errors } = this.state;\n\n    return (\n      <>\n        <div className=\"CreateLeadContainer\">\n          <ToastContainer />\n          <Row>\n            <Col md=\"12\">\n              <Card>\n                <CardHeader>\n                  <Row>\n                    <Col md={11}>\n\n                      <CardTitle tag=\"h4\">{PageTitle}</CardTitle>\n                    </Col>\n                    <Col md={1} className=\"hide\">\n                      <Button variant=\"primary\" onClick={this.handleShow}>ADD</Button>\n                    </Col>\n                  </Row>\n                </CardHeader>\n                <CardBody>\n                  <Form>\n                    <Row>\n                      <Col md={4}>\n                        <Form.Group>\n                          <Form.Label>Lead Source <span>*</span></Form.Label>\n                          <DropDownList\n                            disabled={true}\n                            visible={true} \n                            col={{ \n                              name: \"LeadSource\", \n                              label: \"Lead Source\",\n                              type: \"dropdown\",\n                              config: {\n                                root: \"LeadSource\",\n                                data: [\n                                  { Id: 3, Display: \"Referral\" }, \n                                  { Id: 6, Display: \"Renewal\" },\n                                  { Id: 18, Display: \"NRI\" },\n                                  { Id: 35, Display: \"Offline\" },\n                                ],\n                              }\n                            }}\n                            value={selectedRowData.LeadSourceId}\n                            filterkey={null}\n                            filtervalue={null}\n                            onChange={(e) => this.handleChange()}\n                            required= {true} \n                          />\n                        </Form.Group>\n                      </Col>\n                      <Col md={4}>\n                        <Form.Group>\n                          <Form.Label>Product Id <span>*</span></Form.Label>\n                          <DropDownList\n                            disabled={true}\n                            visible={true} \n                            col={{ \n                              name: \"ProductId\", \n                              label: \"ProductId\",\n                              type: \"dropdown\",\n                              config: {\n                                root: \"Products\",\n                                cols: [\"ID AS Id\", \"ProductName AS Display\"],\n                                con: [{ \"Isactive\": 1 }],\n                              },\n                              //value: {selectedRowData.ProductId}\n                            }}\n                            value={selectedRowData.ProductId}\n                            filterkey={null}\n                            filtervalue={null}\n                            onChange={(e) => this.handleChange()}\n                            required= {true} \n                          />\n                        </Form.Group>\n                      </Col>\n\n                    </Row>\n\n                    <LeadCommonFields onChange={this.handleChange} ProductId={selectedRowData.ProductId} />\n\n                    <Row>\n                      <Col md={4}>\n                        <Form.Group>\n                          <Form.Label>Additional Details</Form.Label>\n                          <Form.Control \n                            disabled={false}\n                            type=\"text\" \n                            onChange={(e) => this.handleChange()} \n                            as=\"textarea\" \n                            placeholder={\"\"} \n                            value=\"\" \n                          />\n                        </Form.Group>\n                      </Col>\n                      <Col md={4}>\n                        <Form.Group>\n                          <Form.Label>UTM Source</Form.Label>\n                          <Input value=\"DIGITAL WEBSITE\" type=\"text\" name=\"UtmSource\" disabled={true} />\n                        </Form.Group>\n                      </Col>\n\n                    </Row>\n                    <Row>\n                      <Col md={1}>\n                        <Button variant=\"primary\" onClick={this.handleSave}>\n                          Add Lead\n                        </Button>\n\n                        {isLoading && \n                          <Loader />\n                        }\n                      </Col>\n                        \n                      <Col md={1}>\n                        <Button variant=\"primary\" onClick={(e) => this.handleReset()}>\n                          Reset\n                        </Button>\n                      </Col>\n                    </Row>\n                  </Form>\n                </CardBody>\n              </Card>\n            </Col>\n          </Row>\n\n        </div>\n      </>\n    );\n  }\n}\n\n\nfunction mapStateToProps(state) {\n  return {\n    CommonData: state.CommonData\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  {\n    GetCommonData,\n    GetCommonspData,\n    GetCommonMongoData\n  }\n)(CreateLead);","\nimport React from \"react\";\nimport { Form } from 'react-bootstrap';\nimport { connect } from \"react-redux\";\n// reactstrap components\n\nimport {\n    GetCommonData\n} from \"../../store/actions/CommonAction\";\nclass DropDown extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            items: [],\n        }\n    }\n    componentDidMount() {\n    }\n    componentWillReceiveProps(nextProps) {\n        this.setState({ items: nextProps.items });\n\n    }\n\n    displayoption(item) {\n        return <option key={item.Id} value={item.Id}>{item.Display}</option>\n    }\n\n    render() {\n\n\n        let { name, value, onChange, visible, items } = this.props;\n        if (!items) {\n            items = [];\n        }\n        if (visible == false) {\n            return null;\n        }\n        return (\n\n            <div>\n\n                <Form.Control as=\"select\" disabled={this.props.disabled} value={value} name={name} onChange={onChange}>\n                    {(this.props.firstoption !== false) && (\n                        <option key={0} value={0}>{this.props.firstoption ? this.props.firstoption : \"Select\"}</option>\n                    )}\n                    {items.map(item => (\n                        this.displayoption(item)\n                    ))}\n\n                </Form.Control>\n            </div>\n\n        );\n    }\n}\n\n\nexport default DropDown;\n\n","\r\nimport React from \"react\";\r\nimport { Form } from 'react-bootstrap';\r\nimport { connect } from \"react-redux\";\r\n// reactstrap components\r\n\r\nimport {\r\n    GetCommonData\r\n} from \"../../store/actions/CommonAction\";\r\nclass DropDown extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            items: [],\r\n        }\r\n    }\r\n    componentDidMount() {\r\n    }\r\n    componentWillReceiveProps(nextProps) {\r\n        this.setState({ items: nextProps.items });\r\n\r\n    }\r\n\r\n    displayoption(item) {\r\n        return <option key={item.Id} value={item.Id}>{item.Display}</option>\r\n    }\r\n\r\n    render() {\r\n\r\n\r\n        let { value, onChange, visible, items } = this.props;\r\n        if (!items) {\r\n            items = [];\r\n        }\r\n        if (visible == false) {\r\n            return null;\r\n        }\r\n        return (\r\n\r\n            <div className=\"RadioButton\">\r\n                {\r\n                items.map(([text, value], i) => (\r\n                <div key={value+\"_\"+i }>\r\n                <input id={value+\"_\"+i} name={this.props.name} onChange={this.props.changed} value={value} type=\"radio\" checked={this.props.value ? this.props.value === value : this.props.isSelected === value} />\r\n                <label htmlFor={value+\"_\"+i}>{text}</label>\r\n                </div>\r\n                ))\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default DropDown;\r\n\r\n","import React from 'react';\r\n\r\nfunction ShowDetail() {\r\n  return (\r\n      <i className=\"fa fa-spinner fa-spin\" />\r\n  );\r\n}\r\n\r\nexport default ShowDetail;"],"sourceRoot":""}