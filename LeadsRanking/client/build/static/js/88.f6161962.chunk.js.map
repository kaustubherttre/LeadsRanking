{"version":3,"sources":["views/ManagePortPriStatus.jsx","store/actions/CommonMysqlAction.jsx"],"names":["ManagePortPriStatus","props","handleChange","e","formvalue","state","target","type","id","checked","_isAMomentObject","format","value","setState","isLoaded","showModal","items","store","activePage","root","PageTitle","FormTitle","event","errors","fields","handleClose","bind","handleShow","handleSave","handleValidation","selectedrow","moment","columnlist","name","label","hide","searchable","required","this","map","col","fnBindRootData","GetMySqlData","order","con","result","nextProps","CommonData","config","joinObject","isError","fnBindStore","InsertSuccessData","status","alert","error","UpdateSuccessData","columns","fnDatatableCol","unshift","width","cell","row","aria-label","variant","onClick","handleEdit","className","aria-hidden","window","confirm","handleDelete","od","Object","assign","UpdateData","body","querydata","data","toast","addRecord","module","action","nd","ts","Date","by","getuser","UserID","JSON","parse","stringify","fnCleanData","InsertData","formIsValid","IsUpdate","md","tag","show","onHide","dialogClassName","Header","closeButton","Title","Body","fnRenderfrmControl","Footer","React","Component","connect","GetCommonData","GetCommonData_fetched","Todos","dataToSend","statename","localStorage","setItem","constants","GET_COMMON_SUCCESS","payload","GetCommonData_fetch_error","GET_COMMON_FAIL","cb","undefined","dispatch","getState","getItem","axios","get","api","base_url","params","then","catch","post","INSERT_COMMON_SUCCESS","INSERT_COMMON_FAIL","InsertData_fetch_error","UPDATE_COMMON_SUCCESS","UPDATE_COMMON_FAIL","UpdateData_fetch_error","GetDataDirect"],"mappings":"uWA+BMA,E,kDACJ,WAAYC,GAAQ,IAAD,uBACjB,cAAMA,IAoRRC,aAAe,SAACC,EAAEF,GAChB,IAAIG,EAAY,EAAKC,MAAMD,UAEvBD,EAAEG,QAA2B,YAAjBH,EAAEG,OAAOC,KACvBH,EAAUD,EAAEG,OAAOE,IAAML,EAAEG,OAAOG,QAE5BN,EAAEO,iBACRN,EAAUH,GAASE,EAAEQ,SAGrBP,EAAUD,EAAEG,OAAOE,IAAML,EAAEG,OAAOM,MAGpC,EAAKC,SAAS,CAAET,UAAWA,KAhS3B,EAAKC,MAAQ,CACXS,UAAU,EACVC,WAAW,EACXC,MAAO,GACPC,MAAO,GACPC,WAAY,EACZC,KAAM,gBACNC,UAAW,kBACXC,UAAW,GACXjB,UAAW,GACXkB,MAAO,GACPC,OAAQ,GACRC,OAAQ,IAEV,EAAKC,YAAc,EAAKA,YAAYC,KAAjB,gBACnB,EAAKC,WAAa,EAAKA,WAAWD,KAAhB,gBAClB,EAAKE,WAAa,EAAKA,WAAWF,KAAhB,gBAClB,EAAKxB,aAAe,EAAKA,aAAawB,KAAlB,gBACpB,EAAKG,iBAAmB,EAAKA,iBAAiBH,KAAtB,gBACxB,EAAKI,YAAc,CACjB,GAAM,EACN,OAAW,GACX,YAAgB,GAChB,YAAgB,GAChB,WAAe,GACf,OAAW,EACX,MAAU,GACV,aAAiB,GACjB,KAASC,MAASpB,OAAO,cACzB,SAAa,GACb,SAAa,GACb,UAAc,GACd,eAAmB,GACnB,SAAa,GAGf,EAAKqB,WAAa,CAChB,CAAEC,KAAM,KAAMC,MAAO,KAAM3B,KAAM,SAAU4B,MAAM,GACjD,CACEF,KAAM,SACNC,MAAO,WACPE,YAAY,EACZC,UAAU,EACV9B,KAAM,UAGR,CAAE0B,KAAM,cAAeC,MAAO,gBAAiBE,YAAY,EAAO7B,KAAM,UACxE,CAAE0B,KAAM,cAAeC,MAAO,gBAAiBE,YAAY,EAAO7B,KAAM,UACxE,CAAE0B,KAAM,aAAcC,MAAO,cAAeE,YAAY,EAAO7B,KAAM,UACrE,CAAE0B,KAAM,SAAUC,MAAO,UAAWE,YAAY,EAAO7B,KAAM,UAC7D,CAAE0B,KAAM,QAASC,MAAO,SAAUE,YAAY,EAAO7B,KAAM,UAC3D,CAAE0B,KAAM,eAAgBC,MAAO,eAAgBE,YAAY,EAAO7B,KAAM,UACxE,CAAE0B,KAAM,WAAYC,MAAO,WAAYE,YAAY,EAAO7B,KAAM,UAChE,CAAE0B,KAAM,WAAYC,MAAO,WAAYE,YAAY,EAAOC,UAAU,EAAM9B,KAAM,UAChF,CAAE0B,KAAM,YAAaC,MAAO,YAAaE,YAAY,EAAOC,UAAU,EAAM9B,KAAM,UAElF,CAAE0B,KAAM,iBAAkBC,MAAO,mBAAoBE,YAAY,EAAO7B,KAAM,SA1D/D,S,qDAgEnB,WAAqB,IAAD,OAClB+B,KAAKN,WAAWO,KAAI,SAAAC,GAAG,OACrBC,YAAeD,EAAI,EAAKvC,UAW1BqC,KAAKrC,MAAMyC,aAAa,CACtBvB,KAAMmB,KAAKjC,MAAMc,KAGjBwB,MAAO,KACPC,IAAK,CAAC,SAAY,IACjB,SAAUC,KAEXnB,KAAKY,S,yBAGT,SAAYE,EAAIM,GAEZ,IAAI9B,EADS,YAAZwB,EAAIjC,OAGFuC,EAAUC,WAAWT,KAAKjC,MAAMc,OAAS2B,EAAUC,WAAWP,EAAIQ,OAAO7B,QAE1EH,EAAQiC,YAAWH,EAAUC,WAAWT,KAAKjC,MAAMc,MAAM2B,EAAUC,WAAWP,EAAIQ,OAAO7B,MAAMqB,EAAIP,MACnGK,KAAKzB,SAAS,CAAEG,MAAOA,Q,uCAI7B,SAA0B8B,GAAY,IAAD,OAG9BA,EAAUC,WAAWG,UACxBZ,KAAKzB,SAAS,CAAEG,MAAO8B,EAAUC,WAAWT,KAAKjC,MAAMc,QACvDmB,KAAKzB,SAAS,CAAEI,MAAO6B,EAAUC,aAG/BT,KAAKN,WAAWO,KAAI,SAAAC,GAAG,OACrB,EAAKW,YAAYX,EAAIM,OAMvBA,EAAUC,YAAcD,EAAUC,WAAWK,mBAAqBN,EAAUC,WAAWK,kBAAkBC,QACtD,KAAjDP,EAAUC,WAAWK,kBAAkBC,QACzCC,MAAMR,EAAUC,WAAWK,kBAAkBG,OAM7CT,EAAUC,YAAcD,EAAUC,WAAWS,mBAAqBV,EAAUC,WAAWS,kBAAkBH,QACtD,KAAjDP,EAAUC,WAAWS,kBAAkBH,QACzCC,MAAMR,EAAUC,WAAWS,kBAAkBD,S,4BASnD,WAAkB,IAAD,OACXE,EAAUC,YAAepB,KAAKN,YAgBlC,OARAyB,EAAQE,QAAQ,CACd1B,KAAM,SACN2B,MAAO,QACPC,KAAM,SAAAC,GAAG,OAAI,kBAAC,IAAD,CAAaC,aAAW,iBACnC,kBAAC,IAAD,CAAQC,QAAQ,YAAYC,QAAS,kBAAM,EAAKC,WAAWJ,KAAM,uBAAGK,UAAU,wBAAwBC,cAAY,UAClH,kBAAC,IAAD,CAAQJ,QAAQ,YAAYC,QAAS,WAAYI,OAAOC,QAAQ,0CAA0C,EAAKC,aAAaT,KAAO,uBAAGK,UAAU,cAAcC,cAAY,cAGvKX,I,wBAWT,SAAWK,GAETxB,KAAKzB,SAAS,CAAE2D,GAAIC,OAAOC,OAAO,GAAIZ,EAAK,IAAK1D,UAAW0D,EAAKxC,MAAO,OAAQP,WAAW,EAAMM,UAAW,kB,yBAG7G,WACEiB,KAAKzB,SAAS,CAAEE,WAAW,M,wBAG7B,WACEuB,KAAKzB,SAAS,CAAET,UAAWkC,KAAKR,YAAaR,MAAO,MAAOP,WAAW,EAAMM,UAAW,qB,0BAGzF,SAAayC,GACTxB,KAAKzB,SAAS,CAAE2D,GAAIC,OAAOC,OAAO,GAAIZ,EAAK,IAAK1D,UAAW0D,IAC3DxB,KAAKrC,MAAM0E,WAAW,CACpBxD,KAAMmB,KAAKjC,MAAMc,KACjByD,KAAM,CAAC,SAAa,GACpBC,UAAW,CAAE,GAAMf,EAAItD,MACtB,SAAUsE,GACa,MAArBA,EAAKA,KAAKzB,OACX0B,YAAM,mCAAoC,CAAExE,KAAM,YAMlDwE,IAAMxB,MAAM,sCAGhBjB,KAAKrC,MAAM+E,UAAU,CACnB7D,KAAM,UACNyD,KAAM,CACJK,OAAQ,gBACRC,OAAO,SACPV,GAAIlC,KAAKjC,MAAMmE,GACfW,GAAI,CAAC,SAAa,GAClBC,GAAI,IAAIC,KACRC,GAAIC,cAAUC,Y,wBAetB,WACE,IAAIpF,EAAYqF,KAAKC,MAAMD,KAAKE,UAAUrD,KAAKjC,MAAMD,YAErD,GAAGkC,KAAKT,iBAAiBzB,GAAW,CAElC,GADAkC,KAAKsD,YAAYxF,GAAW,GACJ,QAApBkC,KAAKjC,MAAMiB,MAAiB,CAC9B,IAAId,EAAKJ,EAAS,UACXA,EAAS,GAChBkC,KAAKsD,YAAYxF,GAAW,GAC5BA,EAAS,KAAW2B,IAAO3B,EAAS,MAAUO,OAAO,cACrD2B,KAAKrC,MAAM0E,WAAW,CACpBxD,KAAMmB,KAAKjC,MAAMc,KACjByD,KAAMxE,EACNyE,UAAW,CAAE,GAAMrE,KAClB,SAAUsE,GACa,MAArBA,EAAKA,KAAKzB,OACX0B,YAAM,mCAAoC,CAAExE,KAAM,YAElDwE,IAAMxB,MAAM,sCAGhBjB,KAAKrC,MAAM+E,UAAU,CACnB7D,KAAM,UACNyD,KAAM,CACJK,OAAQ,gBACRC,OAAO,OACPV,GAAIlC,KAAKjC,MAAMmE,GACfW,GAAI/E,EACJgF,GAAI,IAAIC,KACRC,GAAIC,cAAUC,cAIb,CACL,IAAIpF,EAAYqF,KAAKC,MAAMD,KAAKE,UAAUrD,KAAKjC,MAAMD,mBAE9CA,EAAS,GAChBkC,KAAKsD,YAAYxF,GAAW,GAC5BkC,KAAKrC,MAAM4F,WAAW,CACpB1E,KAAMmB,KAAKjC,MAAMc,KACjByD,KAAMxE,IACL,SAAU0E,GACa,MAArBA,EAAKA,KAAKzB,OACX0B,YAAM,iCAAkC,CAAExE,KAAM,YAEhDwE,IAAMxB,MAAM,oCAGhBjB,KAAKrC,MAAM+E,UAAU,CACnB7D,KAAM,UACNyD,KAAM,CACJK,OAAQ,gBACRC,OAAO,MACPV,GAAI,GACJW,GAAI/E,EACJgF,GAAI,IAAIC,KACRC,GAAIC,cAAUC,UAIpBlD,KAAKzB,SAAS,CAAEE,WAAW,O,8BAmB/B,SAAiBX,GAEb,IAAI0F,GAAc,EAwBlB,OAtBI1F,EAAS,SACT0F,GAAc,EAEdf,IAAMxB,MAAM,+BAGZnD,EAAS,cACT0F,GAAc,EACdf,IAAMxB,MAAM,oCAGZnD,EAAS,aACT0F,GAAc,EACdf,IAAMxB,MAAM,kCAGZnD,EAAS,YACT0F,GAAc,EACdf,IAAMxB,MAAM,gCAITuC,I,yBAGX,SAAY1F,EAAW2F,GACrB3F,EAAYwF,YAAYtD,KAAKN,WAAY5B,EAAW2F,GACpDzD,KAAKzB,SAAS,CAAET,UAAWA,M,oBAG7B,WAAU,IAAD,OACDqD,EAAUnB,KAAKoB,iBACrB,EAAoEpB,KAAKjC,MAAjEW,EAAR,EAAQA,MAAOI,EAAf,EAAeA,UAAWL,EAA1B,EAA0BA,UAAWM,EAArC,EAAqCA,UAAWjB,EAAhD,EAAgDA,UAAUkB,EAA1D,EAA0DA,MAE1D,OACE,oCACE,yBAAK6C,UAAU,WACb,kBAAC,IAAD,MACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAK6B,GAAG,MACN,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKA,GAAI,IAEP,kBAAC,IAAD,CAAWC,IAAI,MAAM7E,IAEvB,kBAAC,IAAD,CAAK4E,GAAI,GACP,kBAAC,IAAD,CAAQhC,QAAQ,UAAUC,QAAS3B,KAAKX,YAAxC,UAIN,kBAAC,IAAD,KACE,kBAAC,IAAD,CACE8B,QAASA,EACTqB,KAAM9D,QAOhB,kBAAC,IAAD,CAAOkF,KAAMnF,EAAWoF,OAAQ7D,KAAKb,YAAa2E,gBAAgB,aAChE,kBAAC,IAAMC,OAAP,CAAcC,aAAW,GACvB,kBAAC,IAAMC,MAAP,KAAclF,IAEhB,kBAAC,IAAMmF,KAAP,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACGlE,KAAKN,WAAWO,KAAI,SAAAC,GAAG,OACtBiE,YAAmBjE,EAAKpC,EAAW,EAAKF,aAAaoB,SAK7D,kBAAC,IAAMoF,OAAP,KACE,kBAAC,IAAD,CAAQ1C,QAAQ,YAAYC,QAAS3B,KAAKb,aAA1C,SAGA,kBAAC,IAAD,CAAQuC,QAAQ,UAAUC,QAAS3B,KAAKV,YAAxC,wB,GAzXoB+E,IAAMC,WA2YzBC,uBANf,SAAyBxG,GACvB,MAAO,CACL0C,WAAY1C,EAAM0C,cAMpB,CACE+D,kBACApE,iBACAmD,eACAlB,eACAK,eAPW6B,CAUb7G,I,uDCpbF,0KAIM+G,EAAwB,SAAAC,GAM5B,OAJIA,EAAMC,WAAW5G,OAAS2G,EAAMC,WAAWC,WAC7CC,aAAaC,QAAQJ,EAAMC,WAAWC,UAAWzB,KAAKE,UAAUqB,EAAMlC,OAGjE,CACLvE,KAAM8G,IAAUC,mBAChBC,QAASP,EAAMlC,KACf3D,KAAM6F,EAAMC,WAAW9F,OAIrBqG,EAA4B,SAAAjE,GAChC,MAAO,CACLhD,KAAM8G,IAAUI,gBAChBF,QAAShE,IAIAb,EAAe,SAACuE,EAAWS,GAEtC,GAAuB,MAAnBT,EAAWnC,WAAmC6C,GAAnBV,EAAWnC,KACxC,OAAO,SAAU8C,EAAUC,GACzBD,EAASb,EAAsB,CAAEjC,KAAMmC,EAAWnC,KAAMmC,WAAYA,MAGxE,IACE,GAAKA,EAAW5G,OAAS8G,aAAaW,QAAQb,EAAWC,YAAeC,aAAaW,QAAQb,EAAWC,WAEtG,OAAO,SAAUU,EAAUC,GACzB,IAAI/C,EAAOW,KAAKC,MAAMyB,aAAaW,QAAQb,EAAWC,YACtDU,EAASb,EAAsB,CAAEjC,KAAMA,EAAMmC,WAAYA,MAI/D,MAAO9G,IAKP,OAAO,SAAUyH,EAAUC,GACzBE,IACGC,IAAIhF,IAAOiF,IAAIC,SAAW,cAAe,CACxCC,OAAQlB,IAETmB,MAAK,SAAAtD,GACAmC,EAAW5G,OAAS4G,EAAWC,WACjCC,aAAaC,QAAQH,EAAWC,UAAWzB,KAAKE,UAAUb,EAAKA,KAAKA,OAElE4C,GACFA,EAAG5C,GAEL8C,EAASb,EAAsB,CAAEjC,KAAMA,EAAKA,KAAKA,KAAK,GAAImC,WAAYA,QAEvEoB,OAAM,SAAA9E,GACLqE,EAASJ,EAA0BjE,SAuB9BsC,EAAa,SAACoB,EAAYS,GACrC,OAAO,SAAUE,EAAUC,GACzBE,IACGO,KAAKtF,IAAOiF,IAAIC,SAAW,gBAAiB,CAC3CpD,KAAMmC,IAEPmB,MAAK,SAAAtD,GArBe,IAAAkC,EAsBfU,GACFA,EAAG5C,GAEL8C,GAzBmBZ,EAyBS,CAAElC,KAAMA,EAAKA,MAvBxC,CACLvE,KAAM8G,IAAUkB,sBAChBhB,QAASP,EAAMlC,WAuBZuD,OAAM,SAAA9E,GACLqE,EApBuB,SAAArE,GAC7B,MAAO,CACLhD,KAAM8G,IAAUmB,mBAChBjB,QAAShE,GAiBIkF,CAAuBlF,SAqB3BoB,EAAa,SAACsC,EAAYS,GAErC,OAAO,SAAUE,EAAUC,GACzBE,IACGO,KAAKtF,IAAOiF,IAAIC,SAAW,gBAAiB,CAC3CpD,KAAMmC,IAEPmB,MAAK,SAAAtD,GAtBe,IAAAkC,EAuBfU,GACFA,EAAG5C,GAEL8C,GA1BmBZ,EA0BS,CAAElC,KAAMA,EAAKA,MAxBxC,CACLvE,KAAM8G,IAAUqB,sBAChBnB,QAASP,EAAMlC,WAwBZuD,OAAM,SAAA9E,GACLqE,EArBuB,SAAArE,GAC7B,MAAO,CACLhD,KAAM8G,IAAUsB,mBAChBpB,QAAShE,GAkBIqF,CAAuBrF,SAQ3BsF,EAAgB,SAAC5B,EAAYS,GAExC,IACE,GAAKT,EAAW5G,OAAS8G,aAAaW,QAAQb,EAAWC,YAAeC,aAAaW,QAAQb,EAAWC,WAAY,CAElH,IAAIpC,EAAOW,KAAKC,MAAMyB,aAAaW,QAAQb,EAAWC,YAEtD,YADAQ,EAAG5C,IAIP,MAAO3E,IAIP4H,IACGC,IAAIhF,IAAOiF,IAAIC,SAAW,cAAe,CACxCC,OAAQlB,IAETmB,MAAK,SAAAtD,GACAmC,EAAW5G,OAAS4G,EAAWC,WACjCC,aAAaC,QAAQH,EAAWC,UAAWzB,KAAKE,UAAUb,EAAKA,KAAKA,OAEtE4C,EAAG5C,EAAKA,KAAKA,SAIduD,OAAM,SAAA9E","file":"static/js/88.f6161962.chunk.js","sourcesContent":["\nimport React from \"react\";\nimport { ButtonGroup, Button, Modal, Form } from 'react-bootstrap';\n\n/*import {\n  GetCommonData\n} from \"../store/actions/CommonAction\";*/\n\nimport { GetMySqlData, InsertData, UpdateData } from \"../store/actions/CommonMysqlAction\";\nimport { addRecord, GetCommonData } from \"../store/actions/CommonMongoAction\";\n\nimport { connect } from \"react-redux\";\n// import { Link } from \"react-router-dom\";\nimport DataTable from './Common/DataTableWithFilter';\nimport { fnBindRootData, fnRenderfrmControl, fnDatatableCol, fnCleanData, GetJsonToArray, getMax, joinObject, getuser } from '../utility/utility.jsx';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport moment from \"moment\";\n\n// reactstrap components\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Table,\n  Row,\n  Col\n} from \"reactstrap\";\n\n\nclass ManagePortPriStatus extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoaded: false,\n      showModal: false,\n      items: [],\n      store: [],\n      activePage: 1,\n      root: \"PortPriStatus\",\n      PageTitle: \"Port PRI Status\",\n      FormTitle: \"\",\n      formvalue: {},\n      event: \"\",\n      errors: {},\n      fields: {},\n    };\n    this.handleClose = this.handleClose.bind(this);\n    this.handleShow = this.handleShow.bind(this);\n    this.handleSave = this.handleSave.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleValidation = this.handleValidation.bind(this);\n    this.selectedrow = { \n      \"id\": 0, \n      \"portno\" : \"\",\n      \"mincallerid\" : \"\",\n      \"maxcallerid\" : \"\",\n      \"currentpri\" : \"\",\n      \"sippri\" : 0,\n      \"sipip\" : \"\",\n      \"sip_provider\" : \"\",\n      \"date\" : moment().format(\"YYYY-MM-DD\"),\n      \"failover\" : \"\",\n      \"building\" : \"\",\n      \"server_ip\" : \"\",\n      \"ismaincallable\" : \"\",\n      \"isActive\" : 1\n    };\n\n    this.columnlist = [\n      { name: \"id\", label: \"ID\", type: \"hidden\", hide: true },\n      { \n        name: \"portno\", \n        label: \"Port No.\", \n        searchable: false, \n        required: true,\n        type: \"string\",\n        //editable: false\n      },\n      { name: \"mincallerid\", label: \"Min Caller Id\", searchable: false, type: \"string\" },\n      { name: \"maxcallerid\", label: \"Max Caller Id\", searchable: false, type: \"string\" },\n      { name: \"currentpri\", label: \"current PRI\", searchable: false, type: \"string\" },\n      { name: \"sippri\", label: \"Sip PRI\", searchable: false, type: \"string\" },\n      { name: \"sipip\", label: \"Sip IP\", searchable: false, type: \"string\" },\n      { name: \"sip_provider\", label: \"Sip Provider\", searchable: false, type: \"string\" },\n      { name: \"failover\", label: \"Failover\", searchable: false, type: \"string\" },\n      { name: \"building\", label: \"building\", searchable: false, required: true, type: \"string\" },\n      { name: \"server_ip\", label: \"Server IP\", searchable: false, required: true, type: \"string\" },\n      //{ name: \"isActive\", label: \"IsActive\", searchable: false, type: \"bool\" },\n      { name: \"ismaincallable\", label: \"Is Main Callable\", searchable: false, type: \"bool\" },\n    ];\n    let count = 0;\n  }\n\n\n  componentDidMount() {\n    this.columnlist.map(col => (\n      fnBindRootData(col,this.props)\n    ));\n\n    /*this.props.GetMySqlData({\n      limit: 10,\n      skip: 0,\n      c: \"L\",\n      root: this.state.root,\n      cols: GetJsonToArray(this.columnlist, \"name\")\n    });*/\n\n    this.props.GetMySqlData({\n      root: this.state.root,\n      //     cols: {},\n      //     c: \"L\",\n      order: \"id\",\n      con: {\"isActive\": 1 }\n    }, function (result) {//debugger;\n      //this.setState({ showMoreInfoModal: true, MoreInfoData: result.data.data[0] });\n    }.bind(this));\n\n  }\n  fnBindStore(col,nextProps){\n    if(col.type == \"dropdown\"){\n      let items;\n      \n      if(nextProps.CommonData[this.state.root] && nextProps.CommonData[col.config.root]){\n        \n        items = joinObject(nextProps.CommonData[this.state.root],nextProps.CommonData[col.config.root],col.name)\n        this.setState({ items: items });\n      }\n    }\n  }\n  componentWillReceiveProps(nextProps) {\n    \n\n    if (!nextProps.CommonData.isError) {\n      this.setState({ items: nextProps.CommonData[this.state.root] });\n      this.setState({ store: nextProps.CommonData });\n      \n      //setTimeout(function(){\n        this.columnlist.map(col => (\n          this.fnBindStore(col,nextProps)\n        ));\n      //}.bind(this),2000);\n      \n    }\n\n    if (nextProps.CommonData && nextProps.CommonData.InsertSuccessData && nextProps.CommonData.InsertSuccessData.status) {\n      if (nextProps.CommonData.InsertSuccessData.status != 200)\n        alert(nextProps.CommonData.InsertSuccessData.error);\n      else {\n        //this.setState({ showModal: false });\n      }\n    }\n\n    if (nextProps.CommonData && nextProps.CommonData.UpdateSuccessData && nextProps.CommonData.UpdateSuccessData.status) {\n      if (nextProps.CommonData.UpdateSuccessData.status != 200)\n        alert(nextProps.CommonData.UpdateSuccessData.error);\n      else {\n        //this.setState({ showModal: false });\n      }\n    }\n\n  }\n\n\n  fnDatatableCol() {\n    var columns = fnDatatableCol(this.columnlist);\n\n    // columns.push({\n    //   name: \"InvType\",\n    //   selector: \"InvTypeID_display\",\n    //   sortable: true,\n    // });\n\n    columns.unshift({\n      name: \"Action\",\n      width: \"150px\",\n      cell: row => <ButtonGroup aria-label=\"Basic example\">\n        <Button variant=\"secondary\" onClick={() => this.handleEdit(row)}><i className=\"fa fa-pencil-square-o\" aria-hidden=\"true\"></i></Button>\n        <Button variant=\"secondary\" onClick={() => { if (window.confirm('Are you sure you wish to delete this?')) this.handleDelete(row)}}><i className=\"fa fa-trash\" aria-hidden=\"true\"></i></Button>\n      </ButtonGroup>\n    });\n    return columns;\n  }\n\n\n\n  /*\n  handleCopy(row) {\n    this.setState({ formvalue: row, event: \"Copy\", showModal: true, FormTitle: \"Copy Record\" });\n  }\n  */\n\n  handleEdit(row) {\n    //this.setState({ od: Object.assign({}, row, {}), formvalue: Object.assign({}, row, {}), event: \"Edit\", showModal: true, FormTitle: \"Edit Record\" });\n    this.setState({ od: Object.assign({}, row, {}), formvalue: row, event: \"Edit\", showModal: true, FormTitle: \"Edit Record\" });\n  }\n\n  handleClose() {\n    this.setState({ showModal: false });\n  }\n\n  handleShow() {\n    this.setState({ formvalue: this.selectedrow, event: \"Add\", showModal: true, FormTitle: \"Add New Record\" });\n  }\n\n  handleDelete(row){\n      this.setState({ od: Object.assign({}, row, {}), formvalue: row });\n      this.props.UpdateData({\n        root: this.state.root,\n        body: {'isActive' : 0},\n        querydata: { \"id\": row.id }\n      }, function (data) {\n        if(data.data.status === 200) {\n          toast(\"PRI status removed successfully!\", { type: 'success' });\n          /*setTimeout(function(){\n            window.location.reload();\n          }, 1500);*/\n        }\n        else \n          toast.error(\"PRI status could not be removed\"); \n      });\n        \n      this.props.addRecord({\n        root: \"History\",\n        body: {\n          module: \"PortPriStatus\",\n          action:\"Delete\",\n          od: this.state.od,\n          nd: {'isActive' : 0},\n          ts: new Date(),\n          by: getuser().UserID\n        }\n      });\n\n    /*this.props.DeleteData({\n      root: this.state.root,\n      query: {QuestionID : row.QuestionID}\n    }, function (data) {\n      if(data.data.status === 200) \n        toast(\"Question removed!\", { type: 'success' });\n      else \n        toast.error(\"Question could not be removed\"); \n    });*/\n  }\n\n  handleSave() {\n    let formvalue = JSON.parse(JSON.stringify(this.state.formvalue));\n    \n    if(this.handleValidation(formvalue)){\n      this.fnCleanData(formvalue, true)\n      if (this.state.event == \"Edit\") {\n        let id = formvalue[\"id\"];\n        delete formvalue[\"id\"]\n        this.fnCleanData(formvalue, true);\n        formvalue[\"date\"] = moment(formvalue[\"date\"]).format(\"YYYY-MM-DD\");\n        this.props.UpdateData({\n          root: this.state.root,\n          body: formvalue,\n          querydata: { \"id\": id }\n        }, function (data) {\n          if(data.data.status === 200) \n            toast(\"PRI status updated successfully!\", { type: 'success' });\n          else \n            toast.error(\"PRI status could not be updated\"); \n        });\n        \n        this.props.addRecord({\n          root: \"History\",\n          body: {\n            module: \"PortPriStatus\",\n            action:\"Edit\",\n            od: this.state.od,\n            nd: formvalue,\n            ts: new Date(),\n            by: getuser().UserID\n          }\n        });\n\n      } else {\n        let formvalue = JSON.parse(JSON.stringify(this.state.formvalue));\n        //formvalue[\"CreatedOn\"] = new Date();\n        delete formvalue[\"id\"]\n        this.fnCleanData(formvalue, false);\n        this.props.InsertData({\n          root: this.state.root,\n          body: formvalue\n        }, function (data) {\n          if(data.data.status === 200) \n            toast(\"PRI status added successfully!\", { type: 'success' });\n          else \n            toast.error(\"PRI status could not be added\"); \n        });\n        \n        this.props.addRecord({\n          root: \"History\",\n          body: {\n            module: \"PortPriStatus\",\n            action:\"Add\",\n            od: {},\n            nd: formvalue,\n            ts: new Date(),\n            by: getuser().UserID\n          }\n        });\n      }\n      this.setState({ showModal: false });\n    }\n  }\n  handleChange = (e,props) => {\n    let formvalue = this.state.formvalue;\n    \n    if (e.target && e.target.type == \"checkbox\") {\n      formvalue[e.target.id] = e.target.checked;\n    }\n    else if(e._isAMomentObject){\n      formvalue[props] = e.format()\n    }\n    else {\n      formvalue[e.target.id] = e.target.value;\n    }\n\n    this.setState({ formvalue: formvalue });\n  }\n\n  handleValidation(formvalue){\n      let errors = {};\n      let formIsValid = true;\n      \n      if(!formvalue[\"portno\"]){\n          formIsValid = false;\n          //errors[\"queuename\"] = \"This field is required\";\n          toast.error(\"Port no. field is required\"); \n      }\n      \n      if(!formvalue[\"mincallerid\"]){\n          formIsValid = false;\n          toast.error(\"Min called id field is required\"); \n      }\n      \n      if(!formvalue[\"currentpri\"]){\n          formIsValid = false;\n          toast.error(\"Current PRI field is required\"); \n      }\n            \n      if(!formvalue[\"server_ip\"]){\n          formIsValid = false;\n          toast.error(\"Server IP field is required\"); \n      }\n    \n      //this.setState({errors: errors});\n      return formIsValid;\n  }\n\n  fnCleanData(formvalue, IsUpdate) {\n    formvalue = fnCleanData(this.columnlist, formvalue, IsUpdate);\n    this.setState({ formvalue: formvalue });\n  }\n\n  render() {\n    const columns = this.fnDatatableCol();\n    const { items, PageTitle, showModal, FormTitle, formvalue,event } = this.state;\n    \n    return (\n      <>\n        <div className=\"content\">\n          <ToastContainer />\n          <Row>\n            <Col md=\"12\">\n              <Card>\n                <CardHeader>\n                  <Row>\n                    <Col md={11}>\n\n                      <CardTitle tag=\"h4\">{PageTitle}</CardTitle>\n                    </Col>\n                    <Col md={1}>\n                      <Button variant=\"primary\" onClick={this.handleShow}>ADD</Button>\n                    </Col>\n                  </Row>\n                </CardHeader>\n                <CardBody>\n                  <DataTable\n                    columns={columns}\n                    data={items}\n                  />\n                </CardBody>\n              </Card>\n            </Col>\n          </Row>\n\n          <Modal show={showModal} onHide={this.handleClose} dialogClassName=\"modal-90w\">\n            <Modal.Header closeButton>\n              <Modal.Title>{FormTitle}</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n              <Form>\n                <Row>\n                  {this.columnlist.map(col => (\n                    fnRenderfrmControl(col, formvalue, this.handleChange,event)\n                  ))}\n                </Row>\n              </Form>\n            </Modal.Body>\n            <Modal.Footer>\n              <Button variant=\"secondary\" onClick={this.handleClose}>\n                Close\n              </Button>\n              <Button variant=\"primary\" onClick={this.handleSave}>\n                Save Changes\n            </Button>\n            </Modal.Footer>\n          </Modal>\n        </div>\n      </>\n    );\n  }\n}\n\n\nfunction mapStateToProps(state) {\n  return {\n    CommonData: state.CommonData\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  {\n    GetCommonData,\n    GetMySqlData,\n    InsertData,\n    UpdateData,\n    addRecord,\n    //GetCommonDataMongo\n  }\n)(ManagePortPriStatus);","import axios from \"axios\";\nimport config from \"../../config.jsx\";\nimport constants from \"../../Constants/Constants.jsx\";\n\nconst GetCommonData_fetched = Todos => {\n\n  if (Todos.dataToSend.state && Todos.dataToSend.statename) {\n    localStorage.setItem(Todos.dataToSend.statename, JSON.stringify(Todos.data));\n  }\n\n  return {\n    type: constants.GET_COMMON_SUCCESS,\n    payload: Todos.data,\n    root: Todos.dataToSend.root\n  };\n};\n\nconst GetCommonData_fetch_error = error => {\n  return {\n    type: constants.GET_COMMON_FAIL,\n    payload: error\n  };\n};\n\nexport const GetMySqlData = (dataToSend,cb) => {\n\n  if (dataToSend.data != null || dataToSend.data != undefined) {\n    return function (dispatch, getState) {\n      dispatch(GetCommonData_fetched({ data: dataToSend.data, dataToSend: dataToSend }));\n    };\n  }\n  try {\n    if ((dataToSend.state && localStorage.getItem(dataToSend.statename)) || localStorage.getItem(dataToSend.statename)) {\n\n      return function (dispatch, getState) {\n        let data = JSON.parse(localStorage.getItem(dataToSend.statename))\n        dispatch(GetCommonData_fetched({ data: data, dataToSend: dataToSend }));\n      }\n    }\n  }\n  catch (e) {\n\n  }\n\n\n  return function (dispatch, getState) {\n    axios\n      .get(config.api.base_url + \"/mydb/list/\", {\n        params: dataToSend\n      })\n      .then(data => {\n        if (dataToSend.state && dataToSend.statename) {\n          localStorage.setItem(dataToSend.statename, JSON.stringify(data.data.data));\n        }\n        if (cb) {\n          cb(data);\n        }\n        dispatch(GetCommonData_fetched({ data: data.data.data[0], dataToSend: dataToSend }));\n      })\n      .catch(error => {\n        dispatch(GetCommonData_fetch_error(error, dataToSend));\n      });\n  };\n};\n\n\n\n\nconst InsertData_fetched = Todos => {\n\n  return {\n    type: constants.INSERT_COMMON_SUCCESS,\n    payload: Todos.data\n  };\n};\n\nconst InsertData_fetch_error = error => {\n  return {\n    type: constants.INSERT_COMMON_FAIL,\n    payload: error\n  };\n};\n\nexport const InsertData = (dataToSend, cb) => {\n  return function (dispatch, getState) {\n    axios\n      .post(config.api.base_url + \"/mydb/insert/\", {\n        data: dataToSend\n      })\n      .then(data => {\n        if (cb) {\n          cb(data);\n        }\n        dispatch(InsertData_fetched({ data: data.data }));\n      })\n      .catch(error => {\n        dispatch(InsertData_fetch_error(error));\n      });\n  };\n};\n\n\nconst UpdateData_fetched = Todos => {\n\n  return {\n    type: constants.UPDATE_COMMON_SUCCESS,\n    payload: Todos.data\n  };\n};\n\nconst UpdateData_fetch_error = error => {\n  return {\n    type: constants.UPDATE_COMMON_FAIL,\n    payload: error\n  };\n};\n\nexport const UpdateData = (dataToSend, cb) => {\n\n  return function (dispatch, getState) {\n    axios\n      .post(config.api.base_url + \"/mydb/update/\", {\n        data: dataToSend\n      })\n      .then(data => {\n        if (cb) {\n          cb(data);\n        }\n        dispatch(UpdateData_fetched({ data: data.data }));\n      })\n      .catch(error => {\n        dispatch(UpdateData_fetch_error(error));\n      });\n  };\n};\n\n\n\n\nexport const GetDataDirect = (dataToSend, cb) => {\n\n  try {\n    if ((dataToSend.state && localStorage.getItem(dataToSend.statename)) || localStorage.getItem(dataToSend.statename)) {\n\n      let data = JSON.parse(localStorage.getItem(dataToSend.statename));\n      cb(data);\n      return;\n    }\n  }\n  catch (e) {\n\n  }\n  //return function (dispatch, getState) {\n  axios\n    .get(config.api.base_url + \"/mydb/list/\", {\n      params: dataToSend\n    })\n    .then(data => {\n      if (dataToSend.state && dataToSend.statename) {\n        localStorage.setItem(dataToSend.statename, JSON.stringify(data.data.data));\n      }\n      cb(data.data.data);\n\n      //dispatch(GetCommonData_fetched({ data: data.data.data[0], dataToSend: dataToSend }));\n    })\n    .catch(error => {\n      //dispatch(GetCommonData_fetch_error(error, dataToSend));\n    });\n  //};\n\n};\n\nexport const GetRealTimeAgentData = (manager, context, cb) => {\n\n  let url = config.api.realtimeurl + \"RealTimeAgentStatus?managercode=\" + (context == \"\" ? manager : \"\") + \"&context=\" + context;\n\n  axios\n    .get(url)\n    .then(data => {\n\n      cb(data);\n      //dispatch(GetCommonData_fetched({ data: data.data.data[0], dataToSend: dataToSend }));\n    })\n    .catch(error => {\n      //dispatch(GetCommonData_fetch_error(error, dataToSend));\n    });\n  //};\n\n};\n\nexport const GetRealTimeTotalData = (context, cb) => {\n\n  let url = config.api.realtimeurl + \"RealTimeData?context=\" + context;\n\n  axios\n    .get(url)\n    .then(data => {\n\n      cb(data);\n      //dispatch(GetCommonData_fetched({ data: data.data.data[0], dataToSend: dataToSend }));\n    })\n    .catch(error => {\n      //dispatch(GetCommonData_fetch_error(error, dataToSend));\n    });\n  //};\n\n};\n\n\nexport const SendOTP = (dataToSend, cb) => {\n  let url = config.api.SendOTP;\n  const headers = {\n    'Content-Type': 'application/json',\n    'Authorization': 'cG9saWN5 YmF6YWFy'\n  }\n  axios\n    .post(url,\n      dataToSend\n      , {\n        headers: headers\n      })\n    .then(data => {\n\n      cb(data);\n    })\n    .catch(error => {\n    });\n};\n\nexport const ValidateOTP = (dataToSend, cb) => {\n  let url = config.api.ValidateOTP;\n  const headers = {\n    'Content-Type': 'application/json',\n    'Authorization': 'cG9saWN5 YmF6YWFy'\n  }\n  axios\n    .post(url,\n      dataToSend\n      , {\n        headers: headers\n      })\n    .then(data => {\n\n      cb(data);\n    })\n    .catch(error => {\n    });\n};\n\nexport const GetComunicationData = (dataToSend, cb) => {\n\n  return function (dispatch, getState) {\n    axios\n      .get(config.api.ServiceAPI + dataToSend.root, {\n        params: dataToSend.data\n      })\n      .then(data => {\n        cb(data);\n        //dispatch(GetCommonData_fetched({ data: data, dataToSend: dataToSend }));\n      })\n      .catch(error => {\n        dispatch(GetCommonData_fetch_error(error, dataToSend));\n      });\n  };\n};"],"sourceRoot":""}