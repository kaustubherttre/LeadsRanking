{"version":3,"sources":["views/PbSurvey.jsx","views/Common/AlertBox.jsx","store/actions/CommonMysqlAction.jsx","views/Common/ManagerHierarchy.jsx","views/Common/DropDownListMysql.jsx","views/Common/RadioOptions.jsx","views/Common/Date.jsx","views/RealTimePanel/RealTimePanel.jsx","views/RealTimePanel/RealTimePanelQueuewiseTwo.jsx"],"names":["PbSurvey","props","state","root","PageTitle","UserId","ManagerId","UserInfo","IsSuccess","Error","answerone","answertwo","answerthree","uid","surveyFormDisplay","validUser","onSubmit","IsLoading","errors","fields","showDescriptionOne","showDescriptionTwo","showDescriptionThree","QuestionOneAnswer","QuestionTwoAnswer","QuestionThreeAnswer","nextProps","CommonData","isError","this","setState","items","store","window","scrollTo","UserList","GetCommonData","getUrlParameter","results","data","status","CheckSurveyResponseFilled","bind","c","con","result","length","columnlist","fnDatatableCol","managerid","getuser","UserID","e","console","log","target","value","field","formIsValid","preventDefault","formData","FormData","qus","document","querySelectorAll","countChecked","alert","qu","id","desc","getElementsByName","description","radio","defaultValue","qaarray","split","json","moment","format","InsertData","body","toast","type","html","class","ref","name","onFormSubmit","md","className","Text","changed","setAnswerOne","isSelected","Label","Control","as","rows","placeholder","onChange","setAnswerTwo","setAnswerThree","renderSurveyForm","React","Component","connect","GetMySqlData","AlertBox","show","setTimeout","variant","GetCommonData_fetched","Todos","dataToSend","statename","localStorage","setItem","JSON","stringify","constants","GET_COMMON_SUCCESS","payload","GetCommonData_fetch_error","error","GET_COMMON_FAIL","cb","undefined","dispatch","getState","getItem","parse","axios","get","config","api","base_url","params","then","catch","post","INSERT_COMMON_SUCCESS","INSERT_COMMON_FAIL","InsertData_fetch_error","UpdateData","UPDATE_COMMON_SUCCESS","UPDATE_COMMON_FAIL","UpdateData_fetch_error","GetDataDirect","ManagerHierarchy","nodes","checked","expanded","RoleId","res","replace","handleShow","SelectedSupervisors","forceUpdate","getElementById","style","right","checkeditem","index","indexOf","splice","onMouseLeave","onMouseOut","onClick","onMouseEnter","onButtonClick","checkModel","showNodeIcon","onCheck","onExpand","showExpandAll","DropDownListMysql","CallApi","col","Idfield","Displayfield","limit","skip","cols","visible","disabled","key","firstoption","map","item","Id","Display","DropDown","i","text","htmlFor","Date","handleStartDateChange","_isAMomentObject","onStartDate","startdate","enddate","add","handleEndDateChange","onEndDate","validation","currentDate","isBefore","validationEndDate","Group","controlId","dateFormat","RealTimePanel","AgentData","TotalData","onBarge","winactive","BargeWith","statuschange","_handleKeyDown","userAgent","schdular","selector","sortable","width","cell","row","Status","bargecall","Barge","aria-hidden","displayStatus","AgentCode","LastUpdatedOn","utc","from","ServerTime","hhmmss","TotalTalkTime","m","setInterval","hasFocus","addEventListener","event","context","GetRealTimeTotalData","user","join","EmployeeId","GetRealTimeAgentData","clearInterval","hangup","BargeWithAgent","unbargecall","toUpperCase","User","Pass","Realm","Asterisk_Url","WSServer","LoginAsteriskServer","CallingCompany","DIDNo","call","onsuccess","onerror","media","remote","audio","ua","uri","wsServers","authorizationUser","password","Web","Simple","on","stream","isRegistered","alldata","forEach","element","push","answered","unanswered","totalAgents","waitingCalls","totalAvailableAgents","columns","totalcolumnlist","filterdata","tag","required","onKeyDown","username","_handleOnClick","pagination","striped","noHeader","highlightOnHover","dense","GetCommonspData","RealTimePanelQueuewise","queues","QueueData","MoreInfoData","contextName","showModal","showMoreInfoModal","addClass","queueServerIp","clickedQueue","wraptime","wrapcomplete","unansweredlist","calltime","ModalTitle","entertime","mainqueueentertime","getHtmlListen","clickMoreinfo","moreinfolist","calldate","custom_disposition","getHtmlListenMoreInfo","fromNow","getLastUpdatedOn","getqueue","queueList","totalList","row_num","CreateMoreInfoRecordingURL","now","hanguptime","diff","call_type","data-toggle","title","CreateNCallersRecordingURL","number","paused","innerHTML","userfield","dstchannel","date","hour","datetime","phoneNo","substring","callid","recfilename","GetAwsRecordingUrl","url","src","GetFileExists","onloadedmetadata","duration","play","onended","pause","currentTime","calldataid","orig_callid","AwsRecordingUrl","GetRecordingName","CheckFile","extension","file_available","agent_file","record","queuestring","val","queuename","serverip","server_ip","GetRealTimeQueueData","is_mobile","is_claim","proid","product","ProductType","ProductId","IsMobile","IsClaim","filterContext","filter","queue","newContext","isMaster","child","UnansweredData","uniqueid","find","toLowerCase","lastupdatetime","lastsincetime","icon","classList","remove","CheckAudioFinishedPlay","tr","changeContext","data-myattribute","clickanswered","clickUnanswered","waitingibcalls","waitingctccalls","waitingassignedcalls","totalcalls","responsive","unansweredcolumns","moreinfocolumns","renderTotalData","onHide","dialogClassName","Header","closeButton","Title","Body","Footer"],"mappings":"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","file":"static/js/25.c6b71093.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {\r\n    GetCommonData, InsertData, GetCommonspData, GetFileExists, PostIncentiveFormData, PostAgentChatFileData, UpdateAgentChatParams, CustAgentVerifyOTP\r\n} from \"../store/actions/CommonAction\";\r\nimport {\r\n    GetMySqlData, GetDataDirect\r\n} from \"../store/actions/CommonMysqlAction\";\r\nimport { connect } from \"react-redux\";\r\nimport { getuser, fnDatatableCol, joinObject, getUrlParameter, GetJsonToArray } from '../utility/utility.jsx';\r\nimport DropDownListMysql from './Common/DropDownListMysql';\r\nimport MultiSelect from \"react-multi-select-component\";\r\nimport DropDown from './Common/DropDownList';\r\nimport RadioButton from './Common/RadioOptions';\r\nimport RealTimePanel from './RealTimePanel/RealTimePanel';\r\nimport RealTimePanelQueuewise from './RealTimePanel/RealTimePanelQueuewiseTwo';\r\nimport { If, Then, Else } from 'react-if';\r\nimport AlertBox from './Common/AlertBox';\r\nimport DataTable from './Common/DataTableWithFilter';\r\nimport Date from \"./Common/Date\"\r\nimport moment from 'moment';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { Link } from 'react-router-dom';\r\nimport OtpInput from \"react-otp-input\";\r\n\r\n// reactstrap components\r\nimport {\r\n    Card,\r\n    CardHeader,\r\n    CardBody,\r\n    CardTitle,\r\n    Table,\r\n    Row,\r\n    Col\r\n} from \"reactstrap\";\r\nimport { ButtonGroup, Button, Modal, Form } from 'react-bootstrap';\r\nimport { func, string } from \"prop-types\";\r\n\r\nclass PbSurvey extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            root: \"\",\r\n            PageTitle: \"\",\r\n            UserId: '',\r\n            ManagerId: '',      \r\n            UserInfo: '',\r\n            IsSuccess: '',\r\n            Error: false,\r\n            answerone: '',\r\n            answertwo: '',\r\n            answerthree: '',\r\n            uid: '',\r\n            surveyFormDisplay : '',\r\n            validUser: true,\r\n            onSubmit: false,\r\n            IsLoading: true,\r\n            errors: {},\r\n            fields: {},\r\n            showDescriptionOne: false,\r\n            showDescriptionTwo: false,\r\n            showDescriptionThree: false,\r\n\r\n        };\r\n         this.QuestionOneAnswer = [[\"Always\", \"3_Always\"], [\"Mostly\", \"3_Mostly\"], [\"Sometimes\", \"3_Sometimes\"], [\"Never\", \"3_Never\"]]   \r\n         this.QuestionTwoAnswer = [[\"Always\", \"4_Always\"], [\"Mostly\", \"4_Mostly\"], [\"Sometimes\", \"4_Sometimes\"], [\"Never\", \"4_Never\"]]   \r\n         this.QuestionThreeAnswer = [[\"Very satisfied\", \"5_Verysatisfied\"], [\"Satisfied\", \"5_Satisfied\"], [\"Dissatisfied\", \"5_Dissatisfied\"], [\"Very dissatisfied\", \"5_Verydissatisfied\"]]    \r\n         //  this.QuestionOne = [[\"Do you get required support and help when needed? \", \"Q1\"]]    \r\n        //  this.QuestionTwo = [[\"Are you listened to and treated fairly at work?\", \"Q2\"]]    \r\n        //  this.QuestionThree = [[\"Overall, are you satisfied or dissatisfied with the company?\", \"Q3\"]]    \r\n\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        debugger;\r\n        if (!nextProps.CommonData.isError) {\r\n          this.setState({ items: nextProps.CommonData['SurveyResponse'] });\r\n          this.setState({ store: nextProps.CommonData });\r\n         \r\n        }\r\n    }\r\n\r\n    componentDidMount() {debugger;\r\n        window.scrollTo(0, 0);\r\n        this.UserList();\r\n        this.props.GetCommonData({\r\n            root: 'AesDecryption',\r\n            uid: getUrlParameter(\"uid\"),\r\n        }, function (results) {\r\n            if (results.data.status == 200) {\r\n            this.setState({ uid: results.data.data }, () =>\r\n            this.CheckSurveyResponseFilled());\r\n        }else{\r\n            this.setState({IsLoading: false, validUser : false})\r\n        }\r\n        }.bind(this));\r\n    }\r\n\r\n    CheckSurveyResponseFilled(){debugger;\r\n        let uid = this.state.uid;\r\n        this.props.GetCommonData({\r\n            root: 'SurveyResponse',\r\n            c: \"L\",\r\n            con: [{ \"UserId\": uid }],\r\n          }, function (result) {\r\n            debugger;\r\n            if(result.data && result.data.data[0].length > 0){\r\n            this.setState({ surveyFormDisplay: false , IsLoading : false});\r\n            }else{\r\n            this.setState({ surveyFormDisplay: true, IsLoading : false });    \r\n            }\r\n\r\n          }.bind(this));\r\n\r\n    }\r\n\r\n    fnDatatableCol(columnlist) {\r\n\r\n        var columns = fnDatatableCol(columnlist);\r\n        return columns;\r\n    }\r\n\r\n    UserList() {debugger;\r\n        const user = getuser();\r\n        var managerid = user.UserID;\r\n        this.setState({ManagerId : managerid});\r\n    }\r\n\r\n    setAnswerOne(e) {\r\n        console.log(e.target.value);\r\n        this.setState({answerone : e.target.value, showDescriptionOne: true});\r\n    }\r\n    setAnswerTwo(e) {\r\n        console.log(e.target.value);\r\n        this.setState({answertwo : e.target.value, showDescriptionTwo: true});\r\n    } \r\n    setAnswerThree(e) {\r\n        console.log(e.target.value);\r\n        this.setState({answerthree : e.target.value, showDescriptionThree: true});\r\n    }\r\n    description(e){\r\n        \r\n    }\r\n\r\n    handleChange(field, e){         \r\n        let fields = this.state.fields;\r\n        fields[field] = e.target.value;        \r\n        this.setState({fields});\r\n    }\r\n\r\n    handleValidation(){\r\n        let fields = this.state.fields;\r\n        let errors = {};\r\n        let formIsValid = true;\r\n\r\n        if(!fields[\"bu\"]){\r\n           formIsValid = false;\r\n           errors[\"bu\"] = \"This field is required\";\r\n        }\r\n   \r\n        if(!fields[\"supervisor\"]){\r\n           formIsValid = false;\r\n           errors[\"supervisor\"] = \"This field is required\";\r\n        }\r\n  \r\n       this.setState({errors: errors});\r\n       return formIsValid;\r\n   }\r\n    \r\n\r\n    onFormSubmit(e){\r\n        e.preventDefault();\r\n\r\n        //if(this.handleValidation()){\r\n          // Create an object of formData \r\n          const formData = new FormData(); \r\n          console.log(formData);\r\n          debugger;\r\n          const qus = document.querySelectorAll('.questions');\r\n          var countChecked = document.querySelectorAll('input:checked').length;\r\n            console.log(qus.length);\r\n          var countQuestions =  qus.length; \r\n            if(countChecked != countQuestions){\r\n                toast(\"Please enter required fields\", { type: 'error' });\r\n                return; \r\n            }\r\n            alert('Form submitted successfully');\r\n\r\n            for (const qu of qus) {\r\n                console.log(qu);\r\n               console.log(qu.id);\r\n               const desc = document.getElementsByName(qu.id+'_desc');\r\n               console.log(document.querySelectorAll('input[name='+qu.id+'_desc]'));\r\n                    console.log(desc);\r\n                    var description = '';\r\n                    if(desc.length > 0){\r\n                        var description = document.querySelectorAll('textarea[name='+qu.id+'_desc]')[0].value;\r\n                        console.log(description);\r\n                    }\r\n               const radio = document.querySelectorAll('input[name='+qu.id+']:checked');\r\n\r\n                console.log(radio[0].defaultValue);\r\n                var selectedVal = radio[0].defaultValue;\r\n                var qaarray = selectedVal.split('_');\r\n                var json = { 'AnswerText': qaarray[1], \r\n                    'CreatedOn': moment().format(\"YYYY-MM-DD HH:mm:ss\"),\r\n                    'SurveyId': 1,\r\n                    'UserId': this.state.uid,\r\n                    'QuestionId': qaarray[0],\r\n                    'Description': description,\r\n                    'AnswerId': 1,\r\n                    'IsActive':1,\r\n               \r\n                }\r\n        \r\n                  this.props.InsertData({\r\n                    root: \"SurveyResponse\",\r\n                    body: json,\r\n                    c: \"L\",\r\n                  });\r\n            }\r\n\r\n            // const surveyTextField = document.querySelectorAll('.surveytextfield');\r\n            // var i = 1;\r\n            // for (const tf of surveyTextField) {debugger;\r\n            //     var textval = document.querySelectorAll('input[name='+tf.id+']')[0].value;\r\n            //     console.log(textval);\r\n            //     var json = { 'AnswerText': textval, \r\n            //     'CreatedOn': moment().format(\"YYYY-MM-DD HH:mm:ss\"),\r\n            //     'SurveyId': 1,\r\n            //     'UserId': this.state.uid,\r\n            //     'QuestionId': i,\r\n            //     'Description': '',\r\n            //     'AnswerId': 1,\r\n            //     'IsActive':1,\r\n           \r\n            // }\r\n    \r\n            //   this.props.InsertData({\r\n            //     root: \"SurveyResponse\",\r\n            //     body: json,\r\n            //     c: \"L\",\r\n            //   });\r\n            //   i++;\r\n            // }\r\n            this.setState({onSubmit : true, surveyFormDisplay: false, validUser: false });\r\n\r\n        // }else{\r\n        //     alert('Form not submitted');\r\n        // }\r\n\r\n         \r\n    }\r\n\r\n    renderSurveyForm(){\r\n        var html = '';\r\n        if(this.state.IsLoading){\r\n            html = (<i class=\"fa fa-spinner fa-spin\"></i>);\r\n        }else{\r\n        if (this.state.surveyFormDisplay && this.state.validUser){\r\n        var html = (  \r\n        <form ref=\"form\" name=\"surveyform\" onSubmit={this.onFormSubmit.bind(this)}>\r\n          {/* <Col md={6} className=\"pull-left mt-4\">\r\n          <Form.Label>BU <span>*</span></Form.Label>\r\n          <Form.Control type=\"text\" name=\"bu\" className=\"surveytextfield\" id=\"bu\" onChange={this.handleChange.bind(this, \"bu\")} />\r\n          <span style={{color: \"red\"}}>{this.state.errors[\"bu\"]}</span>\r\n          </Col>\r\n          <Col md={6} className=\"pull-left mt-4\">\r\n          <Form.Label>Supervisor's Name <span>*</span></Form.Label>\r\n          <Form.Control type=\"text\" name=\"supervisor\" className=\"surveytextfield\" id=\"supervisor\" onChange={this.handleChange.bind(this, \"supervisor\")} />\r\n          <span style={{color: \"red\"}}>{this.state.errors[\"supervisor\"]}</span>\r\n          </Col> */}\r\n          <Col md={12} className=\"pull-left mt-4\">\r\n            <Form.Text className=\"questions\" id=\"question1\">\r\n                  <p class=\"survey-text mb-3\">How often do you get the required support and help from your manager? <span>*</span></p>\r\n            </Form.Text>\r\n            <RadioButton \r\n              name= \"question1\"\r\n              changed={ this.setAnswerOne.bind(this) } \r\n              items = {this.QuestionOneAnswer}\r\n              isSelected={ this.state.answerone } \r\n            />\r\n           </Col>\r\n           { this.state.showDescriptionOne ? ( <Col md={12} className=\"pull-left mt-4\">\r\n          <Form.Label>Description </Form.Label>\r\n          <Form.Control as=\"textarea\" rows={3} id=\"question1_desc\" name=\"question1_desc\" placeholder=\"Please tell us some examples of when you were not able to get the desired support, if any\" onChange={this.description.bind(this)} />\r\n          </Col>) : null }\r\n         \r\n          <Col md={12} className=\"pull-left mt-4\">\r\n          <Form.Text className=\"questions\" id=\"question2\">\r\n                  <p class=\"survey-text mb-3\">Do you feel you are listened to and treated fairly at work? <span>*</span></p>\r\n          </Form.Text>\r\n           <RadioButton \r\n              name= \"question2\"\r\n              changed={ this.setAnswerTwo.bind(this) } \r\n              items = {this.QuestionTwoAnswer}\r\n              isSelected={ this.state.answertwo } \r\n            />\r\n            </Col>\r\n            { this.state.showDescriptionTwo ? (<Col md={12} className=\"pull-left mt-4\">\r\n          <Form.Label>Description </Form.Label>\r\n          <Form.Control as=\"textarea\" rows={3} id=\"question2_desc\" placeholder=\"Please tell us some examples of when you felt you were not being treated fairly, if any\" name=\"question2_desc\" onChange={this.description.bind(this)} />                            \r\n          </Col>) : null }\r\n            \r\n          <Col md={12} className=\"pull-left mt-4\">\r\n          <Form.Text className=\"questions\" id=\"question3\">\r\n                  <p class=\"survey-text mb-3\">Please rate your satisfaction with the company...<span>*</span></p>\r\n          </Form.Text>\r\n          <RadioButton \r\n            name= \"question3\"\r\n            changed={ this.setAnswerThree.bind(this) } \r\n            items = {this.QuestionThreeAnswer}\r\n            isSelected={ this.state.answerthree } \r\n           />\r\n           </Col>\r\n           { this.state.showDescriptionThree ? ( <Col md={12} className=\"pull-left mt-4\">\r\n          <Form.Label>Description </Form.Label>\r\n          <Form.Control as=\"textarea\" rows={3} id=\"question3_desc\" placeholder=\"Please let us know reason(s) for your dissatisfaction, if any\" name=\"question3_desc\" onChange={this.description.bind(this)} />                            \r\n          </Col>) : null }\r\n         \r\n            <Col md={4} className=\"pull-left mt-4 offset-md-4 mb-4\">\r\n            <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\r\n          </Col>\r\n         </form>);\r\n        }else if(this.state.onSubmit){\r\n            var html = (<p class=\"survey-response success\">Your response is submitted successfully</p>);\r\n        }else if((! this.state.validUser)){\r\n            var html = ( <p class=\"survey-response invalid\">Invalid Action</p>);\r\n        }else if(!this.state.surveyFormDisplay && this.state.validUser){\r\n            var html = ( <p class=\"survey-response info\">Your survey response is already recorded</p>);\r\n        }\r\n    }\r\n        return html;\r\n    }\r\n\r\n    render() {\r\n        const { Error, UserInfo } = this.state;\r\n        \r\n        return (\r\n            <>\r\n                <div className=\"content\">\r\n                    <ToastContainer />\r\n                    <Row>\r\n                        <Col>\r\n                            <Card className=\"surveyform col-md-6 col-xs-12\"> \r\n                            <CardHeader>   \r\n                            <Col md={6} className=\"offset-md-3 mt-3 text-center\">\r\n                                <h3>Feedback Survey</h3>\r\n                            </Col> \r\n                            </CardHeader>\r\n                              <CardBody>\r\n                              { this.renderSurveyForm() }\r\n                              {/* <If condition={this.state.surveyFormDisplay && this.state.validUser}>\r\n                                    <Then>\r\n                            \r\n                              </Then>\r\n                                </If>\r\n                                <If condition={(! this.state.validUser)}>\r\n                                    <Then>\r\n                                        <p>Invalid User</p>\r\n                                    </Then>\r\n                                </If>\r\n                                <If condition={(!this.state.surveyFormDisplay && this.state.validUser)}>\r\n                                    <Then>\r\n                                        <p>Your survey response already recorded</p>\r\n                                    </Then>\r\n                                </If> */}\r\n                              </CardBody>  \r\n\r\n                            </Card>\r\n                      \r\n                        </Col>\r\n                    </Row>\r\n                 </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        CommonData: state.CommonData\r\n    };\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    {\r\n        GetCommonData,\r\n        GetMySqlData,\r\n        InsertData,\r\n    }\r\n)(PbSurvey);","\r\nimport React from \"react\";\r\nimport { Alert } from 'react-bootstrap';\r\n\r\n\r\nclass AlertBox extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            show: this.props.show\r\n        }\r\n    }\r\n    componentDidUpdate() {\r\n\r\n    }\r\n    componentWillReceiveProps(nextProps) {\r\n        this.setState({ show: nextProps.show });\r\n        if (nextProps.show) {\r\n            setTimeout(function () {\r\n                this.setState({ show: false });\r\n            }.bind(this), 5000);\r\n        }\r\n    }\r\n    render() {\r\n        if (this.state.show) {\r\n            return (\r\n                <Alert variant={this.props.variant}>\r\n                    {this.props.body}\r\n                </Alert>\r\n            );\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n}\r\n\r\nexport default AlertBox;\r\n","import axios from \"axios\";\nimport config from \"../../config.jsx\";\nimport constants from \"../../Constants/Constants.jsx\";\n\nconst GetCommonData_fetched = Todos => {\n\n  if (Todos.dataToSend.state && Todos.dataToSend.statename) {\n    localStorage.setItem(Todos.dataToSend.statename, JSON.stringify(Todos.data));\n  }\n\n  return {\n    type: constants.GET_COMMON_SUCCESS,\n    payload: Todos.data,\n    root: Todos.dataToSend.root\n  };\n};\n\nconst GetCommonData_fetch_error = error => {\n  return {\n    type: constants.GET_COMMON_FAIL,\n    payload: error\n  };\n};\n\nexport const GetMySqlData = (dataToSend,cb) => {\n\n  if (dataToSend.data != null || dataToSend.data != undefined) {\n    return function (dispatch, getState) {\n      dispatch(GetCommonData_fetched({ data: dataToSend.data, dataToSend: dataToSend }));\n    };\n  }\n  try {\n    if ((dataToSend.state && localStorage.getItem(dataToSend.statename)) || localStorage.getItem(dataToSend.statename)) {\n\n      return function (dispatch, getState) {\n        let data = JSON.parse(localStorage.getItem(dataToSend.statename))\n        dispatch(GetCommonData_fetched({ data: data, dataToSend: dataToSend }));\n      }\n    }\n  }\n  catch (e) {\n\n  }\n\n\n  return function (dispatch, getState) {\n    axios\n      .get(config.api.base_url + \"/mydb/list/\", {\n        params: dataToSend\n      })\n      .then(data => {\n        if (dataToSend.state && dataToSend.statename) {\n          localStorage.setItem(dataToSend.statename, JSON.stringify(data.data.data));\n        }\n        if (cb) {\n          cb(data);\n        }\n        dispatch(GetCommonData_fetched({ data: data.data.data[0], dataToSend: dataToSend }));\n      })\n      .catch(error => {\n        dispatch(GetCommonData_fetch_error(error, dataToSend));\n      });\n  };\n};\n\n\n\n\nconst InsertData_fetched = Todos => {\n\n  return {\n    type: constants.INSERT_COMMON_SUCCESS,\n    payload: Todos.data\n  };\n};\n\nconst InsertData_fetch_error = error => {\n  return {\n    type: constants.INSERT_COMMON_FAIL,\n    payload: error\n  };\n};\n\nexport const InsertData = (dataToSend, cb) => {\n  return function (dispatch, getState) {\n    axios\n      .post(config.api.base_url + \"/mydb/insert/\", {\n        data: dataToSend\n      })\n      .then(data => {\n        if (cb) {\n          cb(data);\n        }\n        dispatch(InsertData_fetched({ data: data.data }));\n      })\n      .catch(error => {\n        dispatch(InsertData_fetch_error(error));\n      });\n  };\n};\n\n\nconst UpdateData_fetched = Todos => {\n\n  return {\n    type: constants.UPDATE_COMMON_SUCCESS,\n    payload: Todos.data\n  };\n};\n\nconst UpdateData_fetch_error = error => {\n  return {\n    type: constants.UPDATE_COMMON_FAIL,\n    payload: error\n  };\n};\n\nexport const UpdateData = (dataToSend, cb) => {\n\n  return function (dispatch, getState) {\n    axios\n      .post(config.api.base_url + \"/mydb/update/\", {\n        data: dataToSend\n      })\n      .then(data => {\n        if (cb) {\n          cb(data);\n        }\n        dispatch(UpdateData_fetched({ data: data.data }));\n      })\n      .catch(error => {\n        dispatch(UpdateData_fetch_error(error));\n      });\n  };\n};\n\n\n\n\nexport const GetDataDirect = (dataToSend, cb) => {\n\n  try {\n    if ((dataToSend.state && localStorage.getItem(dataToSend.statename)) || localStorage.getItem(dataToSend.statename)) {\n\n      let data = JSON.parse(localStorage.getItem(dataToSend.statename));\n      cb(data);\n      return;\n    }\n  }\n  catch (e) {\n\n  }\n  //return function (dispatch, getState) {\n  axios\n    .get(config.api.base_url + \"/mydb/list/\", {\n      params: dataToSend\n    })\n    .then(data => {\n      if (dataToSend.state && dataToSend.statename) {\n        localStorage.setItem(dataToSend.statename, JSON.stringify(data.data.data));\n      }\n      cb(data.data.data);\n\n      //dispatch(GetCommonData_fetched({ data: data.data.data[0], dataToSend: dataToSend }));\n    })\n    .catch(error => {\n      //dispatch(GetCommonData_fetch_error(error, dataToSend));\n    });\n  //};\n\n};\n\nexport const GetRealTimeAgentData = (manager, context, cb) => {\n\n  let url = config.api.realtimeurl + \"RealTimeAgentStatus?managercode=\" + (context == \"\" ? manager : \"\") + \"&context=\" + context;\n\n  axios\n    .get(url)\n    .then(data => {\n\n      cb(data);\n      //dispatch(GetCommonData_fetched({ data: data.data.data[0], dataToSend: dataToSend }));\n    })\n    .catch(error => {\n      //dispatch(GetCommonData_fetch_error(error, dataToSend));\n    });\n  //};\n\n};\n\nexport const GetRealTimeTotalData = (context, cb) => {\n\n  let url = config.api.realtimeurl + \"RealTimeData?context=\" + context;\n\n  axios\n    .get(url)\n    .then(data => {\n\n      cb(data);\n      //dispatch(GetCommonData_fetched({ data: data.data.data[0], dataToSend: dataToSend }));\n    })\n    .catch(error => {\n      //dispatch(GetCommonData_fetch_error(error, dataToSend));\n    });\n  //};\n\n};\n\n\nexport const SendOTP = (dataToSend, cb) => {\n  let url = config.api.SendOTP;\n  const headers = {\n    'Content-Type': 'application/json',\n    'Authorization': 'cG9saWN5 YmF6YWFy'\n  }\n  axios\n    .post(url,\n      dataToSend\n      , {\n        headers: headers\n      })\n    .then(data => {\n\n      cb(data);\n    })\n    .catch(error => {\n    });\n};\n\nexport const ValidateOTP = (dataToSend, cb) => {\n  let url = config.api.ValidateOTP;\n  const headers = {\n    'Content-Type': 'application/json',\n    'Authorization': 'cG9saWN5 YmF6YWFy'\n  }\n  axios\n    .post(url,\n      dataToSend\n      , {\n        headers: headers\n      })\n    .then(data => {\n\n      cb(data);\n    })\n    .catch(error => {\n    });\n};\n\nexport const GetComunicationData = (dataToSend, cb) => {\n\n  return function (dispatch, getState) {\n    axios\n      .get(config.api.ServiceAPI + dataToSend.root, {\n        params: dataToSend.data\n      })\n      .then(data => {\n        cb(data);\n        //dispatch(GetCommonData_fetched({ data: data, dataToSend: dataToSend }));\n      })\n      .catch(error => {\n        dispatch(GetCommonData_fetch_error(error, dataToSend));\n      });\n  };\n};","\r\nimport React, { Suspense } from 'react';\r\n\r\nimport {\r\n    GetCommonData, GetCommonspData, GetDataDirect\r\n} from \"../../store/actions/CommonAction\";\r\nimport { getUrlParameter, getuser } from '../../utility/utility.jsx';\r\n\r\n\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport 'react-checkbox-tree/lib/react-checkbox-tree.css';\r\nimport CheckboxTree from 'react-checkbox-tree';\r\n\r\n\r\nclass ManagerHierarchy extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            nodes: [],\r\n            checked: [],\r\n            expanded: [],\r\n        }\r\n        //this.onExpand = this.onExpand.bind(this);\r\n    }\r\n    componentDidMount() {\r\n\r\n        let UserId = getuser().RoleId == 2 ? 75 : getuser().UserID;\r\n\r\n        GetDataDirect({\r\n            root: \"Hierarchy\",\r\n            ManagerId: UserId,\r\n            statename: \"Hierarchy-\" + UserId,\r\n            value: this.props.value,\r\n            state: true\r\n        }, function (result) {\r\n\r\n            let str = JSON.stringify(result);\r\n            var res = str.replace(/UserName/g, \"label\");\r\n            res = res.replace(this.props.value, \"value\");\r\n\r\n            this.setState({ nodes: JSON.parse(res) });\r\n        }.bind(this));\r\n    }\r\n    componentWillReceiveProps(nextProps) {\r\n\r\n    }\r\n\r\n\r\n    onButtonClick() {\r\n        this.props.handleShow({\r\n            SelectedSupervisors: this.state.checked\r\n        });\r\n        this.forceUpdate();\r\n    }\r\n    onMouseEnter(e) {\r\n        document.getElementById(\"floating\").style.right = 0\r\n        document.getElementById(\"handle\").style.right = \"395px\"\r\n        //e.target.style.right = 0;\r\n    }\r\n    onMouseOut(e) {\r\n        setTimeout(function () {\r\n            document.getElementById(\"floating\").style.right = \"-400px\"\r\n            document.getElementById(\"handle\").style.right = \"-15px\"\r\n        }, 700);\r\n\r\n        //e.target.style.right = \"-350px\";\r\n    }\r\n    RemoveChecked(checkeditem) {\r\n        const { checked } = this.state;\r\n        let index = checked.indexOf(checkeditem);\r\n        if (index > -1) {\r\n            checked.splice(index, 1);\r\n        }\r\n        this.setState(checked);\r\n    }\r\n    onClick() {\r\n\r\n    }\r\n    render() {\r\n        const { nodes, checked } = this.state;\r\n        if (nodes.length == 0) {\r\n            return null;\r\n        }\r\n        return (\r\n\r\n\r\n            <div id=\"floating\" className=\"floating\" onMouseLeave={this.onMouseOut}>\r\n\r\n                <Row >\r\n                    <Col md=\"8\"><div id=\"handle\" className=\"handle\" onClick={this.onMouseEnter}>Filter</div></Col>\r\n                    <Col md=\"4\"><input type=\"button\" className=\"btn btn-primary\" onClick={this.onButtonClick.bind(this)} value=\"Show\" /></Col>\r\n                </Row>\r\n\r\n                <Row>\r\n                    <Col>\r\n\r\n                        <div className=\"managers\">\r\n                            <CheckboxTree\r\n                                nodes={nodes}\r\n                                checked={this.state.checked}\r\n                                expanded={this.state.expanded}\r\n                                checkModel=\"all\"\r\n                                name=\"UserName\"\r\n                                showNodeIcon={false}\r\n                                onCheck={checked => this.setState({ checked })}\r\n                                onExpand={expanded => this.setState({ expanded })}\r\n                                showExpandAll={true}\r\n                            />\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n\r\n\r\n\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default ManagerHierarchy;\r\n","\r\nimport React from \"react\";\r\nimport { Form } from 'react-bootstrap';\r\nimport { connect } from \"react-redux\";\r\n// reactstrap components\r\n\r\nimport {\r\n    GetMySqlData\r\n} from \"../../store/actions/CommonMysqlAction\";\r\nclass DropDownListMysql extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            items: [],\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        if (this.state.items && this.state.items.length === 0) {\r\n            this.CallApi();\r\n        }\r\n    }\r\n    componentWillReceiveProps(nextProps) {\r\n        \r\n        // if (nextProps.col.config.rebind) {\r\n            \r\n        // }\r\n\r\n        if (!nextProps.CommonData.isError) {\r\n            //debugger;\r\n            if (nextProps.CommonData[this.props.col.config.root]) {\r\n                let str = JSON.stringify(nextProps.CommonData[this.props.col.config.root]);\r\n                var res = str.replace(this.props.col.config.Idfield, \"Id\");\r\n                res = res.replace(this.props.col.config.Displayfield, \"Display\");\r\n\r\n                this.setState({ items: JSON.parse(res) });\r\n            }\r\n        }\r\n    }\r\n\r\n    componentWillUpdate(){\r\n        //this.CallApi();\r\n    }\r\n\r\n    CallApi() {\r\n\r\n        this.props.GetMySqlData({\r\n            limit: 10,\r\n            skip: 0,\r\n            root: this.props.col.config.root,\r\n            cols: this.props.col.config.cols,\r\n            con: this.props.col.config.con,\r\n            data: this.props.col.config.data,\r\n            statename: this.props.col.config.statename,\r\n            state: this.props.col.config.state\r\n        });\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        let { items } = this.state;\r\n        const { value, onChange, visible } = this.props;\r\n\r\n        if (!items) {\r\n            items = [];\r\n        }\r\n        if (visible == false) {\r\n            return null;\r\n        }\r\n        return (\r\n\r\n            <div>\r\n\r\n                <Form.Control as=\"select\" disabled={this.props.disabled} value={value} name={this.props.col.name} onChange={onChange}>\r\n                    <option key={0} value={0}>{this.props.firstoption ? this.props.firstoption : \"Select\"}</option>\r\n                    {items.map(item => (\r\n                        <option key={item.Id} value={item.Id}>{item.Display}</option>\r\n                    ))}\r\n\r\n                </Form.Control>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        CommonData: state.CommonData\r\n    };\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    {\r\n        GetMySqlData\r\n    }\r\n)(DropDownListMysql);\r\n\r\n","\r\nimport React from \"react\";\r\nimport { Form } from 'react-bootstrap';\r\nimport { connect } from \"react-redux\";\r\n// reactstrap components\r\n\r\nimport {\r\n    GetCommonData\r\n} from \"../../store/actions/CommonAction\";\r\nclass DropDown extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            items: [],\r\n        }\r\n    }\r\n    componentDidMount() {\r\n    }\r\n    componentWillReceiveProps(nextProps) {\r\n        this.setState({ items: nextProps.items });\r\n\r\n    }\r\n\r\n    displayoption(item) {\r\n        return <option key={item.Id} value={item.Id}>{item.Display}</option>\r\n    }\r\n\r\n    render() {\r\n\r\n\r\n        let { value, onChange, visible, items } = this.props;\r\n        if (!items) {\r\n            items = [];\r\n        }\r\n        if (visible == false) {\r\n            return null;\r\n        }\r\n        return (\r\n\r\n            <div className=\"RadioButton\">\r\n                {\r\n                items.map(([text, value], i) => (\r\n                <div key={value+\"_\"+i }>\r\n                <input id={value+\"_\"+i} name={this.props.name} onChange={this.props.changed} value={value} type=\"radio\" checked={this.props.value ? this.props.value === value : this.props.isSelected === value} />\r\n                <label htmlFor={value+\"_\"+i}>{text}</label>\r\n                </div>\r\n                ))\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default DropDown;\r\n\r\n","\r\nimport React from \"react\";\r\nimport { Form } from 'react-bootstrap';\r\n\r\n// reactstrap components\r\nimport moment from 'moment';\r\n\r\nimport * as Datetime from 'react-datetime';\r\nimport 'react-datetime/css/react-datetime.css'\r\n\r\n\r\nimport { Row, Col } from 'react-bootstrap';\r\n\r\n\r\n\r\nclass Date extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleStartDateChange = this.handleStartDateChange.bind(this);\r\n        this.handleEndDateChange = this.handleEndDateChange.bind(this);\r\n\r\n        this.state = {\r\n            startdate: moment().format(\"YYYY-MM-DD\"),            \r\n        }\r\n    }\r\n    componentDidMount() {\r\n\r\n    }\r\n    componentWillReceiveProps(nextProps) {\r\n\r\n    }\r\n\r\n    handleStartDateChange = (e, props) => {\r\n        if (e._isAMomentObject) {\r\n            this.props.onStartDate(e.format(\"YYYY-MM-DD\"));\r\n            this.setState({ startdate: e.format(\"YYYY-MM-DD\"), enddate: e.add(30, 'days').format(\"YYYY-MM-DD\") }, function () {\r\n            });\r\n        }\r\n    }\r\n\r\n    handleEndDateChange = (e, props) => {\r\n        if (e._isAMomentObject) {\r\n            this.props.onEndDate(e.format(\"YYYY-MM-DD\"));\r\n            this.setState({ enddate: e.format(\"YYYY-MM-DD\") }, function () {\r\n                //this.fetchCallBackData();\r\n            });\r\n        }\r\n    }\r\n    validation = (currentDate) => {\r\n        return currentDate.isBefore(moment());\r\n    };\r\n\r\n    validationEndDate = (currentDate) => {\r\n        \r\n\r\n        if (!currentDate.isBefore(moment(this.state.enddate))) {\r\n            return false;\r\n        }\r\n\r\n        if(currentDate.isBefore(moment(this.state.startdate))) {\r\n            return false;\r\n        }\r\n        \r\n        return true;\r\n        \r\n    };\r\n\r\n    getSelectedDateRange() {\r\n        return {\r\n            startdate: this.state.startdate,\r\n            enddate: this.state.enddate\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n\r\n        let { visible } = this.props;\r\n\r\n        if (visible == false) {\r\n            return null;\r\n        }\r\n        return (\r\n\r\n            <>\r\n                    <Form.Group controlId=\"startdate_field\">\r\n                        <Datetime value={new Date()}\r\n                            dateFormat=\"YYYY-MM-DD\"\r\n                            value={this.state.startdate}\r\n                            isValidDate={this.validation.bind(this)}\r\n                            onChange={moment => this.handleStartDateChange(moment)}\r\n                            utc={true}\r\n                            timeFormat={false}\r\n                            className=\"form-group\"\r\n                        />\r\n                    </Form.Group>\r\n            </>\r\n\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default Date;\r\n\r\n","import React from \"react\";\r\nimport {\r\n  GetCommonData, GetCommonspData, GetRealTimeAgentData, GetRealTimeTotalData\r\n} from \"../../store/actions/CommonAction\";\r\nimport { hhmmss, getuser } from '../../utility/utility.jsx';\r\nimport { connect } from \"react-redux\";\r\nimport DataTable from 'react-data-table-component';\r\nimport ManagerHierarchy from '../Common/ManagerHierarchy';\r\nimport Moment from 'react-moment';\r\nimport { Web } from \"sip.js\";\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n// reactstrap components\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  Row,\r\n  Col\r\n} from \"reactstrap\";\r\nimport { Form } from 'react-bootstrap';\r\n\r\nclass RealTimePanel extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      PageTitle: \"RealTime Panel\",\r\n      AgentData: [],\r\n      TotalData: [],\r\n      items: [],\r\n      key: \"ALL\",\r\n      onBarge: false,\r\n      SelectedSupervisors: [],\r\n      winactive: 0,\r\n      BargeWith: \"\"\r\n    };\r\n    this.handleShow = this.handleShow.bind(this);\r\n    this.statuschange = this.statuschange.bind(this);\r\n    this._handleKeyDown = this._handleKeyDown.bind(this);\r\n    //this.bargecall = this.bargecall.bind(this);\r\n    this.userAgent = null;\r\n    this.winactive = 0;\r\n    this.schdular = null;\r\n    this.columnlist = [\r\n      {\r\n        name: \"Barging\",\r\n        selector: \"Barging\",\r\n        sortable: true,\r\n        width: \"80px\",\r\n        cell: row =>\r\n          <div className={row.Status == \"BUSY\" ? \"\" : \"hide\"} >\r\n\r\n            <button onClick={(e) => this.bargecall(e, row)} className={row.Barge ? \"hide\" : \"show\"}><i className=\"fa fa-volume-up\" aria-hidden=\"true\"></i></button>\r\n\r\n\r\n          </div>\r\n      },\r\n      {\r\n        name: \"Agent Code\",\r\n        selector: \"AgentCode\",\r\n\r\n        sortable: true,\r\n      },\r\n      {\r\n        name: \"Status\",\r\n        selector: \"Status\",\r\n        sortable: true,\r\n\r\n        cell: row => <div className={this.displayStatus(row) + \" RealtimeStatus\"}>{this.displayStatus(row)}</div>\r\n      },\r\n      {\r\n        name: \"Agent Name\",\r\n        selector: \"AgentName\",\r\n        sortable: true,\r\n      },\r\n      {\r\n        name: \"Call Type\",\r\n        selector: \"CallType\",\r\n      },\r\n      {\r\n        name: \"Lead Id\",\r\n        selector: \"LeadId\",\r\n        sortable: true,\r\n      },\r\n      {\r\n        name: \"D.C.\",\r\n        selector: \"CallingCompany\",\r\n\r\n        sortable: true,\r\n      },\r\n      {\r\n        name: \"DIDNo\",\r\n        selector: \"DIDNo\",\r\n\r\n        sortable: true,\r\n      },\r\n      // {\r\n      //   name: \"Asterisk_Url\",\r\n      //   selector: \"Asterisk_Url\",\r\n      //   width: \"120px\",\r\n      //   sortable: true,\r\n      // },\r\n\r\n      // {\r\n      //   name: \"Last Updated On\",\r\n      //   selector: \"LastUpdatedOn\",\r\n      //   width: \"130px\",\r\n      //   sortable: true,\r\n      //   cell: row => <div className={row.AgentCode}>{row.LastUpdatedOn ? <Moment format=\"HH:mm:ss A\">{row.LastUpdatedOn}</Moment> : \"N.A\"}</div>\r\n      // },\r\n      {\r\n        name: \"Since\",\r\n        selector: \"LastUpdatedOn\",\r\n        sortable: true,\r\n        width: \"130px\",\r\n        cell: row => <div className={row.AgentCode}>{row.LastUpdatedOn ? <Moment utc={true} from={row.ServerTime}>{row.LastUpdatedOn}</Moment> : \"N.A\"}</div>\r\n      },\r\n      {\r\n        name: \"T Calls\",\r\n        selector: \"TotalCalls\",\r\n        width: \"70px\",\r\n        sortable: true,\r\n      },\r\n      {\r\n        name: \"U Dials\",\r\n        selector: \"UniqueDials\",\r\n        width: \"70px\",\r\n        sortable: true,\r\n      },\r\n      {\r\n        name: \"C Dials\",\r\n        selector: \"ConnectedDials\",\r\n        width: \"70px\",\r\n        sortable: true,\r\n      },\r\n      {\r\n        name: \"T TalkTime\",\r\n        selector: \"TotalTalkTime\",\r\n        sortable: true,\r\n        width: \"130px\",\r\n        cell: row => hhmmss(row.TotalTalkTime),\r\n      },\r\n\r\n    ];\r\n\r\n\r\n  }\r\n\r\n  componentDidMount() {\r\n\r\n    const user = getuser();\r\n    this.setState({ SelectedSupervisors: [this.props.m] }, function () {\r\n      this.UserList();\r\n    }.bind(this));\r\n\r\n    if (this.schdular == null) {\r\n      this.schdular = setInterval(function () {\r\n        //if (!this.state.onBarge) {\r\n        //if ((new Date()).getHours() >= 21 || (new Date()).getHours() < 9) {\r\n        if (this.state.winactive == 1 || document.hasFocus()) {\r\n          this.UserList();\r\n          //this.totalList();\r\n        }\r\n        // }\r\n        // else {\r\n        //   this.UserList();\r\n        //   this.totalList();\r\n        // }\r\n        //}\r\n      }.bind(this), 2500)\r\n\r\n      window.addEventListener(\"message\", function (event) {\r\n        if (event.data.type == \"checkactive\") {\r\n          this.setState({ winactive: event.data.winactive })\r\n          this.winactive = event.data.winactive;\r\n        }\r\n      }.bind(this));\r\n    }\r\n  }\r\n\r\n  totalList() {\r\n    let context = this.props.c;\r\n    if (context != \"\") {\r\n      GetRealTimeTotalData(context, function (results) {\r\n        this.setState({ TotalData: results.data });\r\n      }.bind(this));\r\n    }\r\n  }\r\n\r\n  UserList() {\r\n    let managerid = this.props.m;\r\n    let context = this.props.c\r\n    const user = getuser();\r\n    if (this.state.SelectedSupervisors.length > 0) {\r\n      managerid = this.state.SelectedSupervisors.join()\r\n    }\r\n\r\n    if (managerid == \"\" && context == \"\") {\r\n      managerid = user.EmployeeId;\r\n      this.setState({ SelectedSupervisors: [managerid] });\r\n    }\r\n\r\n    GetRealTimeAgentData(managerid, context, function (results) {\r\n      this.setState({ AgentData: results.data });\r\n    }.bind(this));\r\n\r\n  }\r\n\r\n  handleShow(e) {\r\n    this.setState({ SelectedSupervisors: e.SelectedSupervisors });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    clearInterval(this.schdular);\r\n    if (this.userAgent != null)\r\n      this.userAgent.hangup();\r\n  }\r\n\r\n  displayStatus(row) {\r\n    // var diff = (new Date() - new Date(row.LastUpdatedOn)) / 1000;\r\n    // if (diff > 60 && row.Status == \"IDLE\") {\r\n    //   return \"Away\";\r\n    // } else return row.Status;\r\n    let BargeWithAgent = this.state.BargeWithAgent;\r\n    if (BargeWithAgent && BargeWithAgent.AgentCode == row.AgentCode && row.Status != \"BUSY\") {\r\n\r\n      // if (this.userAgent) {\r\n      //   this.userAgent.hangup();\r\n      //   this.userAgent = null;        \r\n      // }\r\n      // this.setState({ onBarge: false, BargeWith: \"\" });\r\n      this.unbargecall();\r\n    }\r\n    else if (BargeWithAgent && BargeWithAgent.AgentCode == row.AgentCode && row.Status == \"BUSY\") {\r\n      // if (this.userAgent == null) {\r\n      //   this.bargecall(null, BargeWithAgent);\r\n      // }\r\n    }\r\n    return row.Status.toUpperCase()\r\n  }\r\n\r\n  unbargecall(e) {\r\n    if (this.userAgent) {\r\n      this.userAgent.hangup();\r\n      this.userAgent = null;\r\n    }\r\n    this.setState({ onBarge: false, BargeWith: \"\", BargeWithAgent: null });\r\n  }\r\n\r\n\r\n  bargecall(e, row) {\r\n    try {\r\n      if (this.userAgent) {\r\n        this.userAgent.hangup();\r\n        this.userAgent = null\r\n      }\r\n      //if (!this.state.onBarge) {\r\n\r\n      let user = {\r\n        Display: getuser().EmployeeId,\r\n        User: getuser().EmployeeId,\r\n        Pass: getuser().EmployeeId,\r\n        Realm: row.Asterisk_Url,\r\n        WSServer: \"wss://\" + row.Asterisk_Url + \":8089/ws\"\r\n      }\r\n      this.LoginAsteriskServer(user, function () {\r\n        setTimeout(function () {\r\n\r\n          if (this.userAgent) {\r\n            let target = \"*222\" + row.AgentCode;\r\n            if (row.CallingCompany == \"WFH\" || row.CallingCompany == \"KNOWLARITY\") {\r\n              target = \"*222\" + row.DIDNo;\r\n            }\r\n\r\n            this.userAgent.call(target);\r\n          }\r\n          this.setState({ onBarge: true, BargeWith: row.AgentCode, BargeWithAgent: row });\r\n\r\n          // setTimeout(function () {\r\n          //   //this.forceUpdate();\r\n\r\n          // }.bind(this), 500);\r\n\r\n        }.bind(this), 1000);\r\n      }.bind(this), function () {\r\n        document.getElementById(row.AgentCode).checked = false;\r\n      }.bind(this));\r\n\r\n      // }\r\n      // else {\r\n      //   toast(\"Close previous call barging\", { type: 'error' });\r\n      //   e.target.checked = false;\r\n      //   return false;\r\n      // }\r\n\r\n\r\n    } catch (e) {\r\n\r\n    }\r\n\r\n  }\r\n\r\n  LoginAsteriskServer(user, onsuccess, onerror) {\r\n\r\n    if (user) {\r\n      var config = {\r\n        media: {\r\n          remote: {\r\n            //video: document.getElementById('remoteVideo'),\r\n            // This is necessary to do an audio/video call as opposed to just a video call\r\n            audio: document.getElementById('audioRemote')\r\n          }\r\n        },\r\n        ua: {\r\n          uri: user.User + '@' + user.Realm,\r\n          wsServers: [user.WSServer],\r\n          authorizationUser: user.Display,\r\n          password: user.Pass\r\n        }\r\n      }\r\n\r\n      if (Web) {\r\n        this.userAgent = new Web.Simple(config);\r\n\r\n        //let remoteElem = document.getElementById('audioRemote');\r\n        //let localElem = document.getElementById('audioLocal');\r\n        this.userAgent.on('connected', function (e) {\r\n          toast(\"Barging Connected!\", { type: 'success' });\r\n        });\r\n        this.userAgent.on('disconnected', function (e) {\r\n\r\n        });\r\n        this.userAgent.on('registered', function (e) {\r\n          if (onsuccess) {\r\n            onsuccess();\r\n          }\r\n\r\n        });\r\n        this.userAgent.on('registrationFailed', function (e) {\r\n          toast(\"Make sure your VPN is connected!\", { type: 'error' });\r\n        });\r\n        this.userAgent.on('unregistered', function (e) {\r\n          toast(\"Dialer issue please contact administrator!\", { type: 'error' });\r\n          if (onerror) {\r\n            onerror();\r\n          }\r\n\r\n        });\r\n        this.userAgent.on('userMediaFailed', function (e) {\r\n\r\n        });\r\n        this.userAgent.on('userMediaRequest', function (e) {\r\n\r\n        });\r\n        this.userAgent.on('userMedia', function (e) {\r\n\r\n        });\r\n        this.userAgent.on('invite', function (e) {\r\n\r\n        });\r\n        this.userAgent.on('addStream', function (stream) {\r\n\r\n        });\r\n        this.userAgent.on('ended', function (stream) {\r\n\r\n        });\r\n      }\r\n    }\r\n\r\n    setTimeout(function () {\r\n      if (this.userAgent && this.userAgent.ua && this.userAgent.ua.isRegistered() == false) {\r\n        toast(\"Make sure your VPN is connected!\", { type: 'error' });\r\n      }\r\n    }.bind(this), 10000);\r\n    return this.userAgent;\r\n  }\r\n  componentWillReceiveProps(nextProps) {\r\n    if (!nextProps.CommonData.isError) {\r\n\r\n    }\r\n  }\r\n\r\n  statuschange(e) {\r\n    this.setState({ key: e.target.value });\r\n\r\n  }\r\n\r\n  filterdata(e) {\r\n\r\n    let alldata = this.state.AgentData\r\n    let that = this;\r\n    if (this.state.key === \"ALL\") {\r\n      return alldata;\r\n    }\r\n    if (this.state.key === \"Away\") {\r\n      let AgentData = [];\r\n      alldata.forEach(element => {\r\n        var diff = (new Date() - new Date(element.LastUpdatedOn)) / 1000;\r\n        if (diff > 60 && element.Status === \"IDLE\") {\r\n          AgentData.push(element);\r\n        }\r\n      });\r\n      return AgentData;\r\n    }\r\n\r\n    let AgentData = [];\r\n    alldata.forEach(element => {\r\n      if (this.state.key.indexOf(element.Status) > -1) {\r\n        AgentData.push(element);\r\n      }\r\n    });\r\n    return AgentData;\r\n  }\r\n  _handleKeyDown(e) {\r\n\r\n    if (e.key === 'Enter') {\r\n      this.setState({ SelectedSupervisors: [e.target.value] });\r\n    }\r\n  }\r\n\r\n  _handleOnClick(e) {\r\n\r\n\r\n    this.setState({ SelectedSupervisors: [document.getElementById(\"EmpId\").value] });\r\n\r\n  }\r\n\r\n  renderTotalData() {\r\n    const context = this.props.c;\r\n    let TotalData = this.state.TotalData;\r\n    if (context != \"\") {\r\n      return <div>\r\n\r\n        <div className=\"totaldata\">\r\n          <Row></Row>\r\n          <Row>\r\n            <Col md={2}><span className=\"totaltext\">Context : {TotalData.context}</span></Col>\r\n            <Col md={2}><span className=\"totaltext\">Answered : {TotalData.answered}</span></Col>\r\n            <Col md={2}><span className=\"totaltext\">Unanswered : {TotalData.unanswered}</span></Col>\r\n            <Col md={2}><span className=\"totaltext\"># Agents : {TotalData.totalAgents}</span></Col>\r\n            <Col md={2}><span className=\"totaltext\">Waiting Calls : {TotalData.waitingCalls}</span></Col>\r\n            <Col md={2}><span className=\"totaltext\"># Avail. Agents : {TotalData.totalAvailableAgents}</span></Col>\r\n          </Row>\r\n        </div>\r\n        <br />\r\n      </div>\r\n    }\r\n    else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n\r\n  render() {\r\n    const columns = this.columnlist;\r\n    const totalcolumns = this.totalcolumnlist;\r\n    const data = this.filterdata();\r\n    const managerid = this.props.m;\r\n    const context = this.props.c;\r\n\r\n    const { items, PageTitle } = this.state;\r\n\r\n\r\n    return (\r\n      <>\r\n        <ToastContainer />\r\n        <Row>\r\n          <Col md=\"12\">\r\n            <Card>\r\n              <CardHeader>\r\n                <Row>\r\n                  <Col md={3}>\r\n                    <CardTitle tag=\"h4\">{PageTitle}</CardTitle>\r\n                  </Col>\r\n                  <Col md={4}>\r\n                    <CardTitle tag=\"h6\">{this.state.SelectedSupervisors.join()}</CardTitle>\r\n                  </Col>\r\n                  <Col md={3}>\r\n                    <div className=\"input-group\">\r\n\r\n                      <Form.Control required type=\"text\" name=\"EmpId\" id=\"EmpId\" onKeyDown={this._handleKeyDown} onChange={(e) => this.setState({ username: e.target.value })} value={this.state.username} placeholder={\"Enter Supervisor Id\"} />\r\n                      <div className=\"input-group-append\">\r\n                        <button onClick={(e) => this._handleOnClick(e)} className=\"btn btn-primary input-group-button\"><i className=\"fa fa-search\" aria-hidden=\"true\"></i></button>\r\n\r\n                      </div>\r\n                    </div>\r\n                  </Col>\r\n                  <Col md={2}>\r\n                    <div className=\"form-group\">\r\n                      <select className=\"form-control\" onChange={this.statuschange}>\r\n                        <option value=\"ALL\">ALL</option>\r\n                        <option value=\"IDLE\">IDLE</option>\r\n                        <option value=\"Away\">Away</option>\r\n                        <option value=\"BUSY\">BUSY</option>\r\n                        <option value=\"Lunch,Tea,Training,Meeting,Day End\">Break</option>\r\n                        <option value=\"PAUSE\">PAUSE</option>\r\n                        <option value=\"Auto Logout,LOGOUT\">LOGOUT</option>\r\n                      </select>\r\n                    </div>\r\n                    {\r\n                      (managerid == '' && context == '') ? <ManagerHierarchy handleShow={this.handleShow} value={/EmployeeId/g} ></ManagerHierarchy> : null\r\n                    }\r\n                    <button id=\"BargeWith\" onClick={(e) => this.unbargecall(e)} className={this.state.BargeWith == \"\" ? \"hide\" : \"btn btn-primary hangupwith show\"} ><i className=\"fa fa-volume-off\" aria-hidden=\"true\"></i> Hang Up With: {this.state.BargeWith}</button>\r\n                  </Col>\r\n\r\n                </Row>\r\n\r\n              </CardHeader>\r\n\r\n              <CardBody>\r\n                {/* {this.renderTotalData()} */}\r\n                <div className=\"statusdata\">\r\n                  <DataTable\r\n                    columns={columns}\r\n                    data={data}\r\n                    pagination={false}\r\n                    striped={true}\r\n                    noHeader={true}\r\n                    highlightOnHover\r\n                    dense\r\n\r\n                  />\r\n\r\n                </div>\r\n              </CardBody>\r\n\r\n            </Card>\r\n          </Col>\r\n          <audio id=\"audioRemote\"></audio>\r\n          <audio id=\"audioLocal\"></audio>\r\n        </Row>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    CommonData: state.CommonData\r\n  };\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    GetCommonData,\r\n    GetCommonspData\r\n  }\r\n)(RealTimePanel);\r\n\r\n\r\n\r\n\r\n","import React from \"react\";\nimport {\n  GetMySqlData\n} from \"../../store/actions/CommonMysqlAction\";\nimport {\n  GetCommonData, GetCommonspData, GetRealTimeAgentData, GetRealTimeTotalData, GetRealTimeQueueData, GetFileExists, \n  GetAwsRecordingUrl, GetRecordingName\n} from \"../../store/actions/CommonAction\";\nimport { getUrlParameter, hhmmss, getuser } from '../../utility/utility.jsx';\nimport { connect } from \"react-redux\";\nimport DataTable from 'react-data-table-component';\nimport ManagerHierarchy from '../Common/ManagerHierarchy';\nimport Moment from 'react-moment';\nimport moment from 'moment';\nimport { Web } from \"sip.js\";\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n// reactstrap components\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Table\n} from \"reactstrap\";\nimport { Form, Modal, Glyphicon } from 'react-bootstrap';\nimport { If, Then, Else } from 'react-if';\n\nclass RealTimePanelQueuewise extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      PageTitle: \"RealTime Panel\",\n      AgentData: [],\n      TotalData: [],\n      items: [],\n      key: \"ALL\",\n      onBarge: false,\n      SelectedSupervisors: [],\n      winactive: 0,\n      BargeWith: \"\",\n      queues: [],\n      QueueData: [],\n      MoreInfoData: [],\n      contextName: null,\n      showModal: false,\n      showMoreInfoModal: false,\n      addClass: \"fa fa-play-circle\",\n      queueServerIp: \"\",\n      clickedQueue : \"\",\n      wraptime: \"\",\n      wrapcomplete: false,\n    };\n    this.handleShow = this.handleShow.bind(this);\n    this.statuschange = this.statuschange.bind(this);\n    this._handleKeyDown = this._handleKeyDown.bind(this);\n    //this.bargecall = this.bargecall.bind(this);\n    this.userAgent = null;\n    this.winactive = 0;\n    this.schdular = null;\n\n    this.unansweredlist = [\n      { name: \"Callid\", selector: \"callid\" },\n      { name: \"leadid\", selector: \"leadid\" },\n      { name: \"Calltime\", cell: row => <div className=\"calltime\">{row.calltime ? <Moment format=\"YYYY-MM-DD HH:mm:ss\" utc={true}>{row.calltime}</Moment> : \"N.A\"}</div> },\n      { name: \"Status\", cell: row => <div className=\"abandon\">{this.state.ModalTitle.indexOf(\"Unanswered\") > -1 ? \"ABANDON\" : \"ANSWERED\"}</div> },\n      { name: \"Waiting Time\", selector: \"waittime\" },\n      { name: \"EnterTime\", cell: row => <div className=\"calltime\">{row.entertime ? <Moment format=\"YYYY-MM-DD HH:mm:ss\" utc={true}>{row.entertime}</Moment> : \"N.A\"}</div>,\n       width: \"150px\",\n    },\n      { name: \"Main Queue EnterTime\", cell: row => <div className=\"calltime\">{row.mainqueueentertime ? <Moment format=\"YYYY-MM-DD HH:mm:ss\" utc={true}>{row.mainqueueentertime}</Moment> : \"N.A\"}</div>,\n      width: \"150px\",\n    },\n      { name: \"IVR Time\", selector: \"ivrtime\" },\n      { name: \"Call Type\", selector: \"call_type\" },\n      {\n        name: \"Listen\", cell: row =>\n        <div className=\"listenUserDetails\">\n            {this.getHtmlListen(row)}\n        </div>\n      },\n      {\n        name: \"More Info\", cell: row => <div className=\"moreinfo\"><a onClick={(e) => this.clickMoreinfo(e, row)} className=\"detailsinfo\">\n          <i className=\"fa fa-eye\"></i></a>\n        </div>\n      },\n    ];\n    this.moreinfolist = [\n      { name: \"callid\", selector: \"callid\" },\n      { name: \"leadid\", selector: \"leadid\" }, \n      { name: \"Calldate\", cell: row => <div className=\"calldate\">{row.calldate ? <Moment utc={true} format=\"YYYY-MM-DD HH:mm:ss\">{row.calldate}</Moment> : \"N.A\"}</div> },\n      { name: \"agentno\", selector: \"agentno\" },\n      { name: \"agentid\", selector: \"agentid\" },\n      { name: \"isassignedagent\", selector: \"isassignedagent\" },\n      { name: \"duration\", selector: \"ringtime\" }, \n      { name: \"disposition\", \n        //selector: \"custom_disposition\",\n        cell: row => this.state.ModalTitle.indexOf(\"Unanswered\") > -1 && row.custom_disposition === \"ANSWERED\" ? \"NO ANSWER\" : row.custom_disposition\n      },\n      {\n        name: \"Listen\", cell: row =>(['Playback','Hangup'].indexOf(row.custom_disposition) > -1)?'No file found':\n        <div className=\"listen\">\n            {this.getHtmlListenMoreInfo(row)}\n        </div>\n      },\n      // {\n      //   name: \"Listen\", cell: row =>\n      //     <div className=\"listen\">\n      //       {this.CreateRecordingURL(row)}\n      //     </div>\n      // }\n    ];\n    this.columnlist = [\n      {\n        name: \"Barging\",\n        selector: \"Barging\",\n        sortable: true,\n        width: \"80px\",\n        cell: row =>\n          <div className={row.Status == \"BUSY\" ? \"\" : \"hide\"} >\n            <button onClick={(e) => this.bargecall(e, row)} className={row.Barge ? \"hide\" : \"show\"}><i className=\"fa fa-volume-up\" aria-hidden=\"true\"></i></button>\n          </div>\n      },\n      {\n        name: \"Agent Code\",\n        selector: \"AgentCode\",\n\n        sortable: true,\n      },\n      {\n        name: \"Status\",\n        selector: \"Status\",\n        sortable: true,\n\n        cell: row => <div className={this.displayStatus(row) + \" RealtimeStatus\"}>{this.displayStatus(row)}</div>\n      },\n      {\n        name: \"Agent Name\",\n        selector: \"AgentName\",\n        sortable: true,\n      },\n      {\n      name: \"TL Name\",\n      selector: \"TLName\",\n      sortable: true,\n      },\n      {\n        name: \"Call Type\",\n        selector: \"CallType\",\n      },\n      {\n        name: \"Lead Id\",\n        selector: \"LeadId\",\n        sortable: true,\n      },\n      {\n        name: \"D.C.\",\n        selector: \"CallingCompany\",\n\n        sortable: true,\n      },\n      {\n        name: \"DIDNo\",\n        selector: \"DIDNo\",\n\n        sortable: true,\n      },\n      {\n        name: \"Asterisk_Url\",\n        selector: \"Asterisk_Url\",\n        width: \"120px\",\n        sortable: true,\n      },\n\n      // {\n      //   name: \"Last Updated On\",\n      //   selector: \"LastUpdatedOn\",\n      //   width: \"130px\",\n      //   sortable: true,\n      //   cell: row => <div className={row.AgentCode}>{row.LastUpdatedOn ? <Moment format=\"HH:mm:ss A\">{row.LastUpdatedOn}</Moment> : \"N.A\"}</div>\n      // },\n      {\n        name: \"Since\",\n        selector: \"LastUpdatedOn\",\n        sortable: true,\n        width: \"130px\",\n        cell: row => <div className={row.AgentCode}>{row.LastUpdatedOn ? <Moment fromNow>{this.getLastUpdatedOn(row)}</Moment> : \"N.A\"}</div>\n\n        //cell: row => <div className={row.AgentCode}>{row.LastUpdatedOn ? <Moment fromNow>{row.LastUpdatedOn}</Moment> : \"N.A\"}</div>\n      },\n      {\n        name: \"T Calls\",\n        selector: \"TotalCalls\",\n        width: \"70px\",\n        sortable: true,\n      },\n      {\n        name: \"U Dials\",\n        selector: \"UniqueDials\",\n        width: \"70px\",\n        sortable: true,\n      },\n      {\n        name: \"C Dials\",\n        selector: \"ConnectedDials\",\n        width: \"70px\",\n        sortable: true,\n      },\n      {\n        name: \"T TalkTime\",\n        selector: \"TotalTalkTime\",\n        sortable: true,\n        width: \"130px\",\n        cell: row => hhmmss(row.TotalTalkTime),\n      },\n\n    ];\n\n\n  }\n\n  componentWillReceiveProps(nextProps) {debugger;\n    if ((nextProps.queues && nextProps.queues != this.props.queues) ) {\n\n    const user = getuser();\n    this.setState({ SelectedSupervisors: [getUrlParameter(\"m\") == \"\" ? user.EmployeeId : getUrlParameter(\"m\")] }, function () {\n      \n      this.getqueue();\n      this.UserList();\n      this.queueList();\n    }.bind(this));\n\n  }\n    if (this.schdular == null) {\n      this.schdular = setInterval(function () {\n        //if (!this.state.onBarge) {\n        //if ((new Date()).getHours() >= 21 || (new Date()).getHours() < 9) {\n        if (this.state.winactive == 1 || document.hasFocus()) {\n          //this.getqueue();\n          this.UserList();\n          this.totalList();\n          this.queueList();\n        }\n        // }\n        // else {\n        //   this.UserList();\n        //   this.totalList();\n        // }\n        //}\n      }.bind(this), 2500)\n\n      window.addEventListener(\"message\", function (event) {\n        if (event.data.type == \"checkactive\") {\n          this.setState({ winactive: event.data.winactive })\n          this.winactive = event.data.winactive;\n        }\n      }.bind(this));\n    }\n  \n  }\n\n  componentDidMount() {\n\n    const user = getuser();\n    this.setState({ SelectedSupervisors: [getUrlParameter(\"m\") == \"\" ? user.EmployeeId : getUrlParameter(\"m\")] }, function () {\n      \n      this.getqueue();\n      this.UserList();\n      this.queueList();\n    }.bind(this));\n\n  \n    if (this.schdular == null) {\n      this.schdular = setInterval(function () {\n        //if (!this.state.onBarge) {\n        //if ((new Date()).getHours() >= 21 || (new Date()).getHours() < 9) {\n        if (this.state.winactive == 1 || document.hasFocus()) {\n          //this.getqueue();\n          this.UserList();\n          this.totalList();\n          this.queueList();\n        }\n        // }\n        // else {\n        //   this.UserList();\n        //   this.totalList();\n        // }\n        //}\n      }.bind(this), 2500)\n\n      window.addEventListener(\"message\", function (event) {\n        if (event.data.type == \"checkactive\") {\n          this.setState({ winactive: event.data.winactive })\n          this.winactive = event.data.winactive;\n        }\n      }.bind(this));\n    }\n  \n  }\n\n  getHtmlListenMoreInfo(row){\n    return  (<span id={\"span_\" + row.row_num} onClick={(e) => this.CreateMoreInfoRecordingURL(e, row)}>\n      <i class=\"fa fa-play-circle listen\"></i>\n      </span>)\n  }\n\n  getHtmlListen(row){debugger;\n    //var diff = (new Date() - new Date(row.hanguptime)) / 1000;\n    var now = moment().format(\"YYYY-MM-DD HH:mm:ss\");\n    var then = moment.utc(new Date(row.hanguptime)).format(\"YYYY-MM-DD HH:mm:ss\");\n\n    //var then = moment(row.hanguptime).format(\"YYYY-MM-DD HH:mm:ss\");\n    var diff = (moment(now,\"YYYY-MM-DD HH:mm:ss\").diff(moment(then,\"YYYY-MM-DD HH:mm:ss\")))/ 1000;\n\n    //if (row.orig_callid == 0){\n    //  return <i class=\"fa fa-info-circle infotooltip\" data-toggle=\"tooltip\" title=\"Transferred Call- Recording available next day on AI Portal\" aria-hidden=\"true\"></i>\n    //}\n    if (row.call_type == 1 && diff < 600) {\n      return <i class=\"fa fa-info-circle infotooltip\" diff={diff} data-toggle=\"tooltip\" title=\"Transferred Call- Recording available after 10 minutes of Call\" aria-hidden=\"true\"></i>\n    }\n    else if(diff < 600){\n      return <i class=\"fa fa-info-circle infotooltip\" data-toggle=\"tooltip\" title=\"IB - Recording available after 10 minutes of Call\" aria-hidden=\"true\"></i>\n    }else{\n      return  (<span id={\"span_\" + row.row_num} onClick={(e) => this.CreateNCallersRecordingURL(e, row)}>\n      <i class=\"fa fa-play-circle listen\"></i>\n      </span>)\n    }\n  }\n\n  CreateMoreInfoRecordingURL(e, row){\n    var audio = document.getElementById('audio2');\n    var number = row.row_num;\n    if (audio.paused) {\n      document.getElementById('span_'+ number).innerHTML = '<i class=\"fa fa-spinner fa-spin\"></i>';\n      let userfield = row.userfield;\n      let dstchannel = row.dstchannel;\n      let date = moment(new Date(userfield)).format(\"DD-MM-YYYY\");\n      let hour = moment(new Date(userfield)).format(\"H\");\n      let datetime = moment(new Date(userfield)).format(\"YYYYMMDDHHmmss\");\n      let phoneNo = dstchannel.substring(dstchannel.indexOf(\"/\") + 1, dstchannel.indexOf(\"-\"));\n      let callid = row.callid;\n      console.log(date, hour, datetime, phoneNo, callid);\n      let recfilename = \"recording/\"+ date + \"/\" + hour + \"/\" + callid + \"-\" + datetime + \"-\" + phoneNo + \".wav\";\n      //let url = \"https://asterisk-log.s3.ap-south-1.amazonaws.com/recording/\" + date + \"/\" + hour + \"/\" + callid + \"-\" + datetime + \"-\" + phoneNo + \".wav\";\n  \n  \n      if (date == \"Invalid date\" || hour == \"Invalid date\" || datetime == \"Invalid date\" || phoneNo == null) {\n        document.getElementById('span_'+ number).innerHTML = 'No File Found';\n        return;\n      }\n      //debugger;\n          GetAwsRecordingUrl(recfilename, 'asterisk-log' ,function (results) {debugger;\n            //debugger;\n\n            console.log(\"results\", results);\n            if (results.data.status == 200) {\n              let url = results.data.data;\n              audio.src = results.data.data;\n              document.getElementById('span_'+ number).innerHTML = '<i class=\"fa fa-spinner fa-spin\"></i>';\n              GetFileExists(url, function (params) {\n                //debugger;\n                if (params && params.status && params.status != 404) {\n                  audio.onloadedmetadata = function() {\n                    console.log(audio.duration)\n                    //setTimeout(function () {\n                      audio.play();\n                      console.log(audio.duration);\n                      if(audio.paused == false && audio.duration > 0 && audio.duration != 'Infinity' && audio.duration != 'NaN'){\n                      document.getElementById('span_'+ number).innerHTML = '<i class=\"fa fa-stop-circle listen\"></i>';\n                     \n                      audio.onended = function() {\n                        document.getElementById('span_'+ number).innerHTML = '<i class=\"fa fa-play-circle listen\"></i>';\n                      };\n                     \n                      }else{\n                      document.getElementById('span_'+ number).innerHTML = 'No File Found'; \n                      }\n                   // }.bind(this), 500);\n                  };\n                } else {\n                  try {\n                    document.getElementById(\"span_\" + row.row_num).innerHTML = \"File not found\";\n                  } catch (e) {\n                    //console.log('error', e);        \n                  }\n                }\n              });\n            \n              \n            } else {\n              document.getElementById('span_'+ number).innerHTML = 'No File Found';\n            }\n          }.bind(this));\n       \n\n\n    } else {\n      //debugger;\n      audio.pause();\n      audio.currentTime = 0;\n      document.getElementById('span_'+ number).innerHTML = '<i class=\"fa fa-play-circle listen\"></i>';\n\n    }\n\n  }\n  CreateNCallersRecordingURL(e,row){\n    var audio = document.getElementById('audio1');\n    var number = row.row_num;\n    if (audio.paused) {\n\n      let calldataid = row.orig_callid;\n      this.state.AwsRecordingUrl = '';\n      document.getElementById('span_'+ number).innerHTML = '<i class=\"fa fa-spinner fa-spin\"></i>';\n      //debugger;\n      GetRecordingName(calldataid, function (results) {\n        //console.log(\"results\", results);   \n        var CheckFile = '';\n        var extension = '';\n        if(results.data.file_available == true){\n          extension = '.wav';\n          CheckFile = results.data.file_available;\n        }else{\n          extension = '-out.wav';\n          CheckFile = results.data.agent_file;\n        }\n\n        if (CheckFile == true) {\n          //this.setState({ RecordingName: results.data.record });\n          GetAwsRecordingUrl(results.data.record+extension, 'newcctecbuckt', function (results) {\n            //debugger;\n            console.log(\"results\", results);\n            if (results.data.status == 200) {\n              this.setState({ AwsRecordingUrl: results.data.data });\n              audio.src = results.data.data;\n              document.getElementById('span_'+ number).innerHTML = '<i class=\"fa fa-spinner fa-spin\"></i>';\n\n              audio.onloadedmetadata = function() {\n                console.log(audio.duration)\n                //setTimeout(function () {\n                  audio.play();\n                  console.log(audio.duration);\n                  if(audio.paused == false && audio.duration > 0 && audio.duration != 'Infinity' && audio.duration != 'NaN'){\n                  document.getElementById('span_'+ number).innerHTML = '<i class=\"fa fa-stop-circle listen\"></i>';\n                 \n                  audio.onended = function() {\n                    document.getElementById('span_'+ number).innerHTML = '<i class=\"fa fa-play-circle listen\"></i>';\n                  };\n                 \n                  }else{\n                  document.getElementById('span_'+ number).innerHTML = 'No File Found'; \n                  }\n               // }.bind(this), 500);\n              };\n              \n            } else {\n              document.getElementById('span_'+ number).innerHTML = 'No File Found';\n            }\n          }.bind(this));\n        } else {\n          document.getElementById('span_'+ number).innerHTML = 'No File Name Found';\n        }\n\n      }.bind(this));\n\n    } else {\n      //debugger;\n      audio.pause();\n      audio.currentTime = 0;\n      document.getElementById('span_'+ number).innerHTML = '<i class=\"fa fa-play-circle listen\"></i>';\n\n    }\n\n  }\n\n  // CreateRecordingURL(row) {debugger;\n\n  //   let userfield = row.userfield;\n  //   let dstchannel = row.dstchannel;\n  //   let date = moment(new Date(userfield)).format(\"DD-MM-YYYY\");\n  //   let hour = moment(new Date(userfield)).format(\"H\");\n  //   let datetime = moment(new Date(userfield)).format(\"YYYYMMDDHHmmss\");\n  //   let phoneNo = dstchannel.substring(dstchannel.indexOf(\"/\") + 1, dstchannel.indexOf(\"-\"));\n  //   let callid = row.callid;\n  //   console.log(date, hour, datetime, phoneNo, callid);\n  //   let recfilename = date + \"/\" + hour + \"/\" + callid + \"-\" + datetime + \"-\" + phoneNo + \".wav\";\n  //   //let url = \"https://asterisk-log.s3.ap-south-1.amazonaws.com/recording/\" + date + \"/\" + hour + \"/\" + callid + \"-\" + datetime + \"-\" + phoneNo + \".wav\";\n\n\n  //   if (date == \"Invalid date\" || hour == \"Invalid date\" || datetime == \"Invalid date\" || phoneNo == null) {\n  //     return <span>File not found</span>\n  //   }\n\n  //   GetAwsRecordingUrl(recfilename, function (results) {debugger;\n\n  //     console.log(\"results\", results);\n  //     if (results.data.status == 200) {\n  //       let url = results.data.data;  \n             \n  //     } else {\n  //       try {\n  //         document.getElementById(\"span_\" + row.row_num).innerHTML = \"File not found\";\n  //       } catch (e) {\n  //         //console.log('error', e);        \n  //       }}\n  //   }.bind(this));\n\n  // }\n\n  totalList() {\n    let context = getUrlParameter(\"c\");\n    if (context != \"\") {\n      GetRealTimeTotalData(context, function (results) {\n        this.setState({ TotalData: results.data });\n      }.bind(this));\n    }\n  }\n\n  queueList() {//debugger;\n    let queues = this.state.queues;\n    //console.log(\"queues\", queues);\n\n    var queuestring = queues.map(function (val) {\n      return val.queuename;\n    });\n\n    var serverip = queues.map(function (val) {\n      return val.server_ip;\n    });\n\n    //var contextName = this.state.contextName ?? queuestring[0];\n\n    //this.setState({ queueServerIp: serverip[0], contextName: contextName });\n    this.setState({ queueServerIp: serverip[0] });\n\n    GetRealTimeQueueData(queuestring.join(\",\"), function (results) {\n      //console.log(\"results\", results);\n      this.setState({ QueueData: results.data });\n    }.bind(this));\n  }\n  getqueue() {debugger;\n    // let type = getUrlParameter(\"type\") == \"\" ? \"sales\" : getUrlParameter(\"type\");\n    // let proid = getUrlParameter(\"product\") == \"\" ? \"1\" : getUrlParameter(\"product\");\n    let is_mobile = getUrlParameter(\"IsMobile\") == \"\" ? \"0\" : getUrlParameter(\"IsMobile\");\n    let is_claim = getUrlParameter(\"IsClaim\") == \"\" ? \"0\" : getUrlParameter(\"IsClaim\");\n    // let queues =  getUrlParameter(\"queues\");\n    let type = this.props.type == \"\" ? \"sales\" : this.props.type;\n    let proid = this.props.product == \"\" ? \"1\" : this.props.product;\n    let queues =  this.props.queues;\n\n    // this.props.GetMySqlData({\n    //   root: \"getqueue\",\n    //   ProductType: type,\n    //   ProductId: proid,\n    //   IsMobile: is_mobile,\n    //   IsClaim:  is_claim,\n    // });\n\n    this.props.GetMySqlData({\n      root: \"getqueuetwo\",\n      ProductType: type,\n      ProductId: proid,\n      IsMobile: is_mobile,\n      IsClaim:  is_claim,\n      queues:   queues,\n    }, function (result) {\n      //console.log(\"result\",result);\n      this.setState({ queues: result.data.data[0] });\n    }.bind(this));\n  }\n\n  UserList() {\n    let managerid = getUrlParameter(\"m\");\n    let context = this.state.contextName == null ? getUrlParameter(\"c\") : this.state.contextName;\n    if(context == 'breakinmotor'){\n      context = 'BreakinMotor';\n    }\n    // if(context == 'claimofflinemotorib'){\n    //   context = \"claimofflinemotornia,claimofflinemotorprivate,claimofflinemotoruiic,claimofflinemotornao\";\n    // }\n    // if(context == 'claimonlinemotorib'){\n    //   context = \"claimonlinemotordc,claimonlinemotorqc,claimonlinemotorpayment\";\n    // }\n    let queues = this.state.queues;\n    const filterContext = queues.filter( (queue)=> queue.queuename == context);\n    //console.log(filterContext);\n    let newContext = '';\n    if(filterContext.length > 0){\n      this.setState({ wraptime : filterContext[0].wraptime});\n      if(filterContext[0].isMaster == 1){\n        newContext=filterContext[0].child\n      }else{\n        newContext=filterContext[0].queuename\n      }\n    }\n\n    const user = getuser();\n    if (this.state.SelectedSupervisors.length > 0) {\n      managerid = this.state.SelectedSupervisors.join()\n    }\n\n    if (managerid == \"\" && context == \"\") {\n      managerid = user.EmployeeId;\n      this.setState({ SelectedSupervisors: [managerid] });\n    }\n    if (managerid || context){\n    GetRealTimeAgentData(managerid, newContext, function (results) {\n      this.setState({ AgentData: results.data });\n    }.bind(this));\n  }\n\n  }\n\n  handleShow(e) {\n    this.setState({ SelectedSupervisors: e.SelectedSupervisors });\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.schdular);\n    if (this.userAgent != null)\n      this.userAgent.hangup();\n  }\n\n  changeContext(e, row) {\n    this.setState({ contextName: row.context });\n  }\n\n  clickUnanswered(e, row) {\n    let queuename = row.context;\n    this.setState({clickedQueue : queuename});\n    this.props.GetMySqlData({\n      root: \"unanswered\",\n      queues: queuename,\n    }, function (result) {\n      ////debugger;\n      this.setState({ showModal: true, UnansweredData: result.data.data[0], ModalTitle: \"Unanswered Calls\" });\n    }.bind(this));\n\n  }\n  clickanswered(e, row) {\n    let queuename = row.context;\n    this.setState({clickedQueue : queuename});\n\n    this.props.GetMySqlData({\n      root: \"answered\",\n      queues: queuename,\n    }, function (result) {\n      ////debugger;\n      this.setState({ showModal: true, UnansweredData: result.data.data[0], ModalTitle: \"Answered Calls\" });\n    }.bind(this));\n\n  }\n\n  clickMoreinfo(e, row) {//debugger;\n    let uniqueid = row.callid;\n    let queues = this.state.queues;\n    let queue = this.state.clickedQueue;\n\n    const queueData = queues.find((item) => item.queuename.toLowerCase() === queue.toLowerCase());\n\n    // if (queue == 'breakinmotor'){\n    //   var queueServerIp = \"10.0.91.32\";\n    // }else{\n    var queueServerIp = queueData.server_ip;\n    // }\n\n    this.props.GetMySqlData({\n      root: \"moreinfo\",\n      uniqueid: uniqueid,\n      queueServerIp: queueServerIp,\n    }, function (result) {////debugger;\n      this.setState({ showMoreInfoModal: true, MoreInfoData: result.data.data[0] });\n    }.bind(this));\n\n  }\n\n  getLastUpdatedOn(row) {\n    if(this.state.wraptime && row.Status == \"IDLE\"){\n      let lastupdatetime = moment(row.LastUpdatedOn).format('YYYY-MM-DD HH:mm:ss');\n      let currentTime = moment(row.ServerTime).format('YYYY-MM-DD HH:mm:ss');//moment().format(\"YYYY-MM-DD HH:mm:ss\");\n      var diff = (moment(currentTime,\"YYYY-MM-DD HH:mm:ss\").diff(moment(lastupdatetime,\"YYYY-MM-DD HH:mm:ss\")))/ 1000;\n\n      if(diff > this.state.wraptime){\n        let lastsincetime =  moment(row.LastUpdatedOn).add(this.state.wraptime, 'seconds').format('YYYY-MM-DD HH:mm:ss');\n        console.log('agent',row.AgentCode,'since',lastsincetime,'currenttime',currentTime);\n        console.log('agent',row.AgentCode,moment(lastsincetime).fromNow());\n        return lastsincetime;\n      }else{\n        return row.LastUpdatedOn;\n      }\n\n    }else{\n      return row.LastUpdatedOn;\n    }\n\n  }\n\n  displayStatus(row) {\n    // var diff = (new Date() - new Date(row.LastUpdatedOn)) / 1000;\n    // if (diff > 60 && row.Status == \"IDLE\") {\n    //   return \"Away\";\n    // } else return row.Status;\n    let BargeWithAgent = this.state.BargeWithAgent;\n    if (BargeWithAgent && BargeWithAgent.AgentCode == row.AgentCode && row.Status != \"BUSY\") {\n\n      // if (this.userAgent) {\n      //   this.userAgent.hangup();\n      //   this.userAgent = null;        \n      // }\n      // this.setState({ onBarge: false, BargeWith: \"\" });\n      this.unbargecall();\n    }\n    else if (BargeWithAgent && BargeWithAgent.AgentCode == row.AgentCode && row.Status == \"BUSY\") {\n      // if (this.userAgent == null) {\n      //   this.bargecall(null, BargeWithAgent);\n      // }\n    }\n    console.log('wraptime',this.state.wraptime);\n    let status = row.Status;\n    if(this.state.wraptime && row.Status == \"IDLE\"){\n      let lastupdatetime = moment(row.LastUpdatedOn).format('YYYY-MM-DD HH:mm:ss');\n      let currentTime =  moment(row.ServerTime).format('YYYY-MM-DD HH:mm:ss');//moment().format(\"YYYY-MM-DD HH:mm:ss\");\n      var diff = (moment(currentTime,\"YYYY-MM-DD HH:mm:ss\").diff(moment(lastupdatetime,\"YYYY-MM-DD HH:mm:ss\")))/ 1000;\n\n      if(diff < this.state.wraptime){\n        console.log('agent',row.AgentCode,'lastupdatetime',lastupdatetime,'currenttime',currentTime,'diff',diff);\n        status = \"OnWrap\";\n      }else{\n        status = row.Status;\n      }\n\n    }\n    return status.toUpperCase()\n  }\n\n  unbargecall(e) {\n    if (this.userAgent) {\n      this.userAgent.hangup();\n      this.userAgent = null;\n    }\n    this.setState({ onBarge: false, BargeWith: \"\", BargeWithAgent: null });\n  }\n\n\n  bargecall(e, row) {\n    try {\n      if (this.userAgent) {\n        this.userAgent.hangup();\n        this.userAgent = null\n      }\n      //if (!this.state.onBarge) {\n\n      let user = {\n        Display: getuser().EmployeeId,\n        User: getuser().EmployeeId,\n        Pass: getuser().EmployeeId,\n        Realm: row.Asterisk_Url,\n        WSServer: \"wss://\" + row.Asterisk_Url + \":8089/ws\"\n      }\n      this.LoginAsteriskServer(user, function () {\n        setTimeout(function () {\n\n          if (this.userAgent) {\n            let target = \"*222\" + row.AgentCode;\n            if (row.DIDNo) {\n              target = \"*222\" + row.DIDNo;\n            }\n\n            this.userAgent.call(target);\n          }\n          this.setState({ onBarge: true, BargeWith: row.AgentCode, BargeWithAgent: row });\n\n          // setTimeout(function () {\n          //   //this.forceUpdate();\n\n          // }.bind(this), 500);\n\n        }.bind(this), 1000);\n      }.bind(this), function () {\n        document.getElementById(row.AgentCode).checked = false;\n      }.bind(this));\n\n      // }\n      // else {\n      //   toast(\"Close previous call barging\", { type: 'error' });\n      //   e.target.checked = false;\n      //   return false;\n      // }\n\n\n    } catch (e) {\n\n    }\n\n  }\n\n  LoginAsteriskServer(user, onsuccess, onerror) {\n\n    if (user) {\n      var config = {\n        media: {\n          remote: {\n            //video: document.getElementById('remoteVideo'),\n            // This is necessary to do an audio/video call as opposed to just a video call\n            audio: document.getElementById('audioRemote')\n          }\n        },\n        ua: {\n          uri: user.User + '@' + user.Realm,\n          wsServers: [user.WSServer],\n          authorizationUser: user.Display,\n          password: user.Pass\n        }\n      }\n\n      if (Web) {\n        this.userAgent = new Web.Simple(config);\n\n        //let remoteElem = document.getElementById('audioRemote');\n        //let localElem = document.getElementById('audioLocal');\n        this.userAgent.on('connected', function (e) {\n          toast(\"Barging Connected!\", { type: 'success' });\n        });\n        this.userAgent.on('disconnected', function (e) {\n\n        });\n        this.userAgent.on('registered', function (e) {\n          if (onsuccess) {\n            onsuccess();\n          }\n\n        });\n        this.userAgent.on('registrationFailed', function (e) {\n          toast(\"Make sure your VPN is connected!\", { type: 'error' });\n        });\n        this.userAgent.on('unregistered', function (e) {\n          toast(\"Dialer issue please contact administrator!\", { type: 'error' });\n          if (onerror) {\n            onerror();\n          }\n\n        });\n        this.userAgent.on('userMediaFailed', function (e) {\n\n        });\n        this.userAgent.on('userMediaRequest', function (e) {\n\n        });\n        this.userAgent.on('userMedia', function (e) {\n\n        });\n        this.userAgent.on('invite', function (e) {\n\n        });\n        this.userAgent.on('addStream', function (stream) {\n\n        });\n        this.userAgent.on('ended', function (stream) {\n\n        });\n      }\n    }\n\n    setTimeout(function () {\n      if (this.userAgent && this.userAgent.ua && this.userAgent.ua.isRegistered() == false) {\n        toast(\"Make sure your VPN is connected!\", { type: 'error' });\n      }\n    }.bind(this), 10000);\n    return this.userAgent;\n  }\n  // componentWillReceiveProps(nextProps) {\n  //   if (!nextProps.CommonData.isError) {\n  //     //this.setState({ queues: nextProps.CommonData[\"getqueue\"] });\n  //     //this.setState({ UnansweredData: nextProps.CommonData[\"unanswered\"] });\n  //   }\n  // }\n\n  play(number) {\n    var audio = document.getElementById('audio_' + number);\n    var icon = document.getElementById(\"play\" + number);\n    if (audio.paused) {\n      audio.play();\n      icon.classList.remove(\"fa-play-circle\");\n      icon.classList.add(\"fa-stop-circle\");\n      this.CheckAudioFinishedPlay(audio, icon);\n     \n    } else {\n      audio.pause();\n      audio.currentTime = 0\n      icon.classList.remove(\"fa-stop-circle\");\n      icon.classList.add(\"fa-play-circle\");\n    }\n  }\n\n  CheckAudioFinishedPlay(audio, icon){//debugger;\n    audio.onended = function() {\n      icon.classList.remove(\"fa-stop-circle\");\n      icon.classList.add(\"fa-play-circle\");\n     };\n  }\n\n  statuschange(e) {\n    this.setState({ key: e.target.value });\n  }\n\n  filterdata(e) {\n\n    let alldata = this.state.AgentData\n    let that = this;\n    if (this.state.key === \"ALL\") {\n      return alldata;\n    }\n    if (this.state.key === \"Away\") {\n      let AgentData = [];\n      alldata.forEach(element => {\n        var diff = (new Date() - new Date(element.LastUpdatedOn)) / 1000;\n        if (diff > 60 && element.Status === \"IDLE\") {\n          AgentData.push(element);\n        }\n      });\n      return AgentData;\n    }\n\n    let AgentData = [];\n    alldata.forEach(element => {\n      if (this.state.key.indexOf(element.Status) > -1) {\n        AgentData.push(element);\n      }\n    });\n    return AgentData;\n  }\n  _handleKeyDown(e) {\n\n    if (e.key === 'Enter') {\n      this.setState({ SelectedSupervisors: [e.target.value] });\n    }\n  }\n\n  _handleOnClick(e) {\n\n\n    this.setState({ SelectedSupervisors: [document.getElementById(\"EmpId\").value] });\n\n  }\n\n  renderTotalData() {\n\n\n    let tr = [];\n    let QueueData = this.state.QueueData;\n    //console.log('..............................',QueueData);\n    if (QueueData && QueueData.length > 0) {\n\n      QueueData.forEach(element => {\n        tr.push(<tr className={this.state.contextName == element.context ? \"active\" : \"\"}>\n          <td>{<a onClick={(e) => this.changeContext(e, element)} data-myattribute=\"check\" className=\"abutton clickMe\">{element.context}</a>}</td>\n          {/* <td>{element.answered}</td> */}\n          <td>{<a onClick={(e) => this.clickanswered(e, element)} className=\"abutton\">{element.answered}</a>}</td>\n          <td>{<a onClick={(e) => this.clickUnanswered(e, element)} className=\"abutton\">{element.unanswered}</a>}</td>\n          <td className={element.waitingibcalls > 0 ? \"waiting_call_gt0\" : \"\"}>{element.waitingibcalls}</td>\n          <td className={element.waitingctccalls > 0 ? \"waiting_call_gt0\" : \"\"}>{element.waitingctccalls}</td>\n          <td className={element.waitingassignedcalls > 0 ? \"waiting_call_gt0\" : \"\"}>{element.waitingassignedcalls}</td>\n          <td>{element.totalcalls}</td>\n        </tr>)\n      });\n      return <Table responsive>\n        <thead className=\"text-primary\">\n          <tr>\n            <th>context</th>\n            <th>answered</th>\n            <th>unanswered</th>\n            <th>waitingibcalls</th>\n            <th>waitingctccalls</th>\n            <th>waitingassignedcalls</th>\n            <th>totalcalls</th>\n          </tr>\n        </thead>\n        <tbody>\n          {tr}\n        </tbody>\n      </Table>\n    }\n    else {\n      return null;\n    }\n  }\n\n\n  render() {\n    const columns = this.columnlist;\n\n    const unansweredcolumns = this.unansweredlist;\n    const moreinfocolumns = this.moreinfolist;\n\n    const totalcolumns = this.totalcolumnlist;\n    const data = this.filterdata();\n    const managerid = getUrlParameter(\"m\");\n    const context = getUrlParameter(\"c\");\n\n    const { PageTitle, UnansweredData, MoreInfoData } = this.state;\n\n    return (\n      <>\n        <div className=\"content\">\n          <ToastContainer />\n          <Row>\n            <Col md=\"12\">\n              <Card>\n                <CardHeader>\n                  <Row>\n                    <Col md={3}>\n                      <CardTitle tag=\"h4\">Queues</CardTitle>\n                    </Col>\n                    <Col md={9}>\n\n                    </Col>\n                  </Row>\n\n                </CardHeader>\n\n                <CardBody>\n                  <div className=\"queuetable\">\n                    {this.renderTotalData()}\n                  </div>\n                </CardBody>\n\n              </Card>\n\n\n\n\n            </Col>\n\n          </Row>\n          <Row>\n            <Col md=\"12\">\n              <Card>\n                <CardHeader>\n\n                  <Row>\n                    <Col md={3}>\n                      <CardTitle tag=\"h4\">{PageTitle}</CardTitle>\n                    </Col>\n                    <Col md={4}>\n                      <div>\n                      Queue Name : {this.state.contextName}\n                      </div>\n                    </Col>\n                    \n                    <Col md={3}>\n                      <div className=\"input-group hide\">\n\n                        <Form.Control required type=\"text\" name=\"EmpId\" id=\"EmpId\" onKeyDown={this._handleKeyDown} onChange={(e) => this.setState({ username: e.target.value })} value={this.state.username} placeholder={\"Enter Supervisor Id\"} />\n                        <div className=\"input-group-append\">\n                          <button onClick={(e) => this._handleOnClick(e)} className=\"btn btn-primary input-group-button\"><i className=\"fa fa-search\" aria-hidden=\"true\"></i></button>\n\n                        </div>\n                      </div>\n                    </Col>\n                    <Col md={2}>\n                      <div className=\"form-group \">\n                        <select className=\"form-control\" onChange={this.statuschange}>\n                          <option value=\"ALL\">ALL</option>\n                          <option value=\"IDLE\">IDLE</option>\n                          <option value=\"Away\">Away</option>\n                          <option value=\"BUSY\">BUSY</option>\n                          <option value=\"Lunch,Tea,Training,Meeting,Day End\">Break</option>\n                          <option value=\"PAUSE\">PAUSE</option>\n                          <option value=\"Auto Logout,LOGOUT\">LOGOUT</option>\n                        </select>\n                      </div>\n                      {\n                        (managerid == '' && context == ' ') ? <ManagerHierarchy handleShow={this.handleShow} value={/EmployeeId/g} ></ManagerHierarchy> : null\n                      }\n                      <button id=\"BargeWith\" onClick={(e) => this.unbargecall(e)} className={this.state.BargeWith == \"\" ? \"hide\" : \"btn btn-primary hangupwith show\"} ><i className=\"fa fa-volume-off\" aria-hidden=\"true\"></i> Hang Up With: {this.state.BargeWith}</button>\n                    </Col>\n\n                  </Row>\n\n                </CardHeader>\n\n                <CardBody>\n                  {/* {this.renderTotalData()} */}\n\n                  <div className=\"statusdata\">\n                    <DataTable\n                      columns={columns}\n                      data={data}\n                      pagination={false}\n                      striped={true}\n                      noHeader={true}\n                      highlightOnHover\n                      dense\n\n                    />\n\n                  </div>\n                </CardBody>\n\n              </Card>\n            </Col>\n            <audio id=\"audioRemote\"></audio>\n            <audio id=\"audioLocal\"></audio>\n\n          </Row>\n          <audio src=\"\" id={\"audio1\"}></audio>\n          <audio src=\"\" id={\"audio2\"}></audio>\n\n          <Modal show={this.state.showModal} onHide={() => this.setState({ showModal: false })} dialogClassName=\"modal-70w\">\n            <Modal.Header closeButton>\n              <Modal.Title>{this.state.ModalTitle}</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n              <div className=\"modaldata\">\n                <DataTable\n                  columns={unansweredcolumns}\n                  data={(UnansweredData && UnansweredData.length > 0) ? UnansweredData : []}\n                  pagination={false}\n                  striped={true}\n                  noHeader={true}\n                  highlightOnHover\n                  dense\n                  pagination={true}\n                />\n              </div>\n            </Modal.Body>\n            <Modal.Footer>\n\n            </Modal.Footer>\n          </Modal>\n          <Modal show={this.state.showMoreInfoModal} onHide={() => this.setState({ showMoreInfoModal: false })} dialogClassName=\"modal-90w\">\n            <Modal.Header closeButton>\n              <Modal.Title></Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n              <div className=\"modalmoreinfodata\">\n                <DataTable\n                  columns={moreinfocolumns}\n                  data={(MoreInfoData && MoreInfoData.length > 0) ? MoreInfoData : []}\n                  pagination={false}\n                  striped={true}\n                  noHeader={true}\n                  highlightOnHover\n                  dense\n\n                />\n              </div>\n            </Modal.Body>\n            <Modal.Footer>\n\n            </Modal.Footer>\n          </Modal>\n        </div>\n      </>\n    );\n  }\n}\n\n\nfunction mapStateToProps(state) {\n  return {\n    CommonData: state.CommonData\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  {\n    GetCommonData,\n    GetCommonspData,\n    GetMySqlData\n  }\n)(RealTimePanelQueuewise);\n\n\n\n\n"],"sourceRoot":""}