{"version":3,"sources":["views/ManageIBQueueMaster.jsx","store/actions/CommonMysqlAction.jsx"],"names":["ManageIBQueueMaster","props","handleChange","e","formvalue","state","target","type","id","checked","_isAMomentObject","format","value","setState","isLoaded","showModal","items","store","activePage","root","PageTitle","FormTitle","event","errors","fields","handleClose","bind","handleShow","handleSave","handleValidation","selectedrow","columnlist","name","label","hide","searchable","required","editable","config","cols","con","data","Id","Display","this","map","col","fnBindRootData","GetMySqlData","order","result","nextProps","CommonData","joinObject","isError","fnBindStore","InsertSuccessData","status","alert","error","UpdateSuccessData","columns","fnDatatableCol","unshift","width","cell","row","aria-label","variant","onClick","handleEdit","className","aria-hidden","window","confirm","handleDelete","od","Object","assign","UpdateData","body","querydata","toast","addRecord","module","action","nd","ts","Date","by","getuser","UserID","JSON","parse","stringify","fnCleanData","InsertData","formIsValid","IsUpdate","md","tag","show","onHide","dialogClassName","Header","closeButton","Title","Body","fnRenderfrmControl","Footer","React","Component","connect","GetCommonData","GetCommonData_fetched","Todos","dataToSend","statename","localStorage","setItem","constants","GET_COMMON_SUCCESS","payload","GetCommonData_fetch_error","GET_COMMON_FAIL","cb","undefined","dispatch","getState","getItem","axios","get","api","base_url","params","then","catch","post","INSERT_COMMON_SUCCESS","INSERT_COMMON_FAIL","InsertData_fetch_error","UPDATE_COMMON_SUCCESS","UPDATE_COMMON_FAIL","UpdateData_fetch_error","GetDataDirect"],"mappings":"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","file":"static/js/87.844f64a8.chunk.js","sourcesContent":["\r\nimport React from \"react\";\r\nimport { ButtonGroup, Button, Modal, Form } from 'react-bootstrap';\r\n\r\n/*import {\r\n  GetCommonData\r\n} from \"../store/actions/CommonAction\";*/\r\n\r\nimport { GetMySqlData, InsertData, UpdateData } from \"../store/actions/CommonMysqlAction\";\r\nimport { addRecord, GetCommonData } from \"../store/actions/CommonMongoAction\";\r\n\r\nimport { connect } from \"react-redux\";\r\n// import { Link } from \"react-router-dom\";\r\nimport DataTable from './Common/DataTableWithFilter';\r\nimport { fnBindRootData, fnRenderfrmControl, fnDatatableCol, fnCleanData, GetJsonToArray, getMax, joinObject, getuser } from '../utility/utility.jsx';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\n// reactstrap components\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  Table,\r\n  Row,\r\n  Col\r\n} from \"reactstrap\";\r\n\r\n\r\nclass ManageIBQueueMaster extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isLoaded: false,\r\n      showModal: false,\r\n      items: [],\r\n      store: [],\r\n      activePage: 1,\r\n      root: \"InboundQueueMaster\",\r\n      PageTitle: \"Inbound Queue Master\",\r\n      FormTitle: \"\",\r\n      formvalue: {},\r\n      event: \"\",\r\n      errors: {},\r\n      fields: {},\r\n    };\r\n    this.handleClose = this.handleClose.bind(this);\r\n    this.handleShow = this.handleShow.bind(this);\r\n    this.handleSave = this.handleSave.bind(this);\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleValidation = this.handleValidation.bind(this);\r\n    this.selectedrow = { \r\n      \"id\": 0, \r\n      \"queuename\" : \"\",\r\n      \"queue_ring_time\" : \"\",\r\n      \"ctc_queue_ring_time\" : \"\",\r\n      \"master_queuename\" : \"\",\r\n      \"master_queue_ring_time\" : \"\",\r\n      \"product\" : \"\",\r\n      \"mdProduct\" : \"\",\r\n      \"group_name\" : \"\",\r\n      \"type\" : \"\",\r\n      \"is_ctc\" : \"\",\r\n      \"IsMobile\" : \"\",\r\n      \"IsClaim\" : \"\",\r\n      \"ctc_process_type\" : \"\",\r\n      \"server_ip\" : \"\",\r\n      \"callWaitTime\" : \"\",\r\n      \"dialRingTime\" : \"\",\r\n      \"startTime\" : \"\",\r\n      \"endTime\" : \"\",\r\n      \"agentsDial\" : \"\",\r\n      \"isGroupMasterQueue\" : \"\",\r\n      //\"CreatedOn\": new Date() \r\n    }\r\n    this.columnlist = [\r\n      { name: \"id\", label: \"ID\", type: \"hidden\", hide: true },\r\n      { \r\n        name: \"queuename\", \r\n        label: \"Queue Name\", \r\n        searchable: false, \r\n        required: true,\r\n        type: \"string\",\r\n        editable: false\r\n      },\r\n      { name: \"master_queuename\", label: \"Master Queue Name\", searchable: false, type: \"string\" },\r\n      {\r\n        name: \"product\",\r\n        label: \"Product\",\r\n        type: \"dropdown\",\r\n        config: {\r\n          root: \"Products\",\r\n          cols: [\"ID AS Id\", \"ProductName AS Display\"],\r\n          con: [{ \"Isactive\": 1 }]\r\n        },\r\n        required: true,\r\n        searchable: true,  \r\n        //editable: false      \r\n      },\r\n      { \r\n        name: \"mdProduct\", \r\n        label: \"Md Product\", \r\n        type: \"dropdown\",\r\n        config: {\r\n          root: \"Products\",\r\n          cols: [\"ID AS Id\", \"ProductName AS Display\"],\r\n          con: [{ \"Isactive\": 1 }]\r\n        },\r\n        searchable: false, \r\n        //type: \"string\" \r\n      },\r\n      { name: \"group_name\", \r\n        label: \"Group Name\", \r\n        type: \"dropdown\",\r\n        searchable: true,\r\n        config: {\r\n          root: \"groupname\",\r\n          data: [{ Id: 'inbound', Display: \"inbound\" }, { Id: 'predictive', Display: \"predictive\" }],\r\n        } \r\n      },\r\n      { name: \"type\", \r\n        label: \"Type\", \r\n        type: \"dropdown\",\r\n        searchable: true,\r\n        config: {\r\n          root: \"type\",\r\n          data: [{ Id: 'sales', Display: \"sales\" }, { Id: 'service', Display: \"service\" }, { Id: 'claim', Display: \"claim\" }],\r\n        },\r\n        required: true\r\n      },\r\n      { name: \"ctc_process_type\", \r\n        label: \"Ctc Process Type\", \r\n        type: \"dropdown\",\r\n        searchable: true,\r\n        config: {\r\n          root: \"ctc_process_type\",\r\n          data: [{ Id: 'old', Display: \"old\" }, { Id: 'new', Display: \"new\" }],\r\n        },\r\n        required: true\r\n      },\r\n      { name: \"server_ip\", label: \"Server IP\", searchable: false, required: true, type: \"string\" },\r\n      { name: \"queue_ring_time\", label: \"Queue Ring Time\", searchable: false, type: \"string\" },\r\n      { name: \"ctc_queue_ring_time\", label: \"Ctc Queue Ring Time\", searchable: false, type: \"string\" },\r\n      { name: \"master_queue_ring_time\", label: \"Master Queue Ring Time\", searchable: false, type: \"string\" },\r\n      { name: \"callWaitTime\", label: \"Call Wait Time\", searchable: false, type: \"string\" },\r\n      { name: \"dialRingTime\", label: \"Dial Ring Time\", searchable: false, type: \"string\" },\r\n      { name: \"startTime\", label: \"Start Time\", searchable: false, type: \"string\" },\r\n      { name: \"endTime\", label: \"End Time\", searchable: false, type: \"string\" },\r\n      { name: \"agentsDial\", label: \"Agents Dial\", searchable: false, type: \"string\" },\r\n      { name: \"is_ctc\", label: \"IsCtc\", searchable: false, type: \"bool\" },\r\n      { name: \"IsMobile\", label: \"IsMobile\", searchable: false, type: \"bool\" },\r\n      { name: \"IsClaim\", label: \"IsClaim\", searchable: false, type: \"bool\" },\r\n      //{ name: \"isActive\", label: \"IsActive\", searchable: false, type: \"bool\" },\r\n      { name: \"isGroupMasterQueue\", label: \"IsGroupMasterQueue\", searchable: false, type: \"bool\" },\r\n    ];\r\n    let count = 0;\r\n  }\r\n\r\n\r\n  componentDidMount() {\r\n    this.columnlist.map(col => (\r\n      fnBindRootData(col,this.props)\r\n    ));\r\n\r\n    /*this.props.GetMySqlData({\r\n      limit: 10,\r\n      skip: 0,\r\n      c: \"L\",\r\n      root: this.state.root,\r\n      cols: GetJsonToArray(this.columnlist, \"name\")\r\n    });*/\r\n\r\n    this.props.GetMySqlData({\r\n      root: this.state.root,\r\n      //     cols: {},\r\n      //     c: \"L\",\r\n      order: \"id\",\r\n      con: {\"isActive\": 1 }\r\n    }, function (result) {//debugger;\r\n      //this.setState({ showMoreInfoModal: true, MoreInfoData: result.data.data[0] });\r\n    }.bind(this));\r\n\r\n  }\r\n  fnBindStore(col,nextProps){\r\n    if(col.type == \"dropdown\"){\r\n      let items;\r\n      \r\n      if(nextProps.CommonData[this.state.root] && nextProps.CommonData[col.config.root]){\r\n        \r\n        items = joinObject(nextProps.CommonData[this.state.root],nextProps.CommonData[col.config.root],col.name)\r\n        this.setState({ items: items });\r\n      }\r\n    }\r\n  }\r\n  componentWillReceiveProps(nextProps) {\r\n    \r\n\r\n    if (!nextProps.CommonData.isError) {\r\n      this.setState({ items: nextProps.CommonData[this.state.root] });\r\n      this.setState({ store: nextProps.CommonData });\r\n      \r\n      //setTimeout(function(){\r\n        this.columnlist.map(col => (\r\n          this.fnBindStore(col,nextProps)\r\n        ));\r\n      //}.bind(this),2000);\r\n      \r\n    }\r\n\r\n    if (nextProps.CommonData && nextProps.CommonData.InsertSuccessData && nextProps.CommonData.InsertSuccessData.status) {\r\n      if (nextProps.CommonData.InsertSuccessData.status != 200)\r\n        alert(nextProps.CommonData.InsertSuccessData.error);\r\n      else {\r\n        //this.setState({ showModal: false });\r\n      }\r\n    }\r\n\r\n    if (nextProps.CommonData && nextProps.CommonData.UpdateSuccessData && nextProps.CommonData.UpdateSuccessData.status) {\r\n      if (nextProps.CommonData.UpdateSuccessData.status != 200)\r\n        alert(nextProps.CommonData.UpdateSuccessData.error);\r\n      else {\r\n        //this.setState({ showModal: false });\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n\r\n  fnDatatableCol() {\r\n    var columns = fnDatatableCol(this.columnlist);\r\n\r\n    // columns.push({\r\n    //   name: \"InvType\",\r\n    //   selector: \"InvTypeID_display\",\r\n    //   sortable: true,\r\n    // });\r\n\r\n    columns.unshift({\r\n      name: \"Action\",\r\n      width: \"150px\",\r\n      cell: row => <ButtonGroup aria-label=\"Basic example\">\r\n        <Button variant=\"secondary\" onClick={() => this.handleEdit(row)}><i className=\"fa fa-pencil-square-o\" aria-hidden=\"true\"></i></Button>\r\n        <Button variant=\"secondary\" onClick={() => { if (window.confirm('Are you sure you wish to delete this queue?')) this.handleDelete(row)}}><i className=\"fa fa-trash\" aria-hidden=\"true\"></i></Button>\r\n      </ButtonGroup>\r\n    });\r\n    return columns;\r\n  }\r\n\r\n\r\n\r\n  /*\r\n  handleCopy(row) {\r\n    this.setState({ formvalue: row, event: \"Copy\", showModal: true, FormTitle: \"Copy Record\" });\r\n  }\r\n  */\r\n\r\n  handleEdit(row) {\r\n    //this.setState({ od: Object.assign({}, row, {}), formvalue: Object.assign({}, row, {}), event: \"Edit\", showModal: true, FormTitle: \"Edit Record\" });\r\n    this.setState({ od: Object.assign({}, row, {}), formvalue: row, event: \"Edit\", showModal: true, FormTitle: \"Edit Record\" });\r\n  }\r\n\r\n  handleClose() {\r\n    this.setState({ showModal: false });\r\n  }\r\n\r\n  handleShow() {\r\n    this.setState({ formvalue: this.selectedrow, event: \"Add\", showModal: true, FormTitle: \"Add New Record\" });\r\n  }\r\n\r\n  handleDelete(row){\r\n      this.setState({ od: Object.assign({}, row, {}), formvalue: row });\r\n      this.props.UpdateData({\r\n        root: this.state.root,\r\n        body: {'isActive' : 0},\r\n        querydata: { \"id\": row.id }\r\n      }, function (data) {\r\n        if(data.data.status === 200) {\r\n          toast(\"Queue removed successfully!\", { type: 'success' });\r\n        }\r\n        else \r\n          toast.error(\"Queue could not be removed\"); \r\n      });\r\n        \r\n      this.props.addRecord({\r\n        root: \"History\",\r\n        body: {\r\n          module: \"InboundQueueMaster\",\r\n          action:\"Delete\",\r\n          od: this.state.od,\r\n          nd: {'isActive' : 0},\r\n          ts: new Date(),\r\n          by: getuser().UserID\r\n        }\r\n      });\r\n\r\n    /*this.props.DeleteData({\r\n      root: this.state.root,\r\n      query: {QuestionID : row.QuestionID}\r\n    }, function (data) {\r\n      if(data.data.status === 200) \r\n        toast(\"Question removed!\", { type: 'success' });\r\n      else \r\n        toast.error(\"Question could not be removed\"); \r\n    });*/\r\n  }\r\n\r\n  handleSave() {\r\n    let formvalue = JSON.parse(JSON.stringify(this.state.formvalue));\r\n    \r\n    if(this.handleValidation(formvalue)){\r\n      this.fnCleanData(formvalue, true)\r\n      if (this.state.event == \"Edit\") {\r\n        let id = formvalue[\"id\"];\r\n        delete formvalue[\"id\"]\r\n        this.fnCleanData(formvalue, true);\r\n        this.props.UpdateData({\r\n          root: this.state.root,\r\n          body: formvalue,\r\n          querydata: { \"id\": id }\r\n        }, function (data) {\r\n          if(data.data.status === 200) \r\n            toast(\"Queue updated successfully!\", { type: 'success' });\r\n          else \r\n            toast.error(\"Queue could not be updated\"); \r\n        });\r\n        \r\n        this.props.addRecord({\r\n          root: \"History\",\r\n          body: {\r\n            module: \"InboundQueueMaster\",\r\n            action:\"Edit\",\r\n            od: this.state.od,\r\n            nd: formvalue,\r\n            ts: new Date(),\r\n            by: getuser().UserID\r\n          }\r\n        });\r\n\r\n        this.props.UpdateData({\r\n          root: 'CampaignRoute',\r\n          body: { \"server_ip\": formvalue[\"server_ip\"] },\r\n          querydata: { \"campaign_name\": formvalue[\"queuename\"] }\r\n        });\r\n        this.props.UpdateData({\r\n          root: 'QueueRoute',\r\n          body: { \"serverip\": formvalue[\"server_ip\"], \"isMobile\":formvalue[\"IsMobile\"] },\r\n          querydata: { \"queuename\": formvalue[\"queuename\"] }\r\n        });\r\n\r\n      } else {\r\n        let formvalue = JSON.parse(JSON.stringify(this.state.formvalue));\r\n        //formvalue[\"CreatedOn\"] = new Date();\r\n        delete formvalue[\"id\"]\r\n        this.fnCleanData(formvalue, false);\r\n        this.props.InsertData({\r\n          root: this.state.root,\r\n          body: formvalue\r\n        }, function (data) {\r\n          if(data.data.status === 200) \r\n            toast(\"Queue added successfully!\", { type: 'success' });\r\n          else \r\n            toast.error(\"Queue could not be added\"); \r\n        });\r\n        \r\n        this.props.addRecord({\r\n          root: \"History\",\r\n          body: {\r\n            module: \"InboundQueueMaster\",\r\n            action:\"Add\",\r\n            od: {},\r\n            nd: formvalue,\r\n            ts: new Date(),\r\n            by: getuser().UserID\r\n          }\r\n        });\r\n\r\n        this.props.InsertData({\r\n          root: 'CampaignRoute',\r\n          body: { \"campaign_name\": formvalue[\"queuename\"], \"server_ip\": formvalue[\"server_ip\"], \"context\":formvalue[\"queuename\"] }\r\n        });\r\n        this.props.InsertData({\r\n          root: 'QueueRoute',\r\n          body: { \"queuename\": formvalue[\"queuename\"], \"serverip\": formvalue[\"server_ip\"], \"isMobile\":formvalue[\"IsMobile\"] }\r\n        });\r\n      }\r\n      this.setState({ showModal: false });\r\n    }\r\n  }\r\n  handleChange = (e,props) => {\r\n    let formvalue = this.state.formvalue;\r\n    \r\n    if (e.target && e.target.type == \"checkbox\") {\r\n      formvalue[e.target.id] = e.target.checked;\r\n    }\r\n    else if(e._isAMomentObject){\r\n      formvalue[props] = e.format()\r\n    }\r\n    else {\r\n      formvalue[e.target.id] = e.target.value;\r\n    }\r\n\r\n    this.setState({ formvalue: formvalue });\r\n  }\r\n\r\n  handleValidation(formvalue){\r\n      let errors = {};\r\n      let formIsValid = true;\r\n      \r\n      if(!formvalue[\"queuename\"]){\r\n          formIsValid = false;\r\n          //errors[\"queuename\"] = \"This field is required\";\r\n          toast.error(\"Queue name field is required\"); \r\n      }\r\n      \r\n      if(!formvalue[\"product\"]){\r\n          formIsValid = false;\r\n          toast.error(\"Product field is required\"); \r\n      }\r\n      \r\n      if(!formvalue[\"group_name\"]){\r\n          formIsValid = false;\r\n          toast.error(\"Group name field is required\"); \r\n      }\r\n      \r\n      if(!formvalue[\"type\"]){\r\n          formIsValid = false;\r\n          toast.error(\"Type field is required\"); \r\n      }\r\n      \r\n      if(!formvalue[\"ctc_process_type\"]){\r\n          formIsValid = false;\r\n          toast.error(\"CTC process type field is required\"); \r\n      }\r\n      \r\n      if(!formvalue[\"server_ip\"]){\r\n          formIsValid = false;\r\n          toast.error(\"Server IP field is required\"); \r\n      }\r\n    \r\n      //this.setState({errors: errors});\r\n      return formIsValid;\r\n  }\r\n\r\n  fnCleanData(formvalue, IsUpdate) {\r\n    formvalue = fnCleanData(this.columnlist, formvalue, IsUpdate);\r\n    this.setState({ formvalue: formvalue });\r\n  }\r\n\r\n  render() {\r\n    const columns = this.fnDatatableCol();\r\n    const { items, PageTitle, showModal, FormTitle, formvalue,event } = this.state;\r\n    \r\n    return (\r\n      <>\r\n        <div className=\"content\">\r\n          <ToastContainer />\r\n          <Row>\r\n            <Col md=\"12\">\r\n              <Card>\r\n                <CardHeader>\r\n                  <Row>\r\n                    <Col md={11}>\r\n\r\n                      <CardTitle tag=\"h4\">{PageTitle}</CardTitle>\r\n                    </Col>\r\n                    <Col md={1}>\r\n                      <Button variant=\"primary\" onClick={this.handleShow}>ADD</Button>\r\n                    </Col>\r\n                  </Row>\r\n                </CardHeader>\r\n                <CardBody>\r\n                  <DataTable\r\n                    columns={columns}\r\n                    data={items}\r\n                  />\r\n                </CardBody>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n\r\n          <Modal show={showModal} onHide={this.handleClose} dialogClassName=\"modal-90w\">\r\n            <Modal.Header closeButton>\r\n              <Modal.Title>{FormTitle}</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n              <Form>\r\n                <Row>\r\n                  {this.columnlist.map(col => (\r\n                    fnRenderfrmControl(col, formvalue, this.handleChange,event)\r\n                  ))}\r\n                </Row>\r\n              </Form>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n              <Button variant=\"secondary\" onClick={this.handleClose}>\r\n                Close\r\n              </Button>\r\n              <Button variant=\"primary\" onClick={this.handleSave}>\r\n                Save Changes\r\n            </Button>\r\n            </Modal.Footer>\r\n          </Modal>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    CommonData: state.CommonData\r\n  };\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    GetCommonData,\r\n    GetMySqlData,\r\n    InsertData,\r\n    UpdateData,\r\n    addRecord,\r\n    //GetCommonDataMongo\r\n  }\r\n)(ManageIBQueueMaster);","import axios from \"axios\";\nimport config from \"../../config.jsx\";\nimport constants from \"../../Constants/Constants.jsx\";\n\nconst GetCommonData_fetched = Todos => {\n\n  if (Todos.dataToSend.state && Todos.dataToSend.statename) {\n    localStorage.setItem(Todos.dataToSend.statename, JSON.stringify(Todos.data));\n  }\n\n  return {\n    type: constants.GET_COMMON_SUCCESS,\n    payload: Todos.data,\n    root: Todos.dataToSend.root\n  };\n};\n\nconst GetCommonData_fetch_error = error => {\n  return {\n    type: constants.GET_COMMON_FAIL,\n    payload: error\n  };\n};\n\nexport const GetMySqlData = (dataToSend,cb) => {\n\n  if (dataToSend.data != null || dataToSend.data != undefined) {\n    return function (dispatch, getState) {\n      dispatch(GetCommonData_fetched({ data: dataToSend.data, dataToSend: dataToSend }));\n    };\n  }\n  try {\n    if ((dataToSend.state && localStorage.getItem(dataToSend.statename)) || localStorage.getItem(dataToSend.statename)) {\n\n      return function (dispatch, getState) {\n        let data = JSON.parse(localStorage.getItem(dataToSend.statename))\n        dispatch(GetCommonData_fetched({ data: data, dataToSend: dataToSend }));\n      }\n    }\n  }\n  catch (e) {\n\n  }\n\n\n  return function (dispatch, getState) {\n    axios\n      .get(config.api.base_url + \"/mydb/list/\", {\n        params: dataToSend\n      })\n      .then(data => {\n        if (dataToSend.state && dataToSend.statename) {\n          localStorage.setItem(dataToSend.statename, JSON.stringify(data.data.data));\n        }\n        if (cb) {\n          cb(data);\n        }\n        dispatch(GetCommonData_fetched({ data: data.data.data[0], dataToSend: dataToSend }));\n      })\n      .catch(error => {\n        dispatch(GetCommonData_fetch_error(error, dataToSend));\n      });\n  };\n};\n\n\n\n\nconst InsertData_fetched = Todos => {\n\n  return {\n    type: constants.INSERT_COMMON_SUCCESS,\n    payload: Todos.data\n  };\n};\n\nconst InsertData_fetch_error = error => {\n  return {\n    type: constants.INSERT_COMMON_FAIL,\n    payload: error\n  };\n};\n\nexport const InsertData = (dataToSend, cb) => {\n  return function (dispatch, getState) {\n    axios\n      .post(config.api.base_url + \"/mydb/insert/\", {\n        data: dataToSend\n      })\n      .then(data => {\n        if (cb) {\n          cb(data);\n        }\n        dispatch(InsertData_fetched({ data: data.data }));\n      })\n      .catch(error => {\n        dispatch(InsertData_fetch_error(error));\n      });\n  };\n};\n\n\nconst UpdateData_fetched = Todos => {\n\n  return {\n    type: constants.UPDATE_COMMON_SUCCESS,\n    payload: Todos.data\n  };\n};\n\nconst UpdateData_fetch_error = error => {\n  return {\n    type: constants.UPDATE_COMMON_FAIL,\n    payload: error\n  };\n};\n\nexport const UpdateData = (dataToSend, cb) => {\n\n  return function (dispatch, getState) {\n    axios\n      .post(config.api.base_url + \"/mydb/update/\", {\n        data: dataToSend\n      })\n      .then(data => {\n        if (cb) {\n          cb(data);\n        }\n        dispatch(UpdateData_fetched({ data: data.data }));\n      })\n      .catch(error => {\n        dispatch(UpdateData_fetch_error(error));\n      });\n  };\n};\n\n\n\n\nexport const GetDataDirect = (dataToSend, cb) => {\n\n  try {\n    if ((dataToSend.state && localStorage.getItem(dataToSend.statename)) || localStorage.getItem(dataToSend.statename)) {\n\n      let data = JSON.parse(localStorage.getItem(dataToSend.statename));\n      cb(data);\n      return;\n    }\n  }\n  catch (e) {\n\n  }\n  //return function (dispatch, getState) {\n  axios\n    .get(config.api.base_url + \"/mydb/list/\", {\n      params: dataToSend\n    })\n    .then(data => {\n      if (dataToSend.state && dataToSend.statename) {\n        localStorage.setItem(dataToSend.statename, JSON.stringify(data.data.data));\n      }\n      cb(data.data.data);\n\n      //dispatch(GetCommonData_fetched({ data: data.data.data[0], dataToSend: dataToSend }));\n    })\n    .catch(error => {\n      //dispatch(GetCommonData_fetch_error(error, dataToSend));\n    });\n  //};\n\n};\n\nexport const GetRealTimeAgentData = (manager, context, cb) => {\n\n  let url = config.api.realtimeurl + \"RealTimeAgentStatus?managercode=\" + (context == \"\" ? manager : \"\") + \"&context=\" + context;\n\n  axios\n    .get(url)\n    .then(data => {\n\n      cb(data);\n      //dispatch(GetCommonData_fetched({ data: data.data.data[0], dataToSend: dataToSend }));\n    })\n    .catch(error => {\n      //dispatch(GetCommonData_fetch_error(error, dataToSend));\n    });\n  //};\n\n};\n\nexport const GetRealTimeTotalData = (context, cb) => {\n\n  let url = config.api.realtimeurl + \"RealTimeData?context=\" + context;\n\n  axios\n    .get(url)\n    .then(data => {\n\n      cb(data);\n      //dispatch(GetCommonData_fetched({ data: data.data.data[0], dataToSend: dataToSend }));\n    })\n    .catch(error => {\n      //dispatch(GetCommonData_fetch_error(error, dataToSend));\n    });\n  //};\n\n};\n\n\nexport const SendOTP = (dataToSend, cb) => {\n  let url = config.api.SendOTP;\n  const headers = {\n    'Content-Type': 'application/json',\n    'Authorization': 'cG9saWN5 YmF6YWFy'\n  }\n  axios\n    .post(url,\n      dataToSend\n      , {\n        headers: headers\n      })\n    .then(data => {\n\n      cb(data);\n    })\n    .catch(error => {\n    });\n};\n\nexport const ValidateOTP = (dataToSend, cb) => {\n  let url = config.api.ValidateOTP;\n  const headers = {\n    'Content-Type': 'application/json',\n    'Authorization': 'cG9saWN5 YmF6YWFy'\n  }\n  axios\n    .post(url,\n      dataToSend\n      , {\n        headers: headers\n      })\n    .then(data => {\n\n      cb(data);\n    })\n    .catch(error => {\n    });\n};\n\nexport const GetComunicationData = (dataToSend, cb) => {\n\n  return function (dispatch, getState) {\n    axios\n      .get(config.api.ServiceAPI + dataToSend.root, {\n        params: dataToSend.data\n      })\n      .then(data => {\n        cb(data);\n        //dispatch(GetCommonData_fetched({ data: data, dataToSend: dataToSend }));\n      })\n      .catch(error => {\n        dispatch(GetCommonData_fetch_error(error, dataToSend));\n      });\n  };\n};"],"sourceRoot":""}