{"version":3,"sources":["views/UploadIncentiveData.jsx","views/Common/AlertBox.jsx","store/actions/CommonMysqlAction.jsx","views/Common/ManagerHierarchy.jsx","views/Common/DropDownListMysql.jsx","views/Common/Date.jsx","views/RealTimePanel/RealTimePanel.jsx","views/Common/Loader.jsx","views/Common/ConfirmDialog.jsx","views/ProcessIncentiveFile.jsx"],"names":["UploadIncentiveData","props","handleStartDate","StartDateValue","setState","StartDate","isUpload","renderProcessFiles","state","root","PageTitle","selectedIvrProduct","ivrType","ivrProducts","addClass","UserId","selectedFile","uploadFile","ManagerId","DownloadedFile","ResponseData","UploadStatusColumns","moment","format","prodId","TypeAwsoptions","IncentiveFileData","UploadFileList","config","data","Id","Display","ProductList","cols","con","dateRangeRef","React","createRef","this","UserList","columnlist","fnDatatableCol","managerid","getuser","UserID","event","console","log","target","files","e","preventDefault","formData","FormData","append","name","indexOf","parseInt","JSON","stringify","document","getElementById","innerHTML","PostIncentiveFormData","results","alert","value","bind","toast","type","to","download","ProductId","TypeId","IncentiveMonth","length","Object","entries","map","key","push","label","cell","row","className","Status","toString","searchable","columns","md","tag","onStartDate","Group","controlId","firstoption","valueTobefiltered","col","onChange","productchange","uploadfilechange","renderDownloadFile","renderMonthField","ref","onSubmit","onFileUpload","id","onFileChange","fileData","renderUploadStatus","Component","connect","CommonData","GetMySqlData","AlertBox","show","nextProps","setTimeout","variant","body","GetCommonData_fetched","Todos","dataToSend","statename","localStorage","setItem","constants","GET_COMMON_SUCCESS","payload","GetCommonData_fetch_error","error","GET_COMMON_FAIL","cb","undefined","dispatch","getState","getItem","parse","axios","get","api","base_url","params","then","catch","InsertData","post","INSERT_COMMON_SUCCESS","INSERT_COMMON_FAIL","InsertData_fetch_error","UpdateData","UPDATE_COMMON_SUCCESS","UPDATE_COMMON_FAIL","UpdateData_fetch_error","GetDataDirect","ManagerHierarchy","nodes","checked","expanded","RoleId","result","res","replace","handleShow","SelectedSupervisors","forceUpdate","style","right","checkeditem","index","splice","onMouseLeave","onMouseOut","onClick","onMouseEnter","onButtonClick","checkModel","showNodeIcon","onCheck","onExpand","showExpandAll","DropDownListMysql","items","CallApi","isError","Idfield","Displayfield","limit","skip","visible","Control","as","disabled","item","Date","handleStartDateChange","_isAMomentObject","startdate","enddate","add","handleEndDateChange","onEndDate","validation","currentDate","isBefore","validationEndDate","dateFormat","RealTimePanel","AgentData","TotalData","onBarge","winactive","BargeWith","statuschange","_handleKeyDown","userAgent","schdular","selector","sortable","width","bargecall","Barge","aria-hidden","displayStatus","AgentCode","LastUpdatedOn","utc","from","ServerTime","hhmmss","TotalTalkTime","m","setInterval","hasFocus","window","addEventListener","context","c","GetRealTimeTotalData","user","join","EmployeeId","GetRealTimeAgentData","clearInterval","hangup","BargeWithAgent","unbargecall","toUpperCase","User","Pass","Realm","Asterisk_Url","WSServer","LoginAsteriskServer","CallingCompany","DIDNo","call","onsuccess","onerror","media","remote","audio","ua","uri","wsServers","authorizationUser","password","Web","Simple","on","stream","isRegistered","alldata","forEach","element","answered","unanswered","totalAgents","waitingCalls","totalAvailableAgents","totalcolumnlist","filterdata","required","onKeyDown","username","placeholder","_handleOnClick","pagination","striped","noHeader","highlightOnHover","dense","GetCommonData","GetCommonspData","ShowDetail","ConfirmDialog","title","message","isLoading","onCancel","onConfirm","onHide","handleClose","Header","closeButton","Title","Body","Footer","handleConfirm","ProcessIncentiveFile","isLoaded","showModal","activePage","FormTitle","formvalue","ModalValueChanged","ResetTokenData","ConfirmationOpen","processedFileModal","ProcessInfoData","confirm","selectedrow","Cell","v","substring","hide","FileName","UserName","TypeName","StatusId","showConfirmationModal","joinObject","fnBindRootData","GetIncentiveFiles","prevProps","selectedRow","processFile","ProcessUploadIncentiveFile","fnBindStore","IsUpdate","fnCleanData","ProcessStatusColumns","status","processfilecolumns","handleConfirmOk","hideConfirmationModal","class","height","handleProcessedFilePopup","dialogClassName","renderModalProcessFile","addRecord"],"mappings":"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","file":"static/js/22.70b24f70.chunk.js","sourcesContent":["import React from \"react\";\nimport {\n    GetCommonData, GetCommonspData, GetFileExists, PostIncentiveFormData\n} from \"../store/actions/CommonAction\";\nimport {\n    GetMySqlData, GetDataDirect\n} from \"../store/actions/CommonMysqlAction\";\nimport { connect } from \"react-redux\";\nimport { getuser, fnDatatableCol, joinObject } from '../utility/utility.jsx';\nimport DropDownListMysql from './Common/DropDownListMysql';\nimport MultiSelect from \"react-multi-select-component\";\nimport DropDown from './Common/DropDownList';\nimport RealTimePanel from './RealTimePanel/RealTimePanel';\nimport ProcessIncentiveFile from './ProcessIncentiveFile';\nimport { If, Then, Else } from 'react-if';\nimport AlertBox from './Common/AlertBox';\nimport DataTable from './Common/DataTableWithFilter';\nimport Date from \"./Common/Date\"\nimport moment from 'moment';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { Link } from 'react-router-dom'\n\n\n// reactstrap components\nimport {\n    Card,\n    CardHeader,\n    CardBody,\n    CardTitle,\n    Table,\n    Row,\n    Col\n} from \"reactstrap\";\nimport { ButtonGroup, Button, Modal, Form } from 'react-bootstrap';\nimport { func, string } from \"prop-types\";\n\nclass UploadIncentiveData extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            root: \"\",\n            PageTitle: \"\",\n            selectedIvrProduct: \"\",\n            ivrType: \"0\",\n            ivrProducts: [],\n            addClass: '',\n            UserId: '',\n            selectedFile: null,\n            uploadFile: '',\n            ManagerId: '',\n            DownloadedFile: '',\n            ResponseData:'',\n            UploadStatusColumns: [],\n            StartDate: moment().format(\"YYYY-MM-01\"),\n            prodId: '',\n            TypeAwsoptions : [8,9,10,15,16],\n            IncentiveFileData: [],\n            isUpload: false,\n        };\n\n        this.UploadFileList = {\n            config:\n            {\n                data: [{ Id: 1, Display: \"First Premium Paid only\" }, { Id: 2, Display: \"Free Look Cancellation\" }, { Id: 3, Display: \"Quality Score\" }\n                , { Id: 4, Display: \"Warning Letters\" }, { Id: 5, Display: \"Arrears and Claw backs\" }, { Id: 6, Display: \"Incentivemade\" }\n                , { Id: 7, Display: \"Payout\" }, { Id: 8, Display: \"DocuploadData\" } , { Id: 9, Display: \"SI\" }, {Id: 14, Display: \"E2E\"}\n                , { Id: 10, Display: \"Selections\" }, { Id: 12, Display: \"Other Incentive\" }, { Id: 11, Display: \"Agent Salary\" },\n                { Id: 13, Display: \"User Group\" },{Id: 15, Display: \"BookingSection\"},{Id: 16, Display: \"AgentSection\"}],\n            }\n        };\n     \tthis.ProductList = {\n            config:\n            {\n              root: \"Products\",\n              cols: [\"ID AS Id\", \"ProductName AS Display\"],\n              con: [{ \"Isactive\": 1 }],\n            }\n  \t\t };\t\t\n        this.dateRangeRef = React.createRef();    \n\n    }\n\n    componentDidMount() {\n        this.UserList();\n    }\n\n    fnDatatableCol(columnlist) {\n\n        var columns = fnDatatableCol(columnlist);\n        return columns;\n    }\n\n    UserList() {;\n        const user = getuser();\n        var managerid = user.UserID;\n        this.setState({ManagerId : managerid});\n    }\n\n    // On file select (from the pop up) \n    onFileChange(event) { ;\n        console.log(event.target.files[0]);\n        // Update the state \n        this.setState({ selectedFile: event.target.files[0], isUpload: false }); \n       \n    }; \n\n    // On file upload (click the upload button) \n    onFileUpload(e)\n    {   \n        e.preventDefault();\n         ;\n        if (this.state.prodId == '') {\n        toast(\"Please choose Product\", { type: 'error' });\n        return;\n        }\n        if (this.state.uploadFile == '') {\n        toast(\"Please select Upload File Type\", { type: 'error' });\n        return;\n        }\n        if (this.state.selectedFile == null) {\n        toast(\"Please choose Excel File\", { type: 'error' });\n        return;\n        }\n        // Create an object of formData \n        const formData = new FormData(); \n        console.log(formData);\n        // Update the formData object \n        formData.append( \n          \"myFile\", \n          this.state.selectedFile, \n          this.state.selectedFile.name \n        ); \n        formData.append('TypeId', this.state.uploadFile); \n        formData.append('UserId', this.state.ManagerId);\n        formData.append('ProductId', this.state.prodId);  \n        formData.append('ValidFrom', moment(this.state.StartDate).format(\"YYYY-MM-01\"));    \n        if(this.state.TypeAwsoptions.indexOf(parseInt(this.state.uploadFile)) > -1){\n            formData.append('TypeIsXml', JSON.stringify(false)); \n        }else{\n            formData.append('TypeIsXml', JSON.stringify(true)); \n        }\n               \n        // Details of the uploaded file \n        console.log(this.state.selectedFile);      \n        document.getElementById('uploadbutton').innerHTML = 'Upload! <i class=\"fa fa-spinner fa-spin\"></i>';\n        // Request made to the backend api \n        // Send formData object \n        PostIncentiveFormData(formData, function (results) {\n            console.log(results);\n            document.getElementById('uploadbutton').innerHTML = 'Upload!';\n            this.setState({ ResponseData: results.data.data , isUpload: true, selectedFile : null});\n            alert('File uploaded');\n            ;\n            document.getElementById('files-upload').value = null;\n\n\n            this.renderProcessFiles();\n\n        }.bind(this));\n\n    }\n\n    fileData() \n    {      ;\n        if (this.state.selectedFile) { \n            \n          return ( \n            <div> \n              {/* <span>File Details:</span>  */}\n              <span>File Name: {this.state.selectedFile.name}</span> \n              <p>File Type: {this.state.selectedFile.type}</p> \n              {/* <p> \n                Last Modified:{\" \"} \n                {this.state.selectedFile.lastModifiedDate.toDateString()} \n              </p>  */}\n            </div> \n          ); \n        } else { \n          return ( \n            <div> \n              <br /> \n              <h4>Choose before Pressing the Upload button</h4> \n            </div> \n          ); \n        } \n    } \n\n    uploadfilechange(e, props){;\n        this.setState({\n            uploadFile: e.target.value,\n            DownloadedFile: '',\n            isUpload: false\n         }, () => {\n            this.renderProcessFiles();\n        });\n         if(e.target.value == 1){\n             this.setState({DownloadedFile : \"/SampleExcelfiles/FirstPremPaid.xlsx\"});\n         }else if(e.target.value == 2){\n            this.setState({DownloadedFile : \"/SampleExcelfiles/FreeLookCancellation.xlsx\"});\n         }\n         else if(e.target.value == 3){\n            this.setState({DownloadedFile : \"/SampleExcelfiles/AgentScore.xlsx\"});\n         }\n         else if(e.target.value == 4){\n            this.setState({DownloadedFile : \"/SampleExcelfiles/agentwarnings.xlsx\"});\n         }\n         else if(e.target.value == 5){\n            this.setState({DownloadedFile : \"/SampleExcelfiles/Arrears.xlsx\"});\n         }\n         else if(e.target.value == 6){\n            this.setState({DownloadedFile : \"/SampleExcelfiles/incentive.xlsx\"});\n         }\n         else if(e.target.value == 7){\n            this.setState({DownloadedFile : \"/SampleExcelfiles/payout.xlsx\"});\n         }\n         else if(e.target.value == 12){\n            this.setState({DownloadedFile : \"/SampleExcelfiles/OtherIncentive.xlsx\"});\n         }\n         else if(e.target.value == 11){\n            this.setState({DownloadedFile : \"/SampleExcelfiles/UploadCTC.xlsx\"});\n         }\n         else if(e.target.value == 13){\n            this.setState({DownloadedFile : \"/SampleExcelfiles/uploadUserGroup.xlsx\"});\n         }\n         else if(e.target.value == 14){\n            this.setState({DownloadedFile : \"/SampleExcelfiles/E2E.xlsx\"});\n         }\n         else if(e.target.value == 15){\n            this.setState({DownloadedFile : \"/SampleExcelfiles/BookingSection.xlsx\"});\n         }\n         else if(e.target.value == 16){\n            this.setState({DownloadedFile : \"/SampleExcelfiles/AgentSection.xlsx\"});\n         }\n       \n    }\n\n    renderDownloadFile(){\n        if (this.state.DownloadedFile) {\n            return  <Link to={this.state.DownloadedFile} target=\"_blank\" download>Download Sample Excel File</Link>\n        }\n    }\n\n    renderProcessFiles(){;\n        if (this.state.prodId && this.state.uploadFile) {\n            return <ProcessIncentiveFile ProductId={this.state.prodId} TypeId={this.state.uploadFile} TypeAwsoptions={this.state.TypeAwsoptions}\n            IncentiveMonth={moment(this.state.StartDate).format(\"YYYY-MM-01\")} isUpload={this.state.isUpload}></ProcessIncentiveFile>\n        }\n    }\n\n    renderUploadStatus() {;\n\n        if (this.state.ResponseData && this.state.ResponseData.length > 0) {\n            let UploadStatusColumns = [];\n            let ResponseData = this.state.ResponseData;\n      \n            Object.entries(ResponseData[0]).map(([key,value])=>{\n                    if(key == 'Status'){                       \n                    UploadStatusColumns.push({ label: \"Status\",\n                                name: \"Status\",\n                                cell: row => <div className=\"Status\">{row.Status ? row.Status : \"N.A\"}</div>,\n                    })       \n                    }else if(key == 'FirstPremPaid' || key == 'FLC'){\n                        UploadStatusColumns.push({ label: key.toString(),\n                                name: key.toString(),\n                                type: \"bool\",\n                    })  \n                    }else{\n                    UploadStatusColumns.push({\n                    \"name\": key.toString(),\n                    \"label\": key.toString(),\n                     searchable: true,                    \n                    })\n                    }\n              })\n\n            const columns = this.fnDatatableCol(UploadStatusColumns);\n\n            return <Row>\n                <Col md=\"8\">\n                    <Card>\n                        <CardHeader>\n                            <Row>\n                                <Col md={8}>\n                                    <CardTitle tag=\"h6\">Upload Data Status</CardTitle>\n                                </Col>\n                            </Row>\n                        </CardHeader>\n                        <CardBody>\n                            <DataTable columns={columns} data={this.state.ResponseData} />\n                        </CardBody>\n                    </Card>\n                </Col>\n            </Row>\n        }\n\n        return null;\n\n    }\n\n    renderMonthField(){\n        let type = this.state.uploadFile\n        //if(type == 3 || type == 4 || type ==5 || type ==6 || type ==7 || type ==8){\n            return  <Col md={2}><Date onStartDate={this.handleStartDate.bind(this)}> </Date></Col>\n        //}\n    }\n\n    handleStartDate = (StartDateValue) => {;\n        this.setState({ StartDate: StartDateValue , isUpload: false}, () => {\n            this.renderProcessFiles();\n        });\n    }\n\n    productchange(e, props) {\n        this.setState({ prodId: e.target.value, isUpload: false }, () => {\n            this.renderProcessFiles();\n        });\n    }\n    render() {\n        return (\n            <>\n                <div className=\"content\">\n                    <ToastContainer />\n                    <Row>\n                        <Col md=\"12\">\n                            {/* <Card> */}\n                                <CardHeader>                                    \n                                    <Row>\n                                    <Col md={2}>\n                                            <Form.Group controlId=\"product_dropdown\">\n                                                <DropDown firstoption=\"Select Product\" valueTobefiltered={[2,115,7]} col={this.ProductList} onChange={this.productchange.bind(this)}>\n                                                </DropDown>\n                                            </Form.Group>\n                                    </Col>\n                                    <Col md={3}>\n                                            <Form.Group controlId=\"upload_file_dropdown\">\n                                                <DropDown firstoption=\"Select Upload File\" value={this.state.uploadFile} col={this.UploadFileList} onChange={this.uploadfilechange.bind(this)}>\n                                                </DropDown>\n                                            </Form.Group>\n                                            {this.renderDownloadFile()}\n                                    </Col>                                 \n                                    {this.renderMonthField()}   \n                                    <form ref=\"form\" onSubmit={this.onFileUpload.bind(this)}>\n                                            <input type=\"file\" id=\"files-upload\" onChange={this.onFileChange.bind(this)} /> \n                                            <button type=\"submit\" id=\"uploadbutton\" className=\"btn btn-primary\">Upload!</button>\n                                    </form>\n                                    {/* <Col md={3}>\n                                            <Form.Group controlId=\"Incentivefile_upload\" >\n                                                <Form.Label><i>*</i> File Upload </Form.Label>\n                                                <input type=\"file\" onChange={this.onFileChange.bind(this)} /> \n                                            </Form.Group>\n                                    </Col>\n                                    <Col md={3}>\n                                    <Button onClick={this.onFileUpload.bind(this)}> Upload! </Button> \n                                    </Col> */}\n                                 \n                                    </Row>\n\n                                </CardHeader>\n                                </Col>\n                                </Row>\n                                {/* <CardBody> */}\n                                {this.fileData()}\n                                {this.renderProcessFiles()}\n                                {this.renderUploadStatus()}\n                                {/* </CardBody> */}\n                            {/* </Card> */}\n                       \n                 </div>\n            </>\n        );\n    }\n}\n\n\nfunction mapStateToProps(state) {\n    return {\n        CommonData: state.CommonData\n    };\n}\n\nexport default connect(\n    mapStateToProps,\n    {\n        GetMySqlData,\n    }\n)(UploadIncentiveData);","\r\nimport React from \"react\";\r\nimport { Alert } from 'react-bootstrap';\r\n\r\n\r\nclass AlertBox extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            show: this.props.show\r\n        }\r\n    }\r\n    componentDidUpdate() {\r\n\r\n    }\r\n    componentWillReceiveProps(nextProps) {\r\n        this.setState({ show: nextProps.show });\r\n        if (nextProps.show) {\r\n            setTimeout(function () {\r\n                this.setState({ show: false });\r\n            }.bind(this), 5000);\r\n        }\r\n    }\r\n    render() {\r\n        if (this.state.show) {\r\n            return (\r\n                <Alert variant={this.props.variant}>\r\n                    {this.props.body}\r\n                </Alert>\r\n            );\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n}\r\n\r\nexport default AlertBox;\r\n","import axios from \"axios\";\nimport config from \"../../config.jsx\";\nimport constants from \"../../Constants/Constants.jsx\";\n\nconst GetCommonData_fetched = Todos => {\n\n  if (Todos.dataToSend.state && Todos.dataToSend.statename) {\n    localStorage.setItem(Todos.dataToSend.statename, JSON.stringify(Todos.data));\n  }\n\n  return {\n    type: constants.GET_COMMON_SUCCESS,\n    payload: Todos.data,\n    root: Todos.dataToSend.root\n  };\n};\n\nconst GetCommonData_fetch_error = error => {\n  return {\n    type: constants.GET_COMMON_FAIL,\n    payload: error\n  };\n};\n\nexport const GetMySqlData = (dataToSend,cb) => {\n\n  if (dataToSend.data != null || dataToSend.data != undefined) {\n    return function (dispatch, getState) {\n      dispatch(GetCommonData_fetched({ data: dataToSend.data, dataToSend: dataToSend }));\n    };\n  }\n  try {\n    if ((dataToSend.state && localStorage.getItem(dataToSend.statename)) || localStorage.getItem(dataToSend.statename)) {\n\n      return function (dispatch, getState) {\n        let data = JSON.parse(localStorage.getItem(dataToSend.statename))\n        dispatch(GetCommonData_fetched({ data: data, dataToSend: dataToSend }));\n      }\n    }\n  }\n  catch (e) {\n\n  }\n\n\n  return function (dispatch, getState) {\n    axios\n      .get(config.api.base_url + \"/mydb/list/\", {\n        params: dataToSend\n      })\n      .then(data => {\n        if (dataToSend.state && dataToSend.statename) {\n          localStorage.setItem(dataToSend.statename, JSON.stringify(data.data.data));\n        }\n        if (cb) {\n          cb(data);\n        }\n        dispatch(GetCommonData_fetched({ data: data.data.data[0], dataToSend: dataToSend }));\n      })\n      .catch(error => {\n        dispatch(GetCommonData_fetch_error(error, dataToSend));\n      });\n  };\n};\n\n\n\n\nconst InsertData_fetched = Todos => {\n\n  return {\n    type: constants.INSERT_COMMON_SUCCESS,\n    payload: Todos.data\n  };\n};\n\nconst InsertData_fetch_error = error => {\n  return {\n    type: constants.INSERT_COMMON_FAIL,\n    payload: error\n  };\n};\n\nexport const InsertData = (dataToSend, cb) => {\n  return function (dispatch, getState) {\n    axios\n      .post(config.api.base_url + \"/mydb/insert/\", {\n        data: dataToSend\n      })\n      .then(data => {\n        if (cb) {\n          cb(data);\n        }\n        dispatch(InsertData_fetched({ data: data.data }));\n      })\n      .catch(error => {\n        dispatch(InsertData_fetch_error(error));\n      });\n  };\n};\n\n\nconst UpdateData_fetched = Todos => {\n\n  return {\n    type: constants.UPDATE_COMMON_SUCCESS,\n    payload: Todos.data\n  };\n};\n\nconst UpdateData_fetch_error = error => {\n  return {\n    type: constants.UPDATE_COMMON_FAIL,\n    payload: error\n  };\n};\n\nexport const UpdateData = (dataToSend, cb) => {\n\n  return function (dispatch, getState) {\n    axios\n      .post(config.api.base_url + \"/mydb/update/\", {\n        data: dataToSend\n      })\n      .then(data => {\n        if (cb) {\n          cb(data);\n        }\n        dispatch(UpdateData_fetched({ data: data.data }));\n      })\n      .catch(error => {\n        dispatch(UpdateData_fetch_error(error));\n      });\n  };\n};\n\n\n\n\nexport const GetDataDirect = (dataToSend, cb) => {\n\n  try {\n    if ((dataToSend.state && localStorage.getItem(dataToSend.statename)) || localStorage.getItem(dataToSend.statename)) {\n\n      let data = JSON.parse(localStorage.getItem(dataToSend.statename));\n      cb(data);\n      return;\n    }\n  }\n  catch (e) {\n\n  }\n  //return function (dispatch, getState) {\n  axios\n    .get(config.api.base_url + \"/mydb/list/\", {\n      params: dataToSend\n    })\n    .then(data => {\n      if (dataToSend.state && dataToSend.statename) {\n        localStorage.setItem(dataToSend.statename, JSON.stringify(data.data.data));\n      }\n      cb(data.data.data);\n\n      //dispatch(GetCommonData_fetched({ data: data.data.data[0], dataToSend: dataToSend }));\n    })\n    .catch(error => {\n      //dispatch(GetCommonData_fetch_error(error, dataToSend));\n    });\n  //};\n\n};\n\nexport const GetRealTimeAgentData = (manager, context, cb) => {\n\n  let url = config.api.realtimeurl + \"RealTimeAgentStatus?managercode=\" + (context == \"\" ? manager : \"\") + \"&context=\" + context;\n\n  axios\n    .get(url)\n    .then(data => {\n\n      cb(data);\n      //dispatch(GetCommonData_fetched({ data: data.data.data[0], dataToSend: dataToSend }));\n    })\n    .catch(error => {\n      //dispatch(GetCommonData_fetch_error(error, dataToSend));\n    });\n  //};\n\n};\n\nexport const GetRealTimeTotalData = (context, cb) => {\n\n  let url = config.api.realtimeurl + \"RealTimeData?context=\" + context;\n\n  axios\n    .get(url)\n    .then(data => {\n\n      cb(data);\n      //dispatch(GetCommonData_fetched({ data: data.data.data[0], dataToSend: dataToSend }));\n    })\n    .catch(error => {\n      //dispatch(GetCommonData_fetch_error(error, dataToSend));\n    });\n  //};\n\n};\n\n\nexport const SendOTP = (dataToSend, cb) => {\n  let url = config.api.SendOTP;\n  const headers = {\n    'Content-Type': 'application/json',\n    'Authorization': 'cG9saWN5 YmF6YWFy'\n  }\n  axios\n    .post(url,\n      dataToSend\n      , {\n        headers: headers\n      })\n    .then(data => {\n\n      cb(data);\n    })\n    .catch(error => {\n    });\n};\n\nexport const ValidateOTP = (dataToSend, cb) => {\n  let url = config.api.ValidateOTP;\n  const headers = {\n    'Content-Type': 'application/json',\n    'Authorization': 'cG9saWN5 YmF6YWFy'\n  }\n  axios\n    .post(url,\n      dataToSend\n      , {\n        headers: headers\n      })\n    .then(data => {\n\n      cb(data);\n    })\n    .catch(error => {\n    });\n};\n\nexport const GetComunicationData = (dataToSend, cb) => {\n\n  return function (dispatch, getState) {\n    axios\n      .get(config.api.ServiceAPI + dataToSend.root, {\n        params: dataToSend.data\n      })\n      .then(data => {\n        cb(data);\n        //dispatch(GetCommonData_fetched({ data: data, dataToSend: dataToSend }));\n      })\n      .catch(error => {\n        dispatch(GetCommonData_fetch_error(error, dataToSend));\n      });\n  };\n};","\r\nimport React, { Suspense } from 'react';\r\n\r\nimport {\r\n    GetCommonData, GetCommonspData, GetDataDirect\r\n} from \"../../store/actions/CommonAction\";\r\nimport { getUrlParameter, getuser } from '../../utility/utility.jsx';\r\n\r\n\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport 'react-checkbox-tree/lib/react-checkbox-tree.css';\r\nimport CheckboxTree from 'react-checkbox-tree';\r\n\r\n\r\nclass ManagerHierarchy extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            nodes: [],\r\n            checked: [],\r\n            expanded: [],\r\n        }\r\n        //this.onExpand = this.onExpand.bind(this);\r\n    }\r\n    componentDidMount() {\r\n\r\n        let UserId = getuser().RoleId == 2 ? 75 : getuser().UserID;\r\n\r\n        GetDataDirect({\r\n            root: \"Hierarchy\",\r\n            ManagerId: UserId,\r\n            statename: \"Hierarchy-\" + UserId,\r\n            value: this.props.value,\r\n            state: true\r\n        }, function (result) {\r\n\r\n            let str = JSON.stringify(result);\r\n            var res = str.replace(/UserName/g, \"label\");\r\n            res = res.replace(this.props.value, \"value\");\r\n\r\n            this.setState({ nodes: JSON.parse(res) });\r\n        }.bind(this));\r\n    }\r\n    componentWillReceiveProps(nextProps) {\r\n\r\n    }\r\n\r\n\r\n    onButtonClick() {\r\n        this.props.handleShow({\r\n            SelectedSupervisors: this.state.checked\r\n        });\r\n        this.forceUpdate();\r\n    }\r\n    onMouseEnter(e) {\r\n        document.getElementById(\"floating\").style.right = 0\r\n        document.getElementById(\"handle\").style.right = \"395px\"\r\n        //e.target.style.right = 0;\r\n    }\r\n    onMouseOut(e) {\r\n        setTimeout(function () {\r\n            document.getElementById(\"floating\").style.right = \"-400px\"\r\n            document.getElementById(\"handle\").style.right = \"-15px\"\r\n        }, 700);\r\n\r\n        //e.target.style.right = \"-350px\";\r\n    }\r\n    RemoveChecked(checkeditem) {\r\n        const { checked } = this.state;\r\n        let index = checked.indexOf(checkeditem);\r\n        if (index > -1) {\r\n            checked.splice(index, 1);\r\n        }\r\n        this.setState(checked);\r\n    }\r\n    onClick() {\r\n\r\n    }\r\n    render() {\r\n        const { nodes, checked } = this.state;\r\n        if (nodes.length == 0) {\r\n            return null;\r\n        }\r\n        return (\r\n\r\n\r\n            <div id=\"floating\" className=\"floating\" onMouseLeave={this.onMouseOut}>\r\n\r\n                <Row >\r\n                    <Col md=\"8\"><div id=\"handle\" className=\"handle\" onClick={this.onMouseEnter}>Filter</div></Col>\r\n                    <Col md=\"4\"><input type=\"button\" className=\"btn btn-primary\" onClick={this.onButtonClick.bind(this)} value=\"Show\" /></Col>\r\n                </Row>\r\n\r\n                <Row>\r\n                    <Col>\r\n\r\n                        <div className=\"managers\">\r\n                            <CheckboxTree\r\n                                nodes={nodes}\r\n                                checked={this.state.checked}\r\n                                expanded={this.state.expanded}\r\n                                checkModel=\"all\"\r\n                                name=\"UserName\"\r\n                                showNodeIcon={false}\r\n                                onCheck={checked => this.setState({ checked })}\r\n                                onExpand={expanded => this.setState({ expanded })}\r\n                                showExpandAll={true}\r\n                            />\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n\r\n\r\n\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default ManagerHierarchy;\r\n","\r\nimport React from \"react\";\r\nimport { Form } from 'react-bootstrap';\r\nimport { connect } from \"react-redux\";\r\n// reactstrap components\r\n\r\nimport {\r\n    GetMySqlData\r\n} from \"../../store/actions/CommonMysqlAction\";\r\nclass DropDownListMysql extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            items: [],\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        if (this.state.items && this.state.items.length === 0) {\r\n            this.CallApi();\r\n        }\r\n    }\r\n    componentWillReceiveProps(nextProps) {\r\n        \r\n        // if (nextProps.col.config.rebind) {\r\n            \r\n        // }\r\n\r\n        if (!nextProps.CommonData.isError) {\r\n            //debugger;\r\n            if (nextProps.CommonData[this.props.col.config.root]) {\r\n                let str = JSON.stringify(nextProps.CommonData[this.props.col.config.root]);\r\n                var res = str.replace(this.props.col.config.Idfield, \"Id\");\r\n                res = res.replace(this.props.col.config.Displayfield, \"Display\");\r\n\r\n                this.setState({ items: JSON.parse(res) });\r\n            }\r\n        }\r\n    }\r\n\r\n    componentWillUpdate(){\r\n        //this.CallApi();\r\n    }\r\n\r\n    CallApi() {\r\n\r\n        this.props.GetMySqlData({\r\n            limit: 10,\r\n            skip: 0,\r\n            root: this.props.col.config.root,\r\n            cols: this.props.col.config.cols,\r\n            con: this.props.col.config.con,\r\n            data: this.props.col.config.data,\r\n            statename: this.props.col.config.statename,\r\n            state: this.props.col.config.state\r\n        });\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        let { items } = this.state;\r\n        const { value, onChange, visible } = this.props;\r\n\r\n        if (!items) {\r\n            items = [];\r\n        }\r\n        if (visible == false) {\r\n            return null;\r\n        }\r\n        return (\r\n\r\n            <div>\r\n\r\n                <Form.Control as=\"select\" disabled={this.props.disabled} value={value} name={this.props.col.name} onChange={onChange}>\r\n                    <option key={0} value={0}>{this.props.firstoption ? this.props.firstoption : \"Select\"}</option>\r\n                    {items.map(item => (\r\n                        <option key={item.Id} value={item.Id}>{item.Display}</option>\r\n                    ))}\r\n\r\n                </Form.Control>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        CommonData: state.CommonData\r\n    };\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    {\r\n        GetMySqlData\r\n    }\r\n)(DropDownListMysql);\r\n\r\n","\r\nimport React from \"react\";\r\nimport { Form } from 'react-bootstrap';\r\n\r\n// reactstrap components\r\nimport moment from 'moment';\r\n\r\nimport * as Datetime from 'react-datetime';\r\nimport 'react-datetime/css/react-datetime.css'\r\n\r\n\r\nimport { Row, Col } from 'react-bootstrap';\r\n\r\n\r\n\r\nclass Date extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleStartDateChange = this.handleStartDateChange.bind(this);\r\n        this.handleEndDateChange = this.handleEndDateChange.bind(this);\r\n\r\n        this.state = {\r\n            startdate: moment().format(\"YYYY-MM-DD\"),            \r\n        }\r\n    }\r\n    componentDidMount() {\r\n\r\n    }\r\n    componentWillReceiveProps(nextProps) {\r\n\r\n    }\r\n\r\n    handleStartDateChange = (e, props) => {\r\n        if (e._isAMomentObject) {\r\n            this.props.onStartDate(e.format(\"YYYY-MM-DD\"));\r\n            this.setState({ startdate: e.format(\"YYYY-MM-DD\"), enddate: e.add(30, 'days').format(\"YYYY-MM-DD\") }, function () {\r\n            });\r\n        }\r\n    }\r\n\r\n    handleEndDateChange = (e, props) => {\r\n        if (e._isAMomentObject) {\r\n            this.props.onEndDate(e.format(\"YYYY-MM-DD\"));\r\n            this.setState({ enddate: e.format(\"YYYY-MM-DD\") }, function () {\r\n                //this.fetchCallBackData();\r\n            });\r\n        }\r\n    }\r\n    validation = (currentDate) => {\r\n        return currentDate.isBefore(moment());\r\n    };\r\n\r\n    validationEndDate = (currentDate) => {\r\n        \r\n\r\n        if (!currentDate.isBefore(moment(this.state.enddate))) {\r\n            return false;\r\n        }\r\n\r\n        if(currentDate.isBefore(moment(this.state.startdate))) {\r\n            return false;\r\n        }\r\n        \r\n        return true;\r\n        \r\n    };\r\n\r\n    getSelectedDateRange() {\r\n        return {\r\n            startdate: this.state.startdate,\r\n            enddate: this.state.enddate\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n\r\n        let { visible } = this.props;\r\n\r\n        if (visible == false) {\r\n            return null;\r\n        }\r\n        return (\r\n\r\n            <>\r\n                    <Form.Group controlId=\"startdate_field\">\r\n                        <Datetime value={new Date()}\r\n                            dateFormat=\"YYYY-MM-DD\"\r\n                            value={this.state.startdate}\r\n                            isValidDate={this.validation.bind(this)}\r\n                            onChange={moment => this.handleStartDateChange(moment)}\r\n                            utc={true}\r\n                            timeFormat={false}\r\n                            className=\"form-group\"\r\n                        />\r\n                    </Form.Group>\r\n            </>\r\n\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default Date;\r\n\r\n","import React from \"react\";\r\nimport {\r\n  GetCommonData, GetCommonspData, GetRealTimeAgentData, GetRealTimeTotalData\r\n} from \"../../store/actions/CommonAction\";\r\nimport { hhmmss, getuser } from '../../utility/utility.jsx';\r\nimport { connect } from \"react-redux\";\r\nimport DataTable from 'react-data-table-component';\r\nimport ManagerHierarchy from '../Common/ManagerHierarchy';\r\nimport Moment from 'react-moment';\r\nimport { Web } from \"sip.js\";\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n// reactstrap components\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  Row,\r\n  Col\r\n} from \"reactstrap\";\r\nimport { Form } from 'react-bootstrap';\r\n\r\nclass RealTimePanel extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      PageTitle: \"RealTime Panel\",\r\n      AgentData: [],\r\n      TotalData: [],\r\n      items: [],\r\n      key: \"ALL\",\r\n      onBarge: false,\r\n      SelectedSupervisors: [],\r\n      winactive: 0,\r\n      BargeWith: \"\"\r\n    };\r\n    this.handleShow = this.handleShow.bind(this);\r\n    this.statuschange = this.statuschange.bind(this);\r\n    this._handleKeyDown = this._handleKeyDown.bind(this);\r\n    //this.bargecall = this.bargecall.bind(this);\r\n    this.userAgent = null;\r\n    this.winactive = 0;\r\n    this.schdular = null;\r\n    this.columnlist = [\r\n      {\r\n        name: \"Barging\",\r\n        selector: \"Barging\",\r\n        sortable: true,\r\n        width: \"80px\",\r\n        cell: row =>\r\n          <div className={row.Status == \"BUSY\" ? \"\" : \"hide\"} >\r\n\r\n            <button onClick={(e) => this.bargecall(e, row)} className={row.Barge ? \"hide\" : \"show\"}><i className=\"fa fa-volume-up\" aria-hidden=\"true\"></i></button>\r\n\r\n\r\n          </div>\r\n      },\r\n      {\r\n        name: \"Agent Code\",\r\n        selector: \"AgentCode\",\r\n\r\n        sortable: true,\r\n      },\r\n      {\r\n        name: \"Status\",\r\n        selector: \"Status\",\r\n        sortable: true,\r\n\r\n        cell: row => <div className={this.displayStatus(row) + \" RealtimeStatus\"}>{this.displayStatus(row)}</div>\r\n      },\r\n      {\r\n        name: \"Agent Name\",\r\n        selector: \"AgentName\",\r\n        sortable: true,\r\n      },\r\n      {\r\n        name: \"Call Type\",\r\n        selector: \"CallType\",\r\n      },\r\n      {\r\n        name: \"Lead Id\",\r\n        selector: \"LeadId\",\r\n        sortable: true,\r\n      },\r\n      {\r\n        name: \"D.C.\",\r\n        selector: \"CallingCompany\",\r\n\r\n        sortable: true,\r\n      },\r\n      {\r\n        name: \"DIDNo\",\r\n        selector: \"DIDNo\",\r\n\r\n        sortable: true,\r\n      },\r\n      // {\r\n      //   name: \"Asterisk_Url\",\r\n      //   selector: \"Asterisk_Url\",\r\n      //   width: \"120px\",\r\n      //   sortable: true,\r\n      // },\r\n\r\n      // {\r\n      //   name: \"Last Updated On\",\r\n      //   selector: \"LastUpdatedOn\",\r\n      //   width: \"130px\",\r\n      //   sortable: true,\r\n      //   cell: row => <div className={row.AgentCode}>{row.LastUpdatedOn ? <Moment format=\"HH:mm:ss A\">{row.LastUpdatedOn}</Moment> : \"N.A\"}</div>\r\n      // },\r\n      {\r\n        name: \"Since\",\r\n        selector: \"LastUpdatedOn\",\r\n        sortable: true,\r\n        width: \"130px\",\r\n        cell: row => <div className={row.AgentCode}>{row.LastUpdatedOn ? <Moment utc={true} from={row.ServerTime}>{row.LastUpdatedOn}</Moment> : \"N.A\"}</div>\r\n      },\r\n      {\r\n        name: \"T Calls\",\r\n        selector: \"TotalCalls\",\r\n        width: \"70px\",\r\n        sortable: true,\r\n      },\r\n      {\r\n        name: \"U Dials\",\r\n        selector: \"UniqueDials\",\r\n        width: \"70px\",\r\n        sortable: true,\r\n      },\r\n      {\r\n        name: \"C Dials\",\r\n        selector: \"ConnectedDials\",\r\n        width: \"70px\",\r\n        sortable: true,\r\n      },\r\n      {\r\n        name: \"T TalkTime\",\r\n        selector: \"TotalTalkTime\",\r\n        sortable: true,\r\n        width: \"130px\",\r\n        cell: row => hhmmss(row.TotalTalkTime),\r\n      },\r\n\r\n    ];\r\n\r\n\r\n  }\r\n\r\n  componentDidMount() {\r\n\r\n    const user = getuser();\r\n    this.setState({ SelectedSupervisors: [this.props.m] }, function () {\r\n      this.UserList();\r\n    }.bind(this));\r\n\r\n    if (this.schdular == null) {\r\n      this.schdular = setInterval(function () {\r\n        //if (!this.state.onBarge) {\r\n        //if ((new Date()).getHours() >= 21 || (new Date()).getHours() < 9) {\r\n        if (this.state.winactive == 1 || document.hasFocus()) {\r\n          this.UserList();\r\n          //this.totalList();\r\n        }\r\n        // }\r\n        // else {\r\n        //   this.UserList();\r\n        //   this.totalList();\r\n        // }\r\n        //}\r\n      }.bind(this), 2500)\r\n\r\n      window.addEventListener(\"message\", function (event) {\r\n        if (event.data.type == \"checkactive\") {\r\n          this.setState({ winactive: event.data.winactive })\r\n          this.winactive = event.data.winactive;\r\n        }\r\n      }.bind(this));\r\n    }\r\n  }\r\n\r\n  totalList() {\r\n    let context = this.props.c;\r\n    if (context != \"\") {\r\n      GetRealTimeTotalData(context, function (results) {\r\n        this.setState({ TotalData: results.data });\r\n      }.bind(this));\r\n    }\r\n  }\r\n\r\n  UserList() {\r\n    let managerid = this.props.m;\r\n    let context = this.props.c\r\n    const user = getuser();\r\n    if (this.state.SelectedSupervisors.length > 0) {\r\n      managerid = this.state.SelectedSupervisors.join()\r\n    }\r\n\r\n    if (managerid == \"\" && context == \"\") {\r\n      managerid = user.EmployeeId;\r\n      this.setState({ SelectedSupervisors: [managerid] });\r\n    }\r\n\r\n    GetRealTimeAgentData(managerid, context, function (results) {\r\n      this.setState({ AgentData: results.data });\r\n    }.bind(this));\r\n\r\n  }\r\n\r\n  handleShow(e) {\r\n    this.setState({ SelectedSupervisors: e.SelectedSupervisors });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    clearInterval(this.schdular);\r\n    if (this.userAgent != null)\r\n      this.userAgent.hangup();\r\n  }\r\n\r\n  displayStatus(row) {\r\n    // var diff = (new Date() - new Date(row.LastUpdatedOn)) / 1000;\r\n    // if (diff > 60 && row.Status == \"IDLE\") {\r\n    //   return \"Away\";\r\n    // } else return row.Status;\r\n    let BargeWithAgent = this.state.BargeWithAgent;\r\n    if (BargeWithAgent && BargeWithAgent.AgentCode == row.AgentCode && row.Status != \"BUSY\") {\r\n\r\n      // if (this.userAgent) {\r\n      //   this.userAgent.hangup();\r\n      //   this.userAgent = null;        \r\n      // }\r\n      // this.setState({ onBarge: false, BargeWith: \"\" });\r\n      this.unbargecall();\r\n    }\r\n    else if (BargeWithAgent && BargeWithAgent.AgentCode == row.AgentCode && row.Status == \"BUSY\") {\r\n      // if (this.userAgent == null) {\r\n      //   this.bargecall(null, BargeWithAgent);\r\n      // }\r\n    }\r\n    return row.Status.toUpperCase()\r\n  }\r\n\r\n  unbargecall(e) {\r\n    if (this.userAgent) {\r\n      this.userAgent.hangup();\r\n      this.userAgent = null;\r\n    }\r\n    this.setState({ onBarge: false, BargeWith: \"\", BargeWithAgent: null });\r\n  }\r\n\r\n\r\n  bargecall(e, row) {\r\n    try {\r\n      if (this.userAgent) {\r\n        this.userAgent.hangup();\r\n        this.userAgent = null\r\n      }\r\n      //if (!this.state.onBarge) {\r\n\r\n      let user = {\r\n        Display: getuser().EmployeeId,\r\n        User: getuser().EmployeeId,\r\n        Pass: getuser().EmployeeId,\r\n        Realm: row.Asterisk_Url,\r\n        WSServer: \"wss://\" + row.Asterisk_Url + \":8089/ws\"\r\n      }\r\n      this.LoginAsteriskServer(user, function () {\r\n        setTimeout(function () {\r\n\r\n          if (this.userAgent) {\r\n            let target = \"*222\" + row.AgentCode;\r\n            if (row.CallingCompany == \"WFH\" || row.CallingCompany == \"KNOWLARITY\") {\r\n              target = \"*222\" + row.DIDNo;\r\n            }\r\n\r\n            this.userAgent.call(target);\r\n          }\r\n          this.setState({ onBarge: true, BargeWith: row.AgentCode, BargeWithAgent: row });\r\n\r\n          // setTimeout(function () {\r\n          //   //this.forceUpdate();\r\n\r\n          // }.bind(this), 500);\r\n\r\n        }.bind(this), 1000);\r\n      }.bind(this), function () {\r\n        document.getElementById(row.AgentCode).checked = false;\r\n      }.bind(this));\r\n\r\n      // }\r\n      // else {\r\n      //   toast(\"Close previous call barging\", { type: 'error' });\r\n      //   e.target.checked = false;\r\n      //   return false;\r\n      // }\r\n\r\n\r\n    } catch (e) {\r\n\r\n    }\r\n\r\n  }\r\n\r\n  LoginAsteriskServer(user, onsuccess, onerror) {\r\n\r\n    if (user) {\r\n      var config = {\r\n        media: {\r\n          remote: {\r\n            //video: document.getElementById('remoteVideo'),\r\n            // This is necessary to do an audio/video call as opposed to just a video call\r\n            audio: document.getElementById('audioRemote')\r\n          }\r\n        },\r\n        ua: {\r\n          uri: user.User + '@' + user.Realm,\r\n          wsServers: [user.WSServer],\r\n          authorizationUser: user.Display,\r\n          password: user.Pass\r\n        }\r\n      }\r\n\r\n      if (Web) {\r\n        this.userAgent = new Web.Simple(config);\r\n\r\n        //let remoteElem = document.getElementById('audioRemote');\r\n        //let localElem = document.getElementById('audioLocal');\r\n        this.userAgent.on('connected', function (e) {\r\n          toast(\"Barging Connected!\", { type: 'success' });\r\n        });\r\n        this.userAgent.on('disconnected', function (e) {\r\n\r\n        });\r\n        this.userAgent.on('registered', function (e) {\r\n          if (onsuccess) {\r\n            onsuccess();\r\n          }\r\n\r\n        });\r\n        this.userAgent.on('registrationFailed', function (e) {\r\n          toast(\"Make sure your VPN is connected!\", { type: 'error' });\r\n        });\r\n        this.userAgent.on('unregistered', function (e) {\r\n          toast(\"Dialer issue please contact administrator!\", { type: 'error' });\r\n          if (onerror) {\r\n            onerror();\r\n          }\r\n\r\n        });\r\n        this.userAgent.on('userMediaFailed', function (e) {\r\n\r\n        });\r\n        this.userAgent.on('userMediaRequest', function (e) {\r\n\r\n        });\r\n        this.userAgent.on('userMedia', function (e) {\r\n\r\n        });\r\n        this.userAgent.on('invite', function (e) {\r\n\r\n        });\r\n        this.userAgent.on('addStream', function (stream) {\r\n\r\n        });\r\n        this.userAgent.on('ended', function (stream) {\r\n\r\n        });\r\n      }\r\n    }\r\n\r\n    setTimeout(function () {\r\n      if (this.userAgent && this.userAgent.ua && this.userAgent.ua.isRegistered() == false) {\r\n        toast(\"Make sure your VPN is connected!\", { type: 'error' });\r\n      }\r\n    }.bind(this), 10000);\r\n    return this.userAgent;\r\n  }\r\n  componentWillReceiveProps(nextProps) {\r\n    if (!nextProps.CommonData.isError) {\r\n\r\n    }\r\n  }\r\n\r\n  statuschange(e) {\r\n    this.setState({ key: e.target.value });\r\n\r\n  }\r\n\r\n  filterdata(e) {\r\n\r\n    let alldata = this.state.AgentData\r\n    let that = this;\r\n    if (this.state.key === \"ALL\") {\r\n      return alldata;\r\n    }\r\n    if (this.state.key === \"Away\") {\r\n      let AgentData = [];\r\n      alldata.forEach(element => {\r\n        var diff = (new Date() - new Date(element.LastUpdatedOn)) / 1000;\r\n        if (diff > 60 && element.Status === \"IDLE\") {\r\n          AgentData.push(element);\r\n        }\r\n      });\r\n      return AgentData;\r\n    }\r\n\r\n    let AgentData = [];\r\n    alldata.forEach(element => {\r\n      if (this.state.key.indexOf(element.Status) > -1) {\r\n        AgentData.push(element);\r\n      }\r\n    });\r\n    return AgentData;\r\n  }\r\n  _handleKeyDown(e) {\r\n\r\n    if (e.key === 'Enter') {\r\n      this.setState({ SelectedSupervisors: [e.target.value] });\r\n    }\r\n  }\r\n\r\n  _handleOnClick(e) {\r\n\r\n\r\n    this.setState({ SelectedSupervisors: [document.getElementById(\"EmpId\").value] });\r\n\r\n  }\r\n\r\n  renderTotalData() {\r\n    const context = this.props.c;\r\n    let TotalData = this.state.TotalData;\r\n    if (context != \"\") {\r\n      return <div>\r\n\r\n        <div className=\"totaldata\">\r\n          <Row></Row>\r\n          <Row>\r\n            <Col md={2}><span className=\"totaltext\">Context : {TotalData.context}</span></Col>\r\n            <Col md={2}><span className=\"totaltext\">Answered : {TotalData.answered}</span></Col>\r\n            <Col md={2}><span className=\"totaltext\">Unanswered : {TotalData.unanswered}</span></Col>\r\n            <Col md={2}><span className=\"totaltext\"># Agents : {TotalData.totalAgents}</span></Col>\r\n            <Col md={2}><span className=\"totaltext\">Waiting Calls : {TotalData.waitingCalls}</span></Col>\r\n            <Col md={2}><span className=\"totaltext\"># Avail. Agents : {TotalData.totalAvailableAgents}</span></Col>\r\n          </Row>\r\n        </div>\r\n        <br />\r\n      </div>\r\n    }\r\n    else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n\r\n  render() {\r\n    const columns = this.columnlist;\r\n    const totalcolumns = this.totalcolumnlist;\r\n    const data = this.filterdata();\r\n    const managerid = this.props.m;\r\n    const context = this.props.c;\r\n\r\n    const { items, PageTitle } = this.state;\r\n\r\n\r\n    return (\r\n      <>\r\n        <ToastContainer />\r\n        <Row>\r\n          <Col md=\"12\">\r\n            <Card>\r\n              <CardHeader>\r\n                <Row>\r\n                  <Col md={3}>\r\n                    <CardTitle tag=\"h4\">{PageTitle}</CardTitle>\r\n                  </Col>\r\n                  <Col md={4}>\r\n                    <CardTitle tag=\"h6\">{this.state.SelectedSupervisors.join()}</CardTitle>\r\n                  </Col>\r\n                  <Col md={3}>\r\n                    <div className=\"input-group\">\r\n\r\n                      <Form.Control required type=\"text\" name=\"EmpId\" id=\"EmpId\" onKeyDown={this._handleKeyDown} onChange={(e) => this.setState({ username: e.target.value })} value={this.state.username} placeholder={\"Enter Supervisor Id\"} />\r\n                      <div className=\"input-group-append\">\r\n                        <button onClick={(e) => this._handleOnClick(e)} className=\"btn btn-primary input-group-button\"><i className=\"fa fa-search\" aria-hidden=\"true\"></i></button>\r\n\r\n                      </div>\r\n                    </div>\r\n                  </Col>\r\n                  <Col md={2}>\r\n                    <div className=\"form-group\">\r\n                      <select className=\"form-control\" onChange={this.statuschange}>\r\n                        <option value=\"ALL\">ALL</option>\r\n                        <option value=\"IDLE\">IDLE</option>\r\n                        <option value=\"Away\">Away</option>\r\n                        <option value=\"BUSY\">BUSY</option>\r\n                        <option value=\"Lunch,Tea,Training,Meeting,Day End\">Break</option>\r\n                        <option value=\"PAUSE\">PAUSE</option>\r\n                        <option value=\"Auto Logout,LOGOUT\">LOGOUT</option>\r\n                      </select>\r\n                    </div>\r\n                    {\r\n                      (managerid == '' && context == '') ? <ManagerHierarchy handleShow={this.handleShow} value={/EmployeeId/g} ></ManagerHierarchy> : null\r\n                    }\r\n                    <button id=\"BargeWith\" onClick={(e) => this.unbargecall(e)} className={this.state.BargeWith == \"\" ? \"hide\" : \"btn btn-primary hangupwith show\"} ><i className=\"fa fa-volume-off\" aria-hidden=\"true\"></i> Hang Up With: {this.state.BargeWith}</button>\r\n                  </Col>\r\n\r\n                </Row>\r\n\r\n              </CardHeader>\r\n\r\n              <CardBody>\r\n                {/* {this.renderTotalData()} */}\r\n                <div className=\"statusdata\">\r\n                  <DataTable\r\n                    columns={columns}\r\n                    data={data}\r\n                    pagination={false}\r\n                    striped={true}\r\n                    noHeader={true}\r\n                    highlightOnHover\r\n                    dense\r\n\r\n                  />\r\n\r\n                </div>\r\n              </CardBody>\r\n\r\n            </Card>\r\n          </Col>\r\n          <audio id=\"audioRemote\"></audio>\r\n          <audio id=\"audioLocal\"></audio>\r\n        </Row>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    CommonData: state.CommonData\r\n  };\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    GetCommonData,\r\n    GetCommonspData\r\n  }\r\n)(RealTimePanel);\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\n\r\nfunction ShowDetail() {\r\n  return (\r\n      <i className=\"fa fa-spinner fa-spin\" />\r\n  );\r\n}\r\n\r\nexport default ShowDetail;","\nimport React from \"react\";\nimport { Button, Modal } from 'react-bootstrap';\nimport Loader from './Loader';\n\n\nclass ConfirmDialog extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            show: this.props.show,\n            title: this.props.title,\n            message: this.props.message,\n            isLoading: false,\n        }\n    }\n\n    handleClose () {\n        //this.setState({ show: false });\n        this.props.onCancel();\n    }\n    \n    handleConfirm (props) {\n        this.setState({ isLoading: true });\n        this.props.onConfirm();\n    }\n\n    render() {\n            return (                \n            <>\n            <Modal show={this.state.show} onHide={() => this.handleClose()}>\n                <Modal.Header closeButton>\n                    <Modal.Title>{this.state.title}</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>{this.state.message}</Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={() => this.handleClose()}>\n                        No\n                    </Button>\n                    <Button variant=\"primary\" onClick={() => this.handleConfirm()} disabled={this.state.isLoading}>\n                        Yes\n                    </Button>\n                    {(\n                        this.state.isLoading && <Loader />\n                    )}\n                </Modal.Footer>\n            </Modal>\n            </>)\n    }\n}\n\nexport default ConfirmDialog;\n","import React from \"react\";\nimport { ButtonGroup, Button, Modal, Form } from 'react-bootstrap';\n\nimport {\n  GetCommonData, InsertData, UpdateData, ProcessUploadIncentiveFile, GetCommonspData\n} from \"../store/actions/CommonAction\";\nimport {\n  addRecord\n} from \"../store/actions/CommonMongoAction\";\nimport { connect } from \"react-redux\";\n\nimport DataTable from './Common/DataTableWithFilter';\nimport { fnRenderfrmControl, fnBindRootData, fnDatatableCol, fnCleanData, GetJsonToArray, getUrlParameter, getuser, joinObject } from '../utility/utility.jsx';\n// reactstrap components\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col\n} from \"reactstrap\";\nimport { If, Then } from 'react-if';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport ConfirmDialog from './Common/ConfirmDialog';\nimport moment from 'moment';\nimport Moment from 'react-moment';\nimport result from \"lodash/result\";\n\nclass ProcessIncentiveFile extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoaded: false,\n      showModal: false,\n      items: [],\n      activePage: 1,\n      root: \"ProcessIncentiveFile\",\n      PageTitle: \"ProcessIncentiveFile\",\n      FormTitle: \"\",\n      formvalue: {},\n      event: \"\",\n      ModalValueChanged: false,\n      ResetTokenData:'',\n      ConfirmationOpen: false,\n      processedFileModal: false,\n      ProcessInfoData: [],\n      confirm: \"no\",\n      IncentiveFileData: [],\n    };\n    this.handleClose = this.handleClose.bind(this);\n\n    this.selectedrow = { \"UserID\": 0, \"UserName\": \"\", \"EmployeeId\": \"\" }\n    const Cell = ({ v }) => (\n      <span title={v}>{(v) ? v.substring(0, 25) : ''}{(v && v.length > 25) ? '...' : ''}</span>\n    );\n\n    // this.processfilecolumns = [\n    //   {\n    //     name: \"LeadID\",\n    //     label: \"LeadID\",\n    //     sortable: false,\n    //   },  \n    //   {\n    //     name: \"IsSI\",\n    //     label: \"IsSI\",\n    //   },\n    //   {\n    //     label: \"Status\",\n    //     name: \"message\",\n    //     cell: row => <div className=\"status\">{row.message ? row.message : \"N.A\"}</div>,\n    //     searchable: true\n    //   },\n   \n\n    // ]\n    this.columnlist = [ \n    {\n        name: \"Id\",\n        label: \"Id\",\n        type: \"hidden\",\n        hide: true,\n        sortable: false,\n        searchable: false\n      },  \n      {\n        name: \"FileName\",\n        label: \"FileName\",\n        type: \"string\",\n        sortable: true,\n        searchable: true,\n        cell: row => <Cell v={row.FileName} />,\n      },\n      {\n        label: \"IncentiveMonth\",\n        name: \"IncentiveMonth\",\n        cell: row => <div className=\"calldate\">{row.IncentiveMonth ? <Moment format=\"D MMM YYYY\" utc={true}\n        >{row.IncentiveMonth}</Moment> : \"N.A\"}</div>,\n        \"sortable\": true,\n        width: \"150px\",\n      },\n      {\n        name: \"UserName\",\n        label: \"UserName\",\n        type: \"string\",\n        sortable: true,\n        cell: row => <Cell v={row.UserName} />,\n      },\n      {\n        name: \"TypeName\",\n        label: \"TypeName\",\n        type: \"string\",\n        sortable: true,\n        cell: row => <Cell v={row.TypeName} />,\n      },\n      {\n        label: \"Process File\", \n        name: \"StatusId\",\n        cell: row => \n          <div className=\"moreinfo\">{(row.StatusId == 1 ) ? <button id=\"processfile\" className=\"btn btn-primary btn-sm\" onClick={(e) => this.showConfirmationModal(e, row)}>\n            Start Processing\n          </button> : row.StatusId == 2 ? \"In Process\" \n          : \"Processed\"}\n          </div>,\n        width: \"180px\"  \n      },\n    ];\n\n  }\n\n\n\n  fnBindStore(col, nextProps) {\n    if (col.type == \"dropdown\") {\n      let items;\n      if (nextProps.CommonData[this.state.root] && nextProps.CommonData[col.config.root]) {\n        items = joinObject(nextProps.CommonData[this.state.root], nextProps.CommonData[col.config.root], col.name)\n        this.setState({ items: items });\n      }\n    }\n  }\n\n  componentDidMount() {\n    this.columnlist.map(col => (\n      fnBindRootData(col, this.props)\n    ));\n\n    const user = getuser();\n    var managerid = user.UserID;\n        console.log('managerid',managerid,this.props,this.props.StartDate);\n        this.GetIncentiveFiles();\n       \n  }\n\n  componentDidUpdate(prevProps) {;\n    if ((prevProps.ProductId !== this.props.ProductId) ||  (prevProps.TypeId !== this.props.TypeId) \n    ||  (prevProps.IncentiveMonth !== this.props.IncentiveMonth) || (prevProps.isUpload !== this.props.isUpload) ){\n      this.GetIncentiveFiles();  \n    }\n  }\n\n  GetIncentiveFiles(){\n    this.props.GetCommonspData({\n      root: 'GetIncentiveFiles',\n      c: \"L\",\n      params: [{ \"ProductId\": this.props.ProductId, \"TypeId\": this.props.TypeId,\"IncentiveMonth\": moment(this.props.IncentiveMonth).format(\"YYYY-MM-DD\")}],\n    }, function (result) {\n      if (result.data && result.data.data[0]) {//;\n        console.log(result.data.data[0]);\n        this.setState({ IncentiveFileData: result.data.data[0] });\n      }\n    }.bind(this));\n  }\n  \n  hideConfirmationModal() {\n    if((this.state.ProcessInfoData && this.state.ProcessInfoData.length > 0 && this.state.confirm == \"yes\") || \n    this.state.confirm == \"no\")\n    this.setState({ConfirmationOpen : false, selectedRow: null});\n  }\n  \n  showConfirmationModal(e, row) {\n    //this.setState({ConfirmationOpen : true, onConfirmFunction: () => this.blockAgent(e, row)});\n    console.log('rowwww',row);\n    this.setState({ConfirmationOpen : true, selectedRow: row});\n  }\n\n  handleConfirmOk(e){\n    this.setState({ confirm : \"yes\"});   \n    this.processFile(e, this.state.selectedRow)\n  }\n\n  handleProcessedFilePopup(){;\n    this.setState({ processedFileModal : false, ConfirmationOpen: false})\n    this.GetIncentiveFiles();  \n\n    \n  }\n\n  processFile(e, row) {\n    ProcessUploadIncentiveFile(row, function (results) {;\n        console.log(results);\n        if (results.data && results.data.data && results.data.data.length > 0 )\n        this.setState({ ProcessInfoData: results.data.data , processedFileModal: true, confirm: \"no\"});\n        else\n        {\n          toast('Some error occured', {type:'error'});\n\n          this.setState({processedFileModal: false, ConfirmationOpen : false});\n          this.GetIncentiveFiles();  \n\n        }\n    }.bind(this));\n\n  }\n\n  componentWillReceiveProps(nextProps) {\n\n    if (!nextProps.CommonData.isError) {\n      this.setState({ items: nextProps.CommonData[this.state.root] });\n\n      this.columnlist.map(col => (\n        this.fnBindStore(col, nextProps)\n      ));\n    }\n\n\n  }\n\n\n  fnDatatableCol() {\n    var columns = fnDatatableCol(this.columnlist);\n    return columns;\n  }\n\n  handleClose() {\n    this.setState({ showModal: false });\n  }\n\n  fnCleanData(formvalue, IsUpdate) {\n    formvalue = fnCleanData(this.columnlist, formvalue, IsUpdate);\n    this.setState({ formvalue: formvalue });\n  }\n\n  renderModalProcessFile(){;\n    if (this.state.ProcessInfoData && this.state.ProcessInfoData.length > 0) {\n      let ProcessStatusColumns = [];\n      let ProcessInfoData = this.state.ProcessInfoData;\n\n      Object.entries(ProcessInfoData[0]).map(([key,value])=>{\n              if(key == 'status'){                       \n                ProcessStatusColumns.push({ label: \"Status\",\n                          name: \"status\",\n                          cell: row => <div className=\"Status\">{row.status ? row.status : \"N.A\"}</div>,\n              }) \n                    \n              }else if(key == 'message'){                       \n                ProcessStatusColumns.push({ label: \"message\",\n                          name: \"message\",\n                          cell: row => <div className=\"Status\">{row.message ? row.message : \"N.A\"}</div>,\n                          searchable: true,                    \n\n              }) \n                    \n              }else if(key == 'FirstPremPaid' || key == 'FLC' || key == 'IsSI' || key == 'IsE2E'){\n                ProcessStatusColumns.push({ label: key.toString(),\n                          name: key.toString(),\n                          type: \"bool\",\n              })  \n              }else{\n                ProcessStatusColumns.push({\n              \"name\": key.toString(),\n              \"label\": key.toString(),\n               searchable: true,                    \n              })\n              }\n        })\n\n      const processfilecolumns = fnDatatableCol(ProcessStatusColumns);\nconsole.log(processfilecolumns, ProcessInfoData)\n      return <DataTable\n      columns={processfilecolumns}\n      data={(ProcessInfoData && ProcessInfoData.length > 0) ? ProcessInfoData : []}\n      striped={true}\n      noHeader={true}\n      highlightOnHover\n      dense\n\n    />\n  }\n\n  return null;\n\n  }\n\n\n  render() {\n    const columns = this.fnDatatableCol();\n   // var processfilecolumns = fnDatatableCol(this.processfilecolumns);\n\n    const { items, PageTitle, showModal, FormTitle, formvalue, ModalValueChanged, event, ProcessInfoData, IncentiveFileData } = this.state;\n\n    return (\n      <>\n        <div className=\"content\">\n          <ToastContainer />\n          <Row>\n            <Col md=\"12\">\n              <Card>\n                <CardHeader>\n                  <Row>\n                    <Col md={8}>\n                      <CardTitle tag=\"h4\">{PageTitle}</CardTitle>\n                    </Col>               \n                  </Row>\n                </CardHeader>\n                <Col md={12}>\n                {(\n                    this.state.ConfirmationOpen && <ConfirmDialog onConfirm={(e) => this.handleConfirmOk(e)} onCancel={() => this.hideConfirmationModal() } show={true}\n                    message=\"Do You want to process the file ?\" />\n                )}\n                <CardBody>\n                <div class=\"inc\" style={{height: \"fit-content\"}}>\n\n                  {( IncentiveFileData && IncentiveFileData.length > 0 && <DataTable\n                    columns={columns}\n                    data={IncentiveFileData}\n                    pagination={false}\n                    />)}\n                  </div>\n\n                </CardBody>\n                </Col>\n              </Card>\n            </Col>\n          </Row>\n\n          <Modal show={this.state.processedFileModal} onHide={this.handleProcessedFilePopup.bind(this)} dialogClassName=\"modal-90w\">\n            <Modal.Header closeButton>\n              <Modal.Title></Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n              <div className=\"modalmoreinfodata\">\n              {this.renderModalProcessFile()}\n\n                \n              </div>\n            </Modal.Body>\n            <Modal.Footer>\n\n            </Modal.Footer>\n          </Modal>\n        </div>\n      </>\n    );\n  }\n}\n\n\nfunction mapStateToProps(state) {\n  return {\n    CommonData: state.CommonData\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  {\n    GetCommonData,\n    InsertData,\n    UpdateData,\n    addRecord,\n    GetCommonspData\n  }\n)(ProcessIncentiveFile);"],"sourceRoot":""}