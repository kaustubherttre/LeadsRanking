{"version":3,"sources":["views/Common/PrintExcelColumn.jsx"],"names":["ExcelFile","ReactExport","ExcelSheet","ExcelColumn","PrintExcelColumn","props","state","columns","columnNames","nextProps","this","setState","ExcelColumns","length","forEach","element","push","key","label","name","value","selector","filename","fileName","className","data","renderExcelColumnData","React","Component"],"mappings":"ohBAIMA,EAAYC,IAAYD,UACxBE,EAAaD,IAAYD,UAAUE,WACnCC,EAAcF,IAAYD,UAAUG,YAGpCC,E,kDACF,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,CACTC,QAAS,EAAKF,MAAMG,aAHT,E,sDAMnB,c,+BAGA,c,uCAEA,SAA0BC,GACtBC,KAAKC,SAAS,CAAEJ,QAASE,EAAUD,gB,mCAGvC,SAAsBD,GAClB,IAAIK,EAAe,GAUnB,OAPGL,EAAQM,QACPN,EAAQO,SAAQ,SAAAC,GACZH,EAAaI,KACT,kBAACb,EAAD,CAAac,IAJb,EAIyBC,MAAOH,EAAQI,KAAMC,MAAOL,EAAQM,eAIlET,I,oBAEX,WAEI,OAAIF,KAAKL,MAAMG,aAAeE,KAAKL,MAAMG,YAAYK,OAAS,EAEtD,kBAACb,EAAD,CAAWsB,SAAUZ,KAAKL,MAAMkB,SAAUR,QAAS,0BAAMS,UAAU,mBAC/D,kBAACtB,EAAD,CAAYuB,KAAMf,KAAKL,MAAMoB,KAAMN,KAAK,cACnCT,KAAKgB,sBAAsBhB,KAAKL,MAAMG,eAO5C,S,GA1CYmB,IAAMC,WA+CtBxB,a","file":"static/js/9.94d89579.chunk.js","sourcesContent":["\nimport React from \"react\";\nimport { Alert } from 'react-bootstrap';\nimport ReactExport from \"react-data-export\";\nconst ExcelFile = ReactExport.ExcelFile;\nconst ExcelSheet = ReactExport.ExcelFile.ExcelSheet;\nconst ExcelColumn = ReactExport.ExcelFile.ExcelColumn;\n\n\nclass PrintExcelColumn extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            columns: this.props.columnNames\n        }\n    }\n    componentDidUpdate() {\n\n    }\n    componentDidMount() {\n    }\n    componentWillReceiveProps(nextProps) {\n        this.setState({ columns: nextProps.columnNames });\n    }\n\n    renderExcelColumnData(columns) {\n        let ExcelColumns = [];\n\n        let index = 0;\n        if(columns.length) {\n            columns.forEach(element => {\n                ExcelColumns.push(\n                    <ExcelColumn key={index} label={element.name} value={element.selector}/>      \n                )\n                });\n            }\n        return ExcelColumns;\n    }\n    render() {\n\n        if (this.props.columnNames && this.props.columnNames.length > 0) {\n            return (\n                <ExcelFile filename={this.props.fileName} element={<span className=\"downloadExcel\"></span>}>\n                    <ExcelSheet data={this.props.data} name=\"Conference\">\n                        {this.renderExcelColumnData(this.props.columnNames)}\n                    </ExcelSheet>\n                </ExcelFile>\n            );\n\n        }\n        else {\n            return null;\n        }\n    }\n}\n\nexport default PrintExcelColumn;\n"],"sourceRoot":""}