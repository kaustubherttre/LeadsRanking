{"version":3,"sources":["views/C2CTrackingDataService.jsx","views/Common/AlertBox.jsx","store/actions/CommonMysqlAction.jsx","views/Common/ManagerHierarchy.jsx","views/Common/DropDown.jsx","views/Common/Loader.jsx"],"names":["C2CTrackingDataService","props","handleStartDateChange","e","_isAMomentObject","setState","startdate","format","enddate","add","handleEndDateChange","validation","currentDate","isBefore","moment","validationEndDate","state","root","PageTitle","ProductId","ReportDate","subtract","ReportTime","SelectedSupervisors","ConfType","showMoreInfoModal","MoreInfoData","addClass","confTypes","C2CData","C2CLoader","columnlist","label","name","searchable","cell","row","className","Dispostion","Context","sortable","width","hhmmss","Duration","ActualCallDate","utc","type","ActualCallTime","CustomerRequestDate","CustomerRequestTime","RequestPlaced","LastCallTime","Retry","TalkTime","WaitingTime","ProdTypeList","config","data","Id","Display","action","this","nextProps","CommonData","isError","console","log","fnDatatableCol","toast","json","GetCommonspData","c","params","result","bind","target","value","columns","items","showAlert","AlertMsg","AlertVarient","show","variant","body","md","tag","Group","controlId","firstoption","col","onChange","protypechange","Date","dateFormat","onClick","fetchC2CData","CheckLoader","condition","length","React","Component","connect","GetCommonData","GetMySqlData","AlertBox","setTimeout","GetCommonData_fetched","Todos","dataToSend","statename","localStorage","setItem","JSON","stringify","constants","GET_COMMON_SUCCESS","payload","GetCommonData_fetch_error","error","GET_COMMON_FAIL","cb","undefined","dispatch","getState","getItem","parse","axios","get","api","base_url","then","catch","InsertData","post","INSERT_COMMON_SUCCESS","INSERT_COMMON_FAIL","InsertData_fetch_error","UpdateData","UPDATE_COMMON_SUCCESS","UPDATE_COMMON_FAIL","UpdateData_fetch_error","GetDataDirect","ManagerHierarchy","nodes","checked","expanded","UserId","getuser","RoleId","UserID","ManagerId","res","replace","handleShow","forceUpdate","document","getElementById","style","right","checkeditem","index","indexOf","splice","id","onMouseLeave","onMouseOut","onMouseEnter","onButtonClick","checkModel","showNodeIcon","onCheck","onExpand","showExpandAll","DropDown","item","key","visible","Control","as","disabled","map","displayoption","ShowDetail"],"mappings":"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","file":"static/js/37.da412fcd.chunk.js","sourcesContent":["\r\nimport React from \"react\";\r\nimport {\r\n  GetCommonData, GetCommonspData, GetDataDirect, GetFileExists, GetAwsRecordingUrl\r\n} from \"../store/actions/CommonAction\";\r\nimport {\r\n  GetMySqlData\r\n} from \"../store/actions/CommonMysqlAction\";\r\nimport { connect } from \"react-redux\";\r\nimport { OpenSalesView, getUrlParameter, getuser, fnDatatableCol, hhmmss } from '../utility/utility.jsx';\r\nimport DataTable from './Common/DataTableWithFilter';\r\nimport DropDown from './Common/DropDown';\r\nimport ManagerHierarchy from './Common/ManagerHierarchy';\r\nimport Moment from 'react-moment';\r\nimport moment from 'moment';\r\nimport { If, Then, Else } from 'react-if';\r\nimport AlertBox from './Common/AlertBox';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nimport * as Datetime from 'react-datetime';\r\nimport 'react-datetime/css/react-datetime.css'\r\nimport Loader from './Common/Loader';\r\nimport DropDownList from './Common/DropDownList';\r\n\r\n\r\n\r\n// reactstrap components\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  Table,\r\n  Row,\r\n  Col\r\n} from \"reactstrap\";\r\nimport { ButtonGroup, Button, Modal, Form } from 'react-bootstrap';\r\nimport { func, string } from \"prop-types\";\r\n\r\nclass C2CTrackingDataService extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      root: \"conference\",\r\n      PageTitle: \"C2CTrackingDataService\",\r\n      C2CTrackingDataService: [],\r\n      ProductId: 0,\r\n      ReportDate: moment().subtract(1, 'days').format(\"YYYY-MM-DD\"),\r\n      ReportTime: null,\r\n      SelectedSupervisors: [],\r\n      ConfType: 'sales_to_service',\r\n      startdate: moment().format(\"YYYY-MM-DD\"),\r\n      // enddate: moment().format(\"YYYY-MM-DD\"),\r\n      //startdate: moment().subtract(60, 'days').format(\"YYYY-MM-DD\"),\r\n      enddate: moment().add(1, \"days\").format(\"DD-MM-YYYY\"),\r\n      // maxdate: moment().subtract(60, 'days').format(\"YYYY-MM-DD\"),\r\n      showMoreInfoModal: false,\r\n      MoreInfoData: [],\r\n      addClass: \"fa fa-play-circle\",\r\n      confTypes: [],\r\n      C2CData: [],\r\n      C2CLoader: false,\r\n    };\r\n    this.columnlist = [\r\n      {\r\n        label: \"LeadId\",\r\n        name: \"LeadId\",\r\n        searchable: true\r\n      },\r\n      {\r\n        label: \"Dispostion\",\r\n        name: \"Dispostion\",\r\n        cell: row => <div className=\"Dispostion\">{row.Dispostion ? row.Dispostion : \"N.A\"}</div>,\r\n      },\r\n      {\r\n        label: \"Context\",\r\n        name: \"Context\",\r\n        cell: row => <div className=\"Context\">{row.Context ? row.Context : \"N.A\"}</div>,\r\n      },\r\n      {\r\n        label: \"Duration\",\r\n        name: \"Duration\",\r\n        sortable: true,\r\n        width: \"130px\",\r\n        cell: row => hhmmss(row.Duration),\r\n      },\r\n      {\r\n        label: \"ActualCallDate\",\r\n        name: \"ActualCallDate\",\r\n        cell: row => <div className=\"calldate\">{row.ActualCallDate ? <Moment format=\"YYYY-MM-DD HH:mm:ss\" utc={true}\r\n        >{row.ActualCallDate}</Moment> : \"N.A\"}</div>,\r\n        type: \"datetime\",\r\n        \"sortable\": true,\r\n        width: \"150px\",\r\n      },\r\n      {\r\n        label: \"ActualCallTime\",\r\n        name: \"ActualCallTime\",\r\n        cell: row => <div className=\"calldate\">{row.ActualCallTime ? <Moment format=\"YYYY-MM-DD HH:mm:ss\" utc={true}\r\n        >{row.ActualCallTime}</Moment> : \"N.A\"}</div>,\r\n        type: \"datetime\",\r\n        \"sortable\": true,\r\n        width: \"150px\",\r\n      },\r\n      {\r\n        label: \"CustomerRequestDate\",\r\n        name: \"CustomerRequestDate\",\r\n        cell: row => <div className=\"calldate\">{row.CustomerRequestDate ? <Moment format=\"YYYY-MM-DD\" utc={true}\r\n        >{row.CustomerRequestDate}</Moment> : \"N.A\"}</div>,\r\n        type: \"date\",\r\n        \"sortable\": true,\r\n        width: \"150px\",\r\n\r\n      },\r\n      {\r\n        label: \"CustomerRequestTime\",\r\n        name: \"CustomerRequestTime\",\r\n        cell: row => <div className=\"calldate\">{row.CustomerRequestTime ? <Moment format=\"YYYY-MM-DD HH:mm:ss\" utc={true}\r\n        >{row.CustomerRequestTime}</Moment> : \"N.A\"}</div>,\r\n        type: \"datetime\",\r\n        \"sortable\": true,\r\n        width: \"150px\",\r\n\r\n      },\r\n      {\r\n        label: \"RequestPlaced\",\r\n        name: \"RequestPlaced\",\r\n        cell: row => <div className=\"calldate\">{row.RequestPlaced ? <Moment format=\"YYYY-MM-DD HH:mm:ss\" utc={true}\r\n        >{row.RequestPlaced}</Moment> : \"N.A\"}</div>,\r\n        type: \"datetime\",\r\n        \"sortable\": true,\r\n        width: \"150px\",\r\n\r\n      },\r\n      {\r\n        label: \"LastCallTime\",\r\n        name: \"LastCallTime\",\r\n        cell: row => <div className=\"calldate\">{row.LastCallTime ? <Moment format=\"YYYY-MM-DD HH:mm:ss\" utc={true}\r\n        >{row.LastCallTime}</Moment> : \"N.A\"}</div>,\r\n        type: \"datetime\",\r\n        \"sortable\": true,\r\n        width: \"150px\",\r\n\r\n      },\r\n      {\r\n        name: \"Retry\",\r\n        label: \"Retry\",\r\n        type: \"string\",\r\n        cell: row => <div className=\"Retry\">{row.Retry ? row.Retry : \"N.A\"}</div>,\r\n      },\r\n      {\r\n        name: \"TalkTime\",\r\n        label: \"TalkTime\",\r\n        type: \"string\",\r\n        cell: row => <div className=\"TalkTime\">{row.TalkTime ? row.TalkTime : \"N.A\"}</div>,\r\n      },\r\n      {\r\n        name: \"WaitingTime\",\r\n        label: \"WaitingTime\",\r\n        type: \"string\",\r\n        cell: row => <div className=\"WaitingTime\">{row.WaitingTime ? row.WaitingTime : \"N.A\"}</div>,\r\n      },\r\n      {\r\n        label: \"call_back_classification_mins\",\r\n        name: \"call_back_classification_mins\",\r\n      },\r\n      {\r\n        label: \"employeeid\",\r\n        name: \"employeeid\",\r\n        searchable: true\r\n      },\r\n      {\r\n        label: \"processing\",\r\n        name: \"processing\",\r\n      },\r\n      {\r\n        label: \"type_request\",\r\n        name: \"type_request\",\r\n      },\r\n      {\r\n        label: \"username\",\r\n        name: \"username\",\r\n      },\r\n    ];\r\n\r\n    this.ProdTypeList = {\r\n      config:\r\n      {\r\n        root: \"Productcustom\",\r\n        data: [{ Id: \"117\", Display: \"Motor\" }, { Id: \"2\", Display: \"Health\" }],\r\n      }\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n   \r\n\r\n  }\r\n\r\n  CheckLoader(action) {\r\n    if (action == 'C2C') {\r\n      if (this.state.C2CLoader)\r\n        return <Loader />;\r\n    } \r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    //debugger;\r\n    if (!nextProps.CommonData.isError) {\r\n      //this.setState({ C2CTrackingDataService: nextProps.CommonData[this.state.root] });\r\n      console.log(nextProps.CommonData[this.state.root]);\r\n    }\r\n  }\r\n\r\n  fnDatatableCol() {\r\n\r\n    var columns = fnDatatableCol(this.columnlist);\r\n    return columns;\r\n  }\r\n\r\n  handleStartDateChange = (e, props) => {\r\n    if (e._isAMomentObject) {\r\n      //this.props.onStartDate(e.format(\"YYYY-MM-DD\"));\r\n      this.setState({ startdate: e.format(\"YYYY-MM-DD\"), enddate: e.add(7, 'days').format(\"YYYY-MM-DD\") }, function () {\r\n      });\r\n    }\r\n  }\r\n\r\n  handleEndDateChange = (e, props) => {\r\n    if (e._isAMomentObject) {\r\n      //this.props.onEndDate(e.format(\"YYYY-MM-DD\"));\r\n      this.setState({ enddate: e.format(\"YYYY-MM-DD\") }, function () {\r\n        //this.fetchCallBackData();\r\n      });\r\n    }\r\n  }\r\n\r\n  validation = (currentDate) => {\r\n    return currentDate.isBefore(moment());\r\n  };\r\n\r\n  validationEndDate = (currentDate) => {\r\n\r\n\r\n    if (!currentDate.isBefore(moment(this.state.enddate))) {\r\n      return false;\r\n    }\r\n\r\n    if (currentDate.isBefore(moment(this.state.startdate))) {\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n\r\n  };\r\n\r\n  fetchC2CData(){\r\n    if(this.state.ProductId == 0){\r\n      toast(\"Please enter Product\", { type: 'error' });\r\n      return false;\r\n    }\r\n    this.setState({ C2CLoader : true});\r\n    var json = {\r\n        \"FromDate\" : this.state.startdate,//moment().format(\"YYYY-MM-DD 00:00:00\"),\r\n        \"ToDate\" : this.state.enddate,//moment().format(\"YYYY-MM-DD 23:59:59\"),\r\n        \"ProductID\" : this.state.ProductId\r\n       };\r\n       this.props.GetCommonspData({\r\n        root: 'C2CTrackingDataService',\r\n        c: \"L\",\r\n        params: [json],\r\n    }, function (result) {\r\n      this.setState({ C2CLoader : false});\r\n        if (result.data && result.data.data[0] ) {debugger;\r\n            console.log(result.data.data[0]);\r\n            this.setState({ C2CData: result.data.data[0] });\r\n      }\r\n    }.bind(this));\r\n  }\r\n\r\n  protypechange(e){\r\n    this.setState({ ProductId : e.target.value});\r\n  }\r\n\r\n\r\n  render() {\r\n    //const columns = this.columnlist;\r\n    const columns = this.fnDatatableCol();\r\n    const { items, PageTitle,  showAlert, AlertMsg, AlertVarient, C2CData } = this.state;\r\n\r\n    return (\r\n      <>\r\n        <div className=\"content\">\r\n          <AlertBox show={showAlert} variant={AlertVarient} body={AlertMsg}></AlertBox>\r\n          <ToastContainer />\r\n          <Row>\r\n            <Col md=\"12\">\r\n              <Card>\r\n                <CardHeader>\r\n                  <Row>\r\n                    <Col md={3}>\r\n                      <CardTitle tag=\"h4\">{PageTitle}</CardTitle>\r\n                    </Col>\r\n                    <Col md={2}>\r\n                        <Form.Group controlId=\"ProductID\">\r\n                            <DropDownList firstoption=\"Select Product\" value={this.state.ProductId} col={this.ProdTypeList} onChange={this.protypechange.bind(this)}>\r\n                            </DropDownList>\r\n                        </Form.Group>\r\n                    </Col>\r\n                    <Col md={2}>\r\n                      <Datetime value={new Date()}\r\n                        dateFormat=\"YYYY-MM-DD\"\r\n                        value={this.state.startdate}\r\n                        isValidDate={this.validation}\r\n                        onChange={moment => this.handleStartDateChange(moment)}\r\n                        utc={true}\r\n                        timeFormat={false}\r\n                      />\r\n                    </Col>\r\n                    <Col md={2}>\r\n                      <Datetime value={new Date()}\r\n                        dateFormat=\"YYYY-MM-DD\"\r\n                        value={this.state.enddate}\r\n                        isValidDate={this.validationEndDate}\r\n                        onChange={moment => this.handleEndDateChange(moment)}\r\n                        utc={true}\r\n                        timeFormat={false}\r\n                      />\r\n                    </Col>\r\n                    \r\n                    <Col md={1}>\r\n                      <Button variant=\"primary\" onClick={() => this.fetchC2CData()}>Fetch{this.CheckLoader('C2C') }</Button>\r\n                    </Col>\r\n                   \r\n                  </Row>\r\n\r\n                </CardHeader>\r\n                <CardBody>\r\n                {/* {this.CheckLoader('C2C') } */}\r\n                <If condition={( this.state.C2CData.length > 0)}>\r\n                <Then>\r\n                  <DataTable\r\n                    columns={columns}\r\n                    data={(C2CData && C2CData.length > 0) ? C2CData : []}\r\n                  />\r\n                </Then>\r\n                </If>\r\n                </CardBody>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    CommonData: state.CommonData\r\n  };\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    GetCommonData,\r\n    GetCommonspData,\r\n    GetMySqlData\r\n  }\r\n)(C2CTrackingDataService);","\r\nimport React from \"react\";\r\nimport { Alert } from 'react-bootstrap';\r\n\r\n\r\nclass AlertBox extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            show: this.props.show\r\n        }\r\n    }\r\n    componentDidUpdate() {\r\n\r\n    }\r\n    componentWillReceiveProps(nextProps) {\r\n        this.setState({ show: nextProps.show });\r\n        if (nextProps.show) {\r\n            setTimeout(function () {\r\n                this.setState({ show: false });\r\n            }.bind(this), 5000);\r\n        }\r\n    }\r\n    render() {\r\n        if (this.state.show) {\r\n            return (\r\n                <Alert variant={this.props.variant}>\r\n                    {this.props.body}\r\n                </Alert>\r\n            );\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n}\r\n\r\nexport default AlertBox;\r\n","import axios from \"axios\";\nimport config from \"../../config.jsx\";\nimport constants from \"../../Constants/Constants.jsx\";\n\nconst GetCommonData_fetched = Todos => {\n\n  if (Todos.dataToSend.state && Todos.dataToSend.statename) {\n    localStorage.setItem(Todos.dataToSend.statename, JSON.stringify(Todos.data));\n  }\n\n  return {\n    type: constants.GET_COMMON_SUCCESS,\n    payload: Todos.data,\n    root: Todos.dataToSend.root\n  };\n};\n\nconst GetCommonData_fetch_error = error => {\n  return {\n    type: constants.GET_COMMON_FAIL,\n    payload: error\n  };\n};\n\nexport const GetMySqlData = (dataToSend,cb) => {\n\n  if (dataToSend.data != null || dataToSend.data != undefined) {\n    return function (dispatch, getState) {\n      dispatch(GetCommonData_fetched({ data: dataToSend.data, dataToSend: dataToSend }));\n    };\n  }\n  try {\n    if ((dataToSend.state && localStorage.getItem(dataToSend.statename)) || localStorage.getItem(dataToSend.statename)) {\n\n      return function (dispatch, getState) {\n        let data = JSON.parse(localStorage.getItem(dataToSend.statename))\n        dispatch(GetCommonData_fetched({ data: data, dataToSend: dataToSend }));\n      }\n    }\n  }\n  catch (e) {\n\n  }\n\n\n  return function (dispatch, getState) {\n    axios\n      .get(config.api.base_url + \"/mydb/list/\", {\n        params: dataToSend\n      })\n      .then(data => {\n        if (dataToSend.state && dataToSend.statename) {\n          localStorage.setItem(dataToSend.statename, JSON.stringify(data.data.data));\n        }\n        if (cb) {\n          cb(data);\n        }\n        dispatch(GetCommonData_fetched({ data: data.data.data[0], dataToSend: dataToSend }));\n      })\n      .catch(error => {\n        dispatch(GetCommonData_fetch_error(error, dataToSend));\n      });\n  };\n};\n\n\n\n\nconst InsertData_fetched = Todos => {\n\n  return {\n    type: constants.INSERT_COMMON_SUCCESS,\n    payload: Todos.data\n  };\n};\n\nconst InsertData_fetch_error = error => {\n  return {\n    type: constants.INSERT_COMMON_FAIL,\n    payload: error\n  };\n};\n\nexport const InsertData = (dataToSend, cb) => {\n  return function (dispatch, getState) {\n    axios\n      .post(config.api.base_url + \"/mydb/insert/\", {\n        data: dataToSend\n      })\n      .then(data => {\n        if (cb) {\n          cb(data);\n        }\n        dispatch(InsertData_fetched({ data: data.data }));\n      })\n      .catch(error => {\n        dispatch(InsertData_fetch_error(error));\n      });\n  };\n};\n\n\nconst UpdateData_fetched = Todos => {\n\n  return {\n    type: constants.UPDATE_COMMON_SUCCESS,\n    payload: Todos.data\n  };\n};\n\nconst UpdateData_fetch_error = error => {\n  return {\n    type: constants.UPDATE_COMMON_FAIL,\n    payload: error\n  };\n};\n\nexport const UpdateData = (dataToSend, cb) => {\n\n  return function (dispatch, getState) {\n    axios\n      .post(config.api.base_url + \"/mydb/update/\", {\n        data: dataToSend\n      })\n      .then(data => {\n        if (cb) {\n          cb(data);\n        }\n        dispatch(UpdateData_fetched({ data: data.data }));\n      })\n      .catch(error => {\n        dispatch(UpdateData_fetch_error(error));\n      });\n  };\n};\n\n\n\n\nexport const GetDataDirect = (dataToSend, cb) => {\n\n  try {\n    if ((dataToSend.state && localStorage.getItem(dataToSend.statename)) || localStorage.getItem(dataToSend.statename)) {\n\n      let data = JSON.parse(localStorage.getItem(dataToSend.statename));\n      cb(data);\n      return;\n    }\n  }\n  catch (e) {\n\n  }\n  //return function (dispatch, getState) {\n  axios\n    .get(config.api.base_url + \"/mydb/list/\", {\n      params: dataToSend\n    })\n    .then(data => {\n      if (dataToSend.state && dataToSend.statename) {\n        localStorage.setItem(dataToSend.statename, JSON.stringify(data.data.data));\n      }\n      cb(data.data.data);\n\n      //dispatch(GetCommonData_fetched({ data: data.data.data[0], dataToSend: dataToSend }));\n    })\n    .catch(error => {\n      //dispatch(GetCommonData_fetch_error(error, dataToSend));\n    });\n  //};\n\n};\n\nexport const GetRealTimeAgentData = (manager, context, cb) => {\n\n  let url = config.api.realtimeurl + \"RealTimeAgentStatus?managercode=\" + (context == \"\" ? manager : \"\") + \"&context=\" + context;\n\n  axios\n    .get(url)\n    .then(data => {\n\n      cb(data);\n      //dispatch(GetCommonData_fetched({ data: data.data.data[0], dataToSend: dataToSend }));\n    })\n    .catch(error => {\n      //dispatch(GetCommonData_fetch_error(error, dataToSend));\n    });\n  //};\n\n};\n\nexport const GetRealTimeTotalData = (context, cb) => {\n\n  let url = config.api.realtimeurl + \"RealTimeData?context=\" + context;\n\n  axios\n    .get(url)\n    .then(data => {\n\n      cb(data);\n      //dispatch(GetCommonData_fetched({ data: data.data.data[0], dataToSend: dataToSend }));\n    })\n    .catch(error => {\n      //dispatch(GetCommonData_fetch_error(error, dataToSend));\n    });\n  //};\n\n};\n\n\nexport const SendOTP = (dataToSend, cb) => {\n  let url = config.api.SendOTP;\n  const headers = {\n    'Content-Type': 'application/json',\n    'Authorization': 'cG9saWN5 YmF6YWFy'\n  }\n  axios\n    .post(url,\n      dataToSend\n      , {\n        headers: headers\n      })\n    .then(data => {\n\n      cb(data);\n    })\n    .catch(error => {\n    });\n};\n\nexport const ValidateOTP = (dataToSend, cb) => {\n  let url = config.api.ValidateOTP;\n  const headers = {\n    'Content-Type': 'application/json',\n    'Authorization': 'cG9saWN5 YmF6YWFy'\n  }\n  axios\n    .post(url,\n      dataToSend\n      , {\n        headers: headers\n      })\n    .then(data => {\n\n      cb(data);\n    })\n    .catch(error => {\n    });\n};\n\nexport const GetComunicationData = (dataToSend, cb) => {\n\n  return function (dispatch, getState) {\n    axios\n      .get(config.api.ServiceAPI + dataToSend.root, {\n        params: dataToSend.data\n      })\n      .then(data => {\n        cb(data);\n        //dispatch(GetCommonData_fetched({ data: data, dataToSend: dataToSend }));\n      })\n      .catch(error => {\n        dispatch(GetCommonData_fetch_error(error, dataToSend));\n      });\n  };\n};","\r\nimport React, { Suspense } from 'react';\r\n\r\nimport {\r\n    GetCommonData, GetCommonspData, GetDataDirect\r\n} from \"../../store/actions/CommonAction\";\r\nimport { getUrlParameter, getuser } from '../../utility/utility.jsx';\r\n\r\n\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport 'react-checkbox-tree/lib/react-checkbox-tree.css';\r\nimport CheckboxTree from 'react-checkbox-tree';\r\n\r\n\r\nclass ManagerHierarchy extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            nodes: [],\r\n            checked: [],\r\n            expanded: [],\r\n        }\r\n        //this.onExpand = this.onExpand.bind(this);\r\n    }\r\n    componentDidMount() {\r\n\r\n        let UserId = getuser().RoleId == 2 ? 75 : getuser().UserID;\r\n\r\n        GetDataDirect({\r\n            root: \"Hierarchy\",\r\n            ManagerId: UserId,\r\n            statename: \"Hierarchy-\" + UserId,\r\n            value: this.props.value,\r\n            state: true\r\n        }, function (result) {\r\n\r\n            let str = JSON.stringify(result);\r\n            var res = str.replace(/UserName/g, \"label\");\r\n            res = res.replace(this.props.value, \"value\");\r\n\r\n            this.setState({ nodes: JSON.parse(res) });\r\n        }.bind(this));\r\n    }\r\n    componentWillReceiveProps(nextProps) {\r\n\r\n    }\r\n\r\n\r\n    onButtonClick() {\r\n        this.props.handleShow({\r\n            SelectedSupervisors: this.state.checked\r\n        });\r\n        this.forceUpdate();\r\n    }\r\n    onMouseEnter(e) {\r\n        document.getElementById(\"floating\").style.right = 0\r\n        document.getElementById(\"handle\").style.right = \"395px\"\r\n        //e.target.style.right = 0;\r\n    }\r\n    onMouseOut(e) {\r\n        setTimeout(function () {\r\n            document.getElementById(\"floating\").style.right = \"-400px\"\r\n            document.getElementById(\"handle\").style.right = \"-15px\"\r\n        }, 700);\r\n\r\n        //e.target.style.right = \"-350px\";\r\n    }\r\n    RemoveChecked(checkeditem) {\r\n        const { checked } = this.state;\r\n        let index = checked.indexOf(checkeditem);\r\n        if (index > -1) {\r\n            checked.splice(index, 1);\r\n        }\r\n        this.setState(checked);\r\n    }\r\n    onClick() {\r\n\r\n    }\r\n    render() {\r\n        const { nodes, checked } = this.state;\r\n        if (nodes.length == 0) {\r\n            return null;\r\n        }\r\n        return (\r\n\r\n\r\n            <div id=\"floating\" className=\"floating\" onMouseLeave={this.onMouseOut}>\r\n\r\n                <Row >\r\n                    <Col md=\"8\"><div id=\"handle\" className=\"handle\" onClick={this.onMouseEnter}>Filter</div></Col>\r\n                    <Col md=\"4\"><input type=\"button\" className=\"btn btn-primary\" onClick={this.onButtonClick.bind(this)} value=\"Show\" /></Col>\r\n                </Row>\r\n\r\n                <Row>\r\n                    <Col>\r\n\r\n                        <div className=\"managers\">\r\n                            <CheckboxTree\r\n                                nodes={nodes}\r\n                                checked={this.state.checked}\r\n                                expanded={this.state.expanded}\r\n                                checkModel=\"all\"\r\n                                name=\"UserName\"\r\n                                showNodeIcon={false}\r\n                                onCheck={checked => this.setState({ checked })}\r\n                                onExpand={expanded => this.setState({ expanded })}\r\n                                showExpandAll={true}\r\n                            />\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n\r\n\r\n\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default ManagerHierarchy;\r\n","\nimport React from \"react\";\nimport { Form } from 'react-bootstrap';\nimport { connect } from \"react-redux\";\n// reactstrap components\n\nimport {\n    GetCommonData\n} from \"../../store/actions/CommonAction\";\nclass DropDown extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            items: [],\n        }\n    }\n    componentDidMount() {\n    }\n    componentWillReceiveProps(nextProps) {\n        this.setState({ items: nextProps.items });\n\n    }\n\n    displayoption(item) {\n        return <option key={item.Id} value={item.Id}>{item.Display}</option>\n    }\n\n    render() {\n\n\n        let { name, value, onChange, visible, items } = this.props;\n        if (!items) {\n            items = [];\n        }\n        if (visible == false) {\n            return null;\n        }\n        return (\n\n            <div>\n\n                <Form.Control as=\"select\" disabled={this.props.disabled} value={value} name={name} onChange={onChange}>\n                    {(this.props.firstoption !== false) && (\n                        <option key={0} value={0}>{this.props.firstoption ? this.props.firstoption : \"Select\"}</option>\n                    )}\n                    {items.map(item => (\n                        this.displayoption(item)\n                    ))}\n\n                </Form.Control>\n            </div>\n\n        );\n    }\n}\n\n\nexport default DropDown;\n\n","import React from 'react';\r\n\r\nfunction ShowDetail() {\r\n  return (\r\n      <i className=\"fa fa-spinner fa-spin\" />\r\n  );\r\n}\r\n\r\nexport default ShowDetail;"],"sourceRoot":""}