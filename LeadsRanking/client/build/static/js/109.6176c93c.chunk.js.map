{"version":3,"sources":["views/UploadUserGrades.jsx","store/actions/CommonMysqlAction.jsx"],"names":["UploadUserGrades","props","state","root","PageTitle","addClass","UserId","selectedFile","ManagerId","DownloadedFile","ResponseData","UploadStatusColumns","prodId","this","UserList","columnlist","fnDatatableCol","managerid","getuser","UserID","setState","event","console","log","target","files","e","preventDefault","formData","FormData","append","name","document","getElementById","innerHTML","PostUserGrades","results","data","alert","bind","toast","type","to","download","length","Object","entries","map","key","push","label","cell","row","className","Status","toString","searchable","columns","md","tag","ref","onSubmit","onFileUpload","onChange","onFileChange","id","renderDownloadFile","fileData","renderUploadStatus","React","Component","connect","CommonData","GetMySqlData","GetCommonData_fetched","Todos","dataToSend","statename","localStorage","setItem","JSON","stringify","constants","GET_COMMON_SUCCESS","payload","GetCommonData_fetch_error","error","GET_COMMON_FAIL","cb","undefined","dispatch","getState","getItem","parse","axios","get","config","api","base_url","params","then","catch","InsertData","post","INSERT_COMMON_SUCCESS","INSERT_COMMON_FAIL","InsertData_fetch_error","UpdateData","UPDATE_COMMON_SUCCESS","UPDATE_COMMON_FAIL","UpdateData_fetch_error","GetDataDirect"],"mappings":"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","file":"static/js/109.6176c93c.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {\r\n    PostUserGrades\r\n} from \"../store/actions/CommonAction\";\r\nimport {\r\n    GetMySqlData\r\n} from \"../store/actions/CommonMysqlAction\";\r\nimport { connect } from \"react-redux\";\r\nimport { getuser, fnDatatableCol, joinObject } from '../utility/utility.jsx';\r\nimport DataTable from './Common/DataTableWithFilter';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\n// reactstrap components\r\nimport {\r\n    Card,\r\n    CardHeader,\r\n    CardBody,\r\n    CardTitle,\r\n    Table,\r\n    Row,\r\n    Col\r\n} from \"reactstrap\";\r\n\r\nclass UploadUserGrades extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            root: \"\",\r\n            PageTitle: \"\",\r\n            addClass: '',\r\n            UserId: '',\r\n            selectedFile: null,\r\n            ManagerId: '',\r\n            DownloadedFile: '/SampleExcelfiles/UserGrades.xlsx',\r\n            ResponseData:'',\r\n            UploadStatusColumns: [],\r\n            prodId: '',\r\n        };\r\n\r\n     \t/*this.ProductList = {\r\n            config:\r\n            {\r\n              root: \"Products\",\r\n              cols: [\"ID AS Id\", \"ProductName AS Display\"],\r\n              con: [{ \"Isactive\": 1 }],\r\n            }\r\n  \t\t };*/\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.UserList();\r\n    }\r\n\r\n    fnDatatableCol(columnlist) {\r\n\r\n        var columns = fnDatatableCol(columnlist);\r\n        return columns;\r\n    }\r\n\r\n    UserList() {debugger;\r\n        const user = getuser();\r\n        var managerid = user.UserID;\r\n        this.setState({ManagerId : managerid});\r\n    }\r\n\r\n    // On file select (from the pop up) \r\n    onFileChange(event) { debugger;\r\n        console.log(event.target.files[0]);\r\n        // Update the state \r\n        this.setState({ selectedFile: event.target.files[0] }); \r\n       \r\n    }; \r\n\r\n    // On file upload (click the upload button) \r\n    onFileUpload(e)\r\n    {   \r\n        e.preventDefault();\r\n        if (this.state.selectedFile == null) {\r\n        toast(\"Please choose Excel File\", { type: 'error' });\r\n        return;\r\n        }\r\n        // Create an object of formData \r\n        const formData = new FormData(); \r\n\r\n        // Update the formData object \r\n        formData.append( \r\n          \"myFile\", \r\n          this.state.selectedFile, \r\n          this.state.selectedFile.name\r\n        ); \r\n        formData.append('UserId', this.state.ManagerId);\r\n               \r\n        // Details of the uploaded file \r\n        console.log(this.state.selectedFile);      \r\n        document.getElementById('uploadbutton').innerHTML = 'Upload! <i class=\"fa fa-spinner fa-spin\"></i>';\r\n        // Request made to the backend api \r\n        // Send formData object \r\n        try {\r\n            PostUserGrades(formData, function (results) {\r\n                console.log(results);\r\n                document.getElementById('uploadbutton').innerHTML = 'Upload!';\r\n                this.setState({ ResponseData: results.data.data });\r\n                alert('File uploaded');\r\n            //     if(results.data.status == 200){\r\n            //     toast(results.data.data, { type: 'success' });\r\n            //     }else{\r\n            //    // toast(results.data.data, { type: 'error' });    \r\n            //     }\r\n            }.bind(this));\r\n        } catch(e) {\r\n            console.log(e);\r\n        }\r\n    }\r\n\r\n    fileData() \r\n    {      debugger;\r\n        if (this.state.selectedFile) { \r\n            \r\n          return ( \r\n            <div> \r\n              {/* <span>File Details:</span>  */}\r\n              <span>File Name: {this.state.selectedFile.name}</span> \r\n              <p>File Type: {this.state.selectedFile.type}</p> \r\n              {/* <p> \r\n                Last Modified:{\" \"} \r\n                {this.state.selectedFile.lastModifiedDate.toDateString()} \r\n              </p>  */}\r\n            </div> \r\n          ); \r\n        } else { \r\n          return ( \r\n            <div> \r\n              <br /> \r\n              <h4>Choose before Pressing the Upload button</h4> \r\n            </div> \r\n          ); \r\n        } \r\n    } \r\n\r\n    renderDownloadFile(){\r\n        return <Link to={this.state.DownloadedFile} target=\"_blank\" download>Download Sample Excel File</Link>\r\n    }\r\n\r\n    renderUploadStatus() {debugger;\r\n\r\n        if (this.state.ResponseData && this.state.ResponseData.length > 0) {\r\n            let UploadStatusColumns = [];\r\n            let ResponseData = this.state.ResponseData;\r\n      \r\n            Object.entries(ResponseData[0]).map(([key,value])=>{\r\n                    if(key == 'Status'){\r\n                        UploadStatusColumns.push({ label: \"Status\",\r\n                            name: \"Status\",\r\n                            cell: row => <div className=\"Status\">{row.Status ? row.Status : \"N/A\"}</div>,\r\n                        })\r\n                    }else{\r\n                        UploadStatusColumns.push({\r\n                            \"name\": key.toString(),\r\n                            \"label\": key.toString(),\r\n                            searchable: true,                    \r\n                        })\r\n                    }\r\n              })\r\n\r\n            const columns = this.fnDatatableCol(UploadStatusColumns);\r\n\r\n            return <Row>\r\n                <Col md=\"12\">\r\n                    <Card>\r\n                        <CardHeader>\r\n                            <Row>\r\n                                <Col md={12}>\r\n                                    <CardTitle tag=\"h6\">Upload Data Status</CardTitle>\r\n                                </Col>\r\n                            </Row>\r\n                        </CardHeader>\r\n                        <CardBody>\r\n                            <DataTable columns={columns} data={this.state.ResponseData} />\r\n                        </CardBody>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    /*productchange(e, props) {\r\n        this.setState({ prodId: e.target.value });\r\n    }*/\r\n    render() {\r\n        return (\r\n            <>\r\n                <div className=\"content\">\r\n                    <ToastContainer />\r\n                    <Row>\r\n                        <Col md=\"12\">\r\n                            <Card>\r\n                                <CardHeader>                                    \r\n                                    <Row>\r\n                                        <Col md={6}>\r\n                                            {/*\r\n                                            <Form.Group controlId=\"product_dropdown\">\r\n                                                <DropDown firstoption=\"Select Product\" valueTobefiltered={[2,115,7]} col={this.ProductList} onChange={this.productchange.bind(this)}>\r\n                                                </DropDown>\r\n                                            </Form.Group> */}\r\n                                            <form ref=\"form\" onSubmit={this.onFileUpload.bind(this)}>\r\n                                                <input type=\"file\" onChange={this.onFileChange.bind(this)} /> \r\n                                                <button type=\"submit\" id=\"uploadbutton\" className=\"btn btn-primary\">Upload!</button>\r\n                                            </form>\r\n                                        </Col>\r\n                                    </Row>\r\n                                    {this.renderDownloadFile()}\r\n\r\n                                </CardHeader>\r\n                                <CardBody>\r\n                                {this.fileData()}\r\n                                {this.renderUploadStatus()}\r\n                                </CardBody>\r\n                            </Card>\r\n                        </Col>\r\n                    </Row>\r\n                 </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        CommonData: state.CommonData\r\n    };\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    {\r\n        GetMySqlData,\r\n    }\r\n)(UploadUserGrades);","import axios from \"axios\";\nimport config from \"../../config.jsx\";\nimport constants from \"../../Constants/Constants.jsx\";\n\nconst GetCommonData_fetched = Todos => {\n\n  if (Todos.dataToSend.state && Todos.dataToSend.statename) {\n    localStorage.setItem(Todos.dataToSend.statename, JSON.stringify(Todos.data));\n  }\n\n  return {\n    type: constants.GET_COMMON_SUCCESS,\n    payload: Todos.data,\n    root: Todos.dataToSend.root\n  };\n};\n\nconst GetCommonData_fetch_error = error => {\n  return {\n    type: constants.GET_COMMON_FAIL,\n    payload: error\n  };\n};\n\nexport const GetMySqlData = (dataToSend,cb) => {\n\n  if (dataToSend.data != null || dataToSend.data != undefined) {\n    return function (dispatch, getState) {\n      dispatch(GetCommonData_fetched({ data: dataToSend.data, dataToSend: dataToSend }));\n    };\n  }\n  try {\n    if ((dataToSend.state && localStorage.getItem(dataToSend.statename)) || localStorage.getItem(dataToSend.statename)) {\n\n      return function (dispatch, getState) {\n        let data = JSON.parse(localStorage.getItem(dataToSend.statename))\n        dispatch(GetCommonData_fetched({ data: data, dataToSend: dataToSend }));\n      }\n    }\n  }\n  catch (e) {\n\n  }\n\n\n  return function (dispatch, getState) {\n    axios\n      .get(config.api.base_url + \"/mydb/list/\", {\n        params: dataToSend\n      })\n      .then(data => {\n        if (dataToSend.state && dataToSend.statename) {\n          localStorage.setItem(dataToSend.statename, JSON.stringify(data.data.data));\n        }\n        if (cb) {\n          cb(data);\n        }\n        dispatch(GetCommonData_fetched({ data: data.data.data[0], dataToSend: dataToSend }));\n      })\n      .catch(error => {\n        dispatch(GetCommonData_fetch_error(error, dataToSend));\n      });\n  };\n};\n\n\n\n\nconst InsertData_fetched = Todos => {\n\n  return {\n    type: constants.INSERT_COMMON_SUCCESS,\n    payload: Todos.data\n  };\n};\n\nconst InsertData_fetch_error = error => {\n  return {\n    type: constants.INSERT_COMMON_FAIL,\n    payload: error\n  };\n};\n\nexport const InsertData = (dataToSend, cb) => {\n  return function (dispatch, getState) {\n    axios\n      .post(config.api.base_url + \"/mydb/insert/\", {\n        data: dataToSend\n      })\n      .then(data => {\n        if (cb) {\n          cb(data);\n        }\n        dispatch(InsertData_fetched({ data: data.data }));\n      })\n      .catch(error => {\n        dispatch(InsertData_fetch_error(error));\n      });\n  };\n};\n\n\nconst UpdateData_fetched = Todos => {\n\n  return {\n    type: constants.UPDATE_COMMON_SUCCESS,\n    payload: Todos.data\n  };\n};\n\nconst UpdateData_fetch_error = error => {\n  return {\n    type: constants.UPDATE_COMMON_FAIL,\n    payload: error\n  };\n};\n\nexport const UpdateData = (dataToSend, cb) => {\n\n  return function (dispatch, getState) {\n    axios\n      .post(config.api.base_url + \"/mydb/update/\", {\n        data: dataToSend\n      })\n      .then(data => {\n        if (cb) {\n          cb(data);\n        }\n        dispatch(UpdateData_fetched({ data: data.data }));\n      })\n      .catch(error => {\n        dispatch(UpdateData_fetch_error(error));\n      });\n  };\n};\n\n\n\n\nexport const GetDataDirect = (dataToSend, cb) => {\n\n  try {\n    if ((dataToSend.state && localStorage.getItem(dataToSend.statename)) || localStorage.getItem(dataToSend.statename)) {\n\n      let data = JSON.parse(localStorage.getItem(dataToSend.statename));\n      cb(data);\n      return;\n    }\n  }\n  catch (e) {\n\n  }\n  //return function (dispatch, getState) {\n  axios\n    .get(config.api.base_url + \"/mydb/list/\", {\n      params: dataToSend\n    })\n    .then(data => {\n      if (dataToSend.state && dataToSend.statename) {\n        localStorage.setItem(dataToSend.statename, JSON.stringify(data.data.data));\n      }\n      cb(data.data.data);\n\n      //dispatch(GetCommonData_fetched({ data: data.data.data[0], dataToSend: dataToSend }));\n    })\n    .catch(error => {\n      //dispatch(GetCommonData_fetch_error(error, dataToSend));\n    });\n  //};\n\n};\n\nexport const GetRealTimeAgentData = (manager, context, cb) => {\n\n  let url = config.api.realtimeurl + \"RealTimeAgentStatus?managercode=\" + (context == \"\" ? manager : \"\") + \"&context=\" + context;\n\n  axios\n    .get(url)\n    .then(data => {\n\n      cb(data);\n      //dispatch(GetCommonData_fetched({ data: data.data.data[0], dataToSend: dataToSend }));\n    })\n    .catch(error => {\n      //dispatch(GetCommonData_fetch_error(error, dataToSend));\n    });\n  //};\n\n};\n\nexport const GetRealTimeTotalData = (context, cb) => {\n\n  let url = config.api.realtimeurl + \"RealTimeData?context=\" + context;\n\n  axios\n    .get(url)\n    .then(data => {\n\n      cb(data);\n      //dispatch(GetCommonData_fetched({ data: data.data.data[0], dataToSend: dataToSend }));\n    })\n    .catch(error => {\n      //dispatch(GetCommonData_fetch_error(error, dataToSend));\n    });\n  //};\n\n};\n\n\nexport const SendOTP = (dataToSend, cb) => {\n  let url = config.api.SendOTP;\n  const headers = {\n    'Content-Type': 'application/json',\n    'Authorization': 'cG9saWN5 YmF6YWFy'\n  }\n  axios\n    .post(url,\n      dataToSend\n      , {\n        headers: headers\n      })\n    .then(data => {\n\n      cb(data);\n    })\n    .catch(error => {\n    });\n};\n\nexport const ValidateOTP = (dataToSend, cb) => {\n  let url = config.api.ValidateOTP;\n  const headers = {\n    'Content-Type': 'application/json',\n    'Authorization': 'cG9saWN5 YmF6YWFy'\n  }\n  axios\n    .post(url,\n      dataToSend\n      , {\n        headers: headers\n      })\n    .then(data => {\n\n      cb(data);\n    })\n    .catch(error => {\n    });\n};\n\nexport const GetComunicationData = (dataToSend, cb) => {\n\n  return function (dispatch, getState) {\n    axios\n      .get(config.api.ServiceAPI + dataToSend.root, {\n        params: dataToSend.data\n      })\n      .then(data => {\n        cb(data);\n        //dispatch(GetCommonData_fetched({ data: data, dataToSend: dataToSend }));\n      })\n      .catch(error => {\n        dispatch(GetCommonData_fetch_error(error, dataToSend));\n      });\n  };\n};"],"sourceRoot":""}