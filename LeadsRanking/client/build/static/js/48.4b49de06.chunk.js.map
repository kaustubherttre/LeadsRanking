{"version":3,"sources":["views/BulkUpload.jsx","views/Common/AlertBox.jsx","store/actions/CommonMysqlAction.jsx","views/Common/DropDownListMysql.jsx","views/Common/Date.jsx"],"names":["BulkUpload","props","state","root","PageTitle","addClass","UserId","selectedFile","uploadFile","ManagerId","DownloadedFile","ResponseData","UploadStatusColumns","StartDate","moment","format","dateRangeRef","React","createRef","this","UserList","type","getType","setState","columnlist","fnDatatableCol","managerid","getuser","UserID","event","console","log","target","files","loc","window","location","href","lastUrl","substring","lastIndexOf","length","split","e","preventDefault","formData","FormData","append","name","PostAgentChatFileData","results","data","bind","toast","value","to","download","keys","Object","index","push","label","cell","row","className","status","toString","searchable","columns","md","tag","ref","onSubmit","onFileUpload","id","onChange","onFileChange","renderDownloadFile","fileData","renderUploadStatus","Component","connect","CommonData","GetMySqlData","GetCommonspData","AlertBox","show","nextProps","setTimeout","variant","body","GetCommonData_fetched","Todos","dataToSend","statename","localStorage","setItem","JSON","stringify","constants","GET_COMMON_SUCCESS","payload","GetCommonData_fetch_error","error","GET_COMMON_FAIL","cb","undefined","dispatch","getState","getItem","parse","axios","get","config","api","base_url","params","then","catch","InsertData","post","INSERT_COMMON_SUCCESS","INSERT_COMMON_FAIL","InsertData_fetch_error","UpdateData","UPDATE_COMMON_SUCCESS","UPDATE_COMMON_FAIL","UpdateData_fetch_error","GetDataDirect","DropDownListMysql","items","CallApi","isError","col","res","replace","Idfield","Displayfield","limit","skip","cols","con","visible","Control","as","disabled","key","firstoption","map","item","Id","Display","Date","handleStartDateChange","_isAMomentObject","onStartDate","startdate","enddate","add","handleEndDateChange","onEndDate","validation","currentDate","isBefore","validationEndDate","Group","controlId","dateFormat"],"mappings":"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","file":"static/js/48.4b49de06.chunk.js","sourcesContent":["import React from \"react\";\nimport {\n    GetCommonData, GetCommonspData, GetFileExists, PostIncentiveFormData, PostAgentChatFileData, UpdateAgentChatParams\n} from \"../store/actions/CommonAction\";\nimport {\n    GetMySqlData, GetDataDirect\n} from \"../store/actions/CommonMysqlAction\";\nimport { connect } from \"react-redux\";\nimport { getuser, fnDatatableCol, joinObject, getUrlParameter } from '../utility/utility.jsx';\nimport DropDownListMysql from './Common/DropDownListMysql';\nimport DropDown from './Common/DropDownList';\nimport { If, Then, Else } from 'react-if';\nimport AlertBox from './Common/AlertBox';\nimport DataTable from './Common/DataTableWithFilter';\nimport Date from \"./Common/Date\"\nimport moment from 'moment';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { Link } from 'react-router-dom'\n\n// reactstrap components\nimport {\n    Card,\n    CardHeader,\n    CardBody,\n    CardTitle,\n    Table,\n    Row,\n    Col\n} from \"reactstrap\";\nimport { ButtonGroup, Button, Modal, Form } from 'react-bootstrap';\nimport { func, string } from \"prop-types\";\n\nclass BulkUpload extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            root: \"\",\n            PageTitle: \"\",\n            addClass: 'btn btn-primary',\n            UserId: '',\n            selectedFile: null,\n            uploadFile: '',\n            ManagerId: '',\n            DownloadedFile: '',\n            ResponseData:'',\n            UploadStatusColumns: [],\n            StartDate: moment().format(\"YYYY-MM-01\"),\n        };\n\n        this.dateRangeRef = React.createRef();\n\n    }\n\n    componentDidMount() {\n        this.UserList();\n        let type = this.getType();\n        this.setState({ DownloadedFile : '/SampleExcelfiles/'+type+'.xlsx'})\n\n    }\n\n    fnDatatableCol(columnlist) {\n\n        var columns = fnDatatableCol(columnlist);\n        return columns;\n    }\n\n    UserList() {debugger;\n        const user = getuser();\n        var managerid = user.UserID;\n        this.setState({ManagerId : managerid});\n    }\n\n    // On file select (from the pop up) \n    onFileChange(event) { debugger;\n        console.log(event.target.files[0]);\n        // Update the state \n        this.setState({ selectedFile: event.target.files[0] }); \n       \n    }; \n\n    getType(){\n        var loc = window.location.href;\n        let lastUrl = loc.substring(loc.lastIndexOf(\"/\") + 1, loc.length);\n        lastUrl = lastUrl.split('?');\n        //console.log('lasturl',lastUrl[0]);\n        return lastUrl[0];\n    }\n\n    // On file upload (click the upload button) \n    onFileUpload(e)\n    {   \n        this.setState({addClass:'btn btn-primary fa fa-spinner'});\n        e.preventDefault();\n         debugger;\n        // if (this.state.uploadFile == '') {\n        // toast(\"Please select Upload File Type\", { type: 'error' });\n        // return;\n        // }\n        if (this.state.selectedFile == null) {\n        toast(\"Please choose Excel File\", { type: 'error' });\n        return;\n        }\n        // Create an object of formData \n        const formData = new FormData(); \n        console.log(formData);\n        // Update the formData object \n       \n        var type =  this.getType();\n        formData.append( \n          \"myFile\",                   \n          this.state.selectedFile, \n          this.state.selectedFile.name \n        ); \n        formData.append('type', type); \n        formData.append('UserId', this.state.ManagerId); \n        // formData.append('ValidFrom', moment(this.state.StartDate).format(\"YYYY-MM-01\"));    \n               \n        // Details of the uploaded file \n        console.log(this.state.selectedFile);      \n        // Request made to the backend api \n        // Send formData object \n        PostAgentChatFileData(formData, function (results) {\n            console.log(results);\n            this.setState({ ResponseData: results.data.data });\n            this.setState({ addClass: 'btn btn-primary' });\n       \n        }.bind(this));\n    }\n    \n    fileData() \n    {      \n        if (this.state.selectedFile) { \n            \n          return ( \n            <div> \n              {/* <span>File Details:</span>  */}\n              <span>File Name: {this.state.selectedFile.name}</span> \n              <p>File Type: {this.state.selectedFile.type}</p> \n              {/* <p> \n                Last Modified:{\" \"} \n                {this.state.selectedFile.lastModifiedDate.toDateString()} \n              </p>  */}\n            </div> \n          ); \n        } else { \n          return ( \n            <div> \n              <br /> \n              <h4>Choose before Pressing the Upload button</h4> \n            </div> \n          ); \n        } \n    } \n\n    uploadfilechange(e, props){\n        this.setState({\n            uploadFile: e.target.value,\n            DownloadedFile: '/SampleExcelfiles/FirstPremPaid.xlsx'\n         });\n       \n    }\n\n    renderDownloadFile(){\n        if (this.state.DownloadedFile) {\n            return  <Link to={this.state.DownloadedFile} target=\"_blank\" download>Download Sample Excel File</Link>\n        }\n    }\n\n    renderUploadStatus() {\n\n        if (this.state.ResponseData && this.state.ResponseData.length > 0) {\n            let UploadStatusColumns = [];\n            let ResponseData = this.state.ResponseData;\n            debugger;\n            let keys = Object.keys(ResponseData[0]);\n            console.log(keys);\n            for(var index=0;index<keys.length;index++){\n                if(keys[index] == 'status'){                       \n                    UploadStatusColumns.push({ label: \"Status\",\n                                name: \"status\",\n                                cell: row => <div className=\"Status\">{row.status ? row.status : \"N.A\"}</div>,\n                    })      \n                }else if(keys[index] == 'ecode'){\n                    UploadStatusColumns.push({\n                        \"name\": keys[index].toString(),\n                        \"label\": keys[index].toString(),\n                         searchable: true,  \n                        }) \n                }\n                else{\n                    UploadStatusColumns.push({\n                    \"name\": keys[index].toString(),\n                    \"label\": keys[index].toString(),\n                    })\n                    }\n            }\n\n\n            const columns = this.fnDatatableCol(UploadStatusColumns);\n\n            return <Row>\n                <Col md=\"12\">\n                    <Card>\n                        <CardHeader>\n                            <Row>\n                                <Col md={7}>\n                                    <CardTitle tag=\"h6\">Upload Data Status</CardTitle>\n                                </Col>\n                            </Row>\n                        </CardHeader>\n                        <Col md={7}>\n                        <CardBody>\n                            <DataTable columns={columns} data={this.state.ResponseData} />\n                        </CardBody>\n                        </Col>\n                    </Card>\n                </Col>\n            </Row>\n        }\n\n        return null;\n\n    }\n\n    render() {\n        return (\n            <>\n                <div className=\"content\">\n                    <ToastContainer />\n                    <Row>\n                        <Col md=\"12\">\n                            <Card>\n                                <CardHeader>                                    \n                                    <Row>\n                                    <form ref=\"form\" onSubmit={this.onFileUpload.bind(this)} id=\"paymentForm\">\n                                            <input type=\"file\" onChange={this.onFileChange.bind(this)} /> \n                                            <button type=\"submit\" className={this.state.addClass}>Upload!</button>\n                                    </form>\n                                   </Row>\n\n                                </CardHeader>\n                                <CardBody>\n                                {this.renderDownloadFile()}   \n                                {this.fileData()}\n                                {this.renderUploadStatus()}\n                                </CardBody>\n                            </Card>\n                        </Col>\n                    </Row>\n                 </div>\n            </>\n        );\n    }\n}\n\n\nfunction mapStateToProps(state) {\n    return {\n        CommonData: state.CommonData\n    };\n}\n\nexport default connect(\n    mapStateToProps,\n    {\n        GetMySqlData,\n        GetCommonspData\n    }\n)(BulkUpload);","\r\nimport React from \"react\";\r\nimport { Alert } from 'react-bootstrap';\r\n\r\n\r\nclass AlertBox extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            show: this.props.show\r\n        }\r\n    }\r\n    componentDidUpdate() {\r\n\r\n    }\r\n    componentWillReceiveProps(nextProps) {\r\n        this.setState({ show: nextProps.show });\r\n        if (nextProps.show) {\r\n            setTimeout(function () {\r\n                this.setState({ show: false });\r\n            }.bind(this), 5000);\r\n        }\r\n    }\r\n    render() {\r\n        if (this.state.show) {\r\n            return (\r\n                <Alert variant={this.props.variant}>\r\n                    {this.props.body}\r\n                </Alert>\r\n            );\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n}\r\n\r\nexport default AlertBox;\r\n","import axios from \"axios\";\nimport config from \"../../config.jsx\";\nimport constants from \"../../Constants/Constants.jsx\";\n\nconst GetCommonData_fetched = Todos => {\n\n  if (Todos.dataToSend.state && Todos.dataToSend.statename) {\n    localStorage.setItem(Todos.dataToSend.statename, JSON.stringify(Todos.data));\n  }\n\n  return {\n    type: constants.GET_COMMON_SUCCESS,\n    payload: Todos.data,\n    root: Todos.dataToSend.root\n  };\n};\n\nconst GetCommonData_fetch_error = error => {\n  return {\n    type: constants.GET_COMMON_FAIL,\n    payload: error\n  };\n};\n\nexport const GetMySqlData = (dataToSend,cb) => {\n\n  if (dataToSend.data != null || dataToSend.data != undefined) {\n    return function (dispatch, getState) {\n      dispatch(GetCommonData_fetched({ data: dataToSend.data, dataToSend: dataToSend }));\n    };\n  }\n  try {\n    if ((dataToSend.state && localStorage.getItem(dataToSend.statename)) || localStorage.getItem(dataToSend.statename)) {\n\n      return function (dispatch, getState) {\n        let data = JSON.parse(localStorage.getItem(dataToSend.statename))\n        dispatch(GetCommonData_fetched({ data: data, dataToSend: dataToSend }));\n      }\n    }\n  }\n  catch (e) {\n\n  }\n\n\n  return function (dispatch, getState) {\n    axios\n      .get(config.api.base_url + \"/mydb/list/\", {\n        params: dataToSend\n      })\n      .then(data => {\n        if (dataToSend.state && dataToSend.statename) {\n          localStorage.setItem(dataToSend.statename, JSON.stringify(data.data.data));\n        }\n        if (cb) {\n          cb(data);\n        }\n        dispatch(GetCommonData_fetched({ data: data.data.data[0], dataToSend: dataToSend }));\n      })\n      .catch(error => {\n        dispatch(GetCommonData_fetch_error(error, dataToSend));\n      });\n  };\n};\n\n\n\n\nconst InsertData_fetched = Todos => {\n\n  return {\n    type: constants.INSERT_COMMON_SUCCESS,\n    payload: Todos.data\n  };\n};\n\nconst InsertData_fetch_error = error => {\n  return {\n    type: constants.INSERT_COMMON_FAIL,\n    payload: error\n  };\n};\n\nexport const InsertData = (dataToSend, cb) => {\n  return function (dispatch, getState) {\n    axios\n      .post(config.api.base_url + \"/mydb/insert/\", {\n        data: dataToSend\n      })\n      .then(data => {\n        if (cb) {\n          cb(data);\n        }\n        dispatch(InsertData_fetched({ data: data.data }));\n      })\n      .catch(error => {\n        dispatch(InsertData_fetch_error(error));\n      });\n  };\n};\n\n\nconst UpdateData_fetched = Todos => {\n\n  return {\n    type: constants.UPDATE_COMMON_SUCCESS,\n    payload: Todos.data\n  };\n};\n\nconst UpdateData_fetch_error = error => {\n  return {\n    type: constants.UPDATE_COMMON_FAIL,\n    payload: error\n  };\n};\n\nexport const UpdateData = (dataToSend, cb) => {\n\n  return function (dispatch, getState) {\n    axios\n      .post(config.api.base_url + \"/mydb/update/\", {\n        data: dataToSend\n      })\n      .then(data => {\n        if (cb) {\n          cb(data);\n        }\n        dispatch(UpdateData_fetched({ data: data.data }));\n      })\n      .catch(error => {\n        dispatch(UpdateData_fetch_error(error));\n      });\n  };\n};\n\n\n\n\nexport const GetDataDirect = (dataToSend, cb) => {\n\n  try {\n    if ((dataToSend.state && localStorage.getItem(dataToSend.statename)) || localStorage.getItem(dataToSend.statename)) {\n\n      let data = JSON.parse(localStorage.getItem(dataToSend.statename));\n      cb(data);\n      return;\n    }\n  }\n  catch (e) {\n\n  }\n  //return function (dispatch, getState) {\n  axios\n    .get(config.api.base_url + \"/mydb/list/\", {\n      params: dataToSend\n    })\n    .then(data => {\n      if (dataToSend.state && dataToSend.statename) {\n        localStorage.setItem(dataToSend.statename, JSON.stringify(data.data.data));\n      }\n      cb(data.data.data);\n\n      //dispatch(GetCommonData_fetched({ data: data.data.data[0], dataToSend: dataToSend }));\n    })\n    .catch(error => {\n      //dispatch(GetCommonData_fetch_error(error, dataToSend));\n    });\n  //};\n\n};\n\nexport const GetRealTimeAgentData = (manager, context, cb) => {\n\n  let url = config.api.realtimeurl + \"RealTimeAgentStatus?managercode=\" + (context == \"\" ? manager : \"\") + \"&context=\" + context;\n\n  axios\n    .get(url)\n    .then(data => {\n\n      cb(data);\n      //dispatch(GetCommonData_fetched({ data: data.data.data[0], dataToSend: dataToSend }));\n    })\n    .catch(error => {\n      //dispatch(GetCommonData_fetch_error(error, dataToSend));\n    });\n  //};\n\n};\n\nexport const GetRealTimeTotalData = (context, cb) => {\n\n  let url = config.api.realtimeurl + \"RealTimeData?context=\" + context;\n\n  axios\n    .get(url)\n    .then(data => {\n\n      cb(data);\n      //dispatch(GetCommonData_fetched({ data: data.data.data[0], dataToSend: dataToSend }));\n    })\n    .catch(error => {\n      //dispatch(GetCommonData_fetch_error(error, dataToSend));\n    });\n  //};\n\n};\n\n\nexport const SendOTP = (dataToSend, cb) => {\n  let url = config.api.SendOTP;\n  const headers = {\n    'Content-Type': 'application/json',\n    'Authorization': 'cG9saWN5 YmF6YWFy'\n  }\n  axios\n    .post(url,\n      dataToSend\n      , {\n        headers: headers\n      })\n    .then(data => {\n\n      cb(data);\n    })\n    .catch(error => {\n    });\n};\n\nexport const ValidateOTP = (dataToSend, cb) => {\n  let url = config.api.ValidateOTP;\n  const headers = {\n    'Content-Type': 'application/json',\n    'Authorization': 'cG9saWN5 YmF6YWFy'\n  }\n  axios\n    .post(url,\n      dataToSend\n      , {\n        headers: headers\n      })\n    .then(data => {\n\n      cb(data);\n    })\n    .catch(error => {\n    });\n};\n\nexport const GetComunicationData = (dataToSend, cb) => {\n\n  return function (dispatch, getState) {\n    axios\n      .get(config.api.ServiceAPI + dataToSend.root, {\n        params: dataToSend.data\n      })\n      .then(data => {\n        cb(data);\n        //dispatch(GetCommonData_fetched({ data: data, dataToSend: dataToSend }));\n      })\n      .catch(error => {\n        dispatch(GetCommonData_fetch_error(error, dataToSend));\n      });\n  };\n};","\r\nimport React from \"react\";\r\nimport { Form } from 'react-bootstrap';\r\nimport { connect } from \"react-redux\";\r\n// reactstrap components\r\n\r\nimport {\r\n    GetMySqlData\r\n} from \"../../store/actions/CommonMysqlAction\";\r\nclass DropDownListMysql extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            items: [],\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        if (this.state.items && this.state.items.length === 0) {\r\n            this.CallApi();\r\n        }\r\n    }\r\n    componentWillReceiveProps(nextProps) {\r\n        \r\n        // if (nextProps.col.config.rebind) {\r\n            \r\n        // }\r\n\r\n        if (!nextProps.CommonData.isError) {\r\n            //debugger;\r\n            if (nextProps.CommonData[this.props.col.config.root]) {\r\n                let str = JSON.stringify(nextProps.CommonData[this.props.col.config.root]);\r\n                var res = str.replace(this.props.col.config.Idfield, \"Id\");\r\n                res = res.replace(this.props.col.config.Displayfield, \"Display\");\r\n\r\n                this.setState({ items: JSON.parse(res) });\r\n            }\r\n        }\r\n    }\r\n\r\n    componentWillUpdate(){\r\n        //this.CallApi();\r\n    }\r\n\r\n    CallApi() {\r\n\r\n        this.props.GetMySqlData({\r\n            limit: 10,\r\n            skip: 0,\r\n            root: this.props.col.config.root,\r\n            cols: this.props.col.config.cols,\r\n            con: this.props.col.config.con,\r\n            data: this.props.col.config.data,\r\n            statename: this.props.col.config.statename,\r\n            state: this.props.col.config.state\r\n        });\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        let { items } = this.state;\r\n        const { value, onChange, visible } = this.props;\r\n\r\n        if (!items) {\r\n            items = [];\r\n        }\r\n        if (visible == false) {\r\n            return null;\r\n        }\r\n        return (\r\n\r\n            <div>\r\n\r\n                <Form.Control as=\"select\" disabled={this.props.disabled} value={value} name={this.props.col.name} onChange={onChange}>\r\n                    <option key={0} value={0}>{this.props.firstoption ? this.props.firstoption : \"Select\"}</option>\r\n                    {items.map(item => (\r\n                        <option key={item.Id} value={item.Id}>{item.Display}</option>\r\n                    ))}\r\n\r\n                </Form.Control>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        CommonData: state.CommonData\r\n    };\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    {\r\n        GetMySqlData\r\n    }\r\n)(DropDownListMysql);\r\n\r\n","\r\nimport React from \"react\";\r\nimport { Form } from 'react-bootstrap';\r\n\r\n// reactstrap components\r\nimport moment from 'moment';\r\n\r\nimport * as Datetime from 'react-datetime';\r\nimport 'react-datetime/css/react-datetime.css'\r\n\r\n\r\nimport { Row, Col } from 'react-bootstrap';\r\n\r\n\r\n\r\nclass Date extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleStartDateChange = this.handleStartDateChange.bind(this);\r\n        this.handleEndDateChange = this.handleEndDateChange.bind(this);\r\n\r\n        this.state = {\r\n            startdate: moment().format(\"YYYY-MM-DD\"),            \r\n        }\r\n    }\r\n    componentDidMount() {\r\n\r\n    }\r\n    componentWillReceiveProps(nextProps) {\r\n\r\n    }\r\n\r\n    handleStartDateChange = (e, props) => {\r\n        if (e._isAMomentObject) {\r\n            this.props.onStartDate(e.format(\"YYYY-MM-DD\"));\r\n            this.setState({ startdate: e.format(\"YYYY-MM-DD\"), enddate: e.add(30, 'days').format(\"YYYY-MM-DD\") }, function () {\r\n            });\r\n        }\r\n    }\r\n\r\n    handleEndDateChange = (e, props) => {\r\n        if (e._isAMomentObject) {\r\n            this.props.onEndDate(e.format(\"YYYY-MM-DD\"));\r\n            this.setState({ enddate: e.format(\"YYYY-MM-DD\") }, function () {\r\n                //this.fetchCallBackData();\r\n            });\r\n        }\r\n    }\r\n    validation = (currentDate) => {\r\n        return currentDate.isBefore(moment());\r\n    };\r\n\r\n    validationEndDate = (currentDate) => {\r\n        \r\n\r\n        if (!currentDate.isBefore(moment(this.state.enddate))) {\r\n            return false;\r\n        }\r\n\r\n        if(currentDate.isBefore(moment(this.state.startdate))) {\r\n            return false;\r\n        }\r\n        \r\n        return true;\r\n        \r\n    };\r\n\r\n    getSelectedDateRange() {\r\n        return {\r\n            startdate: this.state.startdate,\r\n            enddate: this.state.enddate\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n\r\n        let { visible } = this.props;\r\n\r\n        if (visible == false) {\r\n            return null;\r\n        }\r\n        return (\r\n\r\n            <>\r\n                    <Form.Group controlId=\"startdate_field\">\r\n                        <Datetime value={new Date()}\r\n                            dateFormat=\"YYYY-MM-DD\"\r\n                            value={this.state.startdate}\r\n                            isValidDate={this.validation.bind(this)}\r\n                            onChange={moment => this.handleStartDateChange(moment)}\r\n                            utc={true}\r\n                            timeFormat={false}\r\n                            className=\"form-group\"\r\n                        />\r\n                    </Form.Group>\r\n            </>\r\n\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default Date;\r\n\r\n"],"sourceRoot":""}