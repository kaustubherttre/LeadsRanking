{"version":3,"sources":["views/AgentLoginDashboard.jsx","views/Common/ManagerHierarchy.jsx"],"names":["AgentLoginDashboard","props","state","PageTitle","AgentLoginTracker","handleShow","bind","columnlist","name","selector","sortable","cell","row","className","AgentCode","FIRSTLOGIN","utc","format","calculateremainingtime","syslogin","SYSTEMLOGIN","remainingtime","parseFloat","toFixed","this","GetCommonspData","limit","skip","root","params","ManagerIds","getuser","UserID","nextProps","CommonData","isError","setState","e","SelectedSupervisors","join","columns","console","log","md","tag","value","data","defaultSortField","defaultSortAsc","React","Component","connect","GetCommonData","ManagerHierarchy","nodes","checked","expanded","UserId","RoleId","GetDataDirect","ManagerId","statename","result","res","JSON","stringify","replace","parse","forceUpdate","document","getElementById","style","right","setTimeout","checkeditem","index","indexOf","splice","length","id","onMouseLeave","onMouseOut","onClick","onMouseEnter","type","onButtonClick","checkModel","showNodeIcon","onCheck","onExpand","showExpandAll"],"mappings":"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","file":"static/js/110.fdd87b89.chunk.js","sourcesContent":["\r\nimport React from \"react\";\r\nimport {\r\n  GetCommonData, GetCommonspData\r\n} from \"../store/actions/CommonAction\";\r\nimport { connect } from \"react-redux\";\r\nimport DataTable from './Common/DataTableWithFilter';\r\nimport ManagerHierarchy from './Common/ManagerHierarchy';\r\nimport Moment from 'react-moment';\r\nimport { getuser } from '../utility/utility.jsx';\r\n// reactstrap components\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  \r\n  Row,\r\n  Col\r\n} from \"reactstrap\";\r\n\r\nclass AgentLoginDashboard extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      PageTitle: \"Agent Login Dashboard\",\r\n      AgentLoginTracker: []\r\n    };\r\n    this.handleShow = this.handleShow.bind(this);\r\n    this.columnlist = [\r\n      {\r\n        name: \"EMPLOYEE ID\",\r\n        selector: \"EMPLOYEEID\",\r\n        sortable: true,\r\n      },\r\n      {\r\n        name: \"USER NAME\",\r\n        selector: \"USERNAME\",\r\n        sortable: true,\r\n      },\r\n      {\r\n        name: \"FIRST LOGIN\",\r\n        selector: \"FIRSTLOGIN\",\r\n        sortable: true,\r\n        cell: row => <div className={row.AgentCode}>{row.FIRSTLOGIN ? <Moment utc={true} format=\"HH:mm:ss A\">{row.FIRSTLOGIN}</Moment> : \"N.A\"}</div>\r\n\r\n      },\r\n      {\r\n        name: \"SYSTEM LOGIN\",\r\n        selector: \"SYSTEMLOGIN\",\r\n        sortable: true,\r\n      },          \r\n      {\r\n        name: \"REMAINING LOGIN TIME\",\r\n        cell: row => this.calculateremainingtime(row)\r\n      },\r\n      {\r\n        name: \"IDLE TIME MINS\",\r\n        selector: \"IDLETIME\",\r\n        sortable: true\r\n      },\r\n      {\r\n        name: \"BREAK COUNT\",\r\n        selector: \"BREAKCOUNT\",\r\n        sortable: true        \r\n      },\r\n      {\r\n        name: \"LUNCH MINS\",\r\n        selector: \"LUNCHMINS\",\r\n        sortable: true,\r\n      },\r\n      {\r\n        name: \"MEETING MINS\",\r\n        selector: \"MEETINGMINS\",\r\n        sortable: true,\r\n      },\r\n      {\r\n        name: \"TEA MINS\",\r\n        selector: \"TEAMINS\",\r\n        sortable: true,\r\n      },\r\n      {\r\n        name: \"TRAINING MINS\",\r\n        selector: \"TRAININGMINS\",\r\n        sortable: true,\r\n      },\r\n      {\r\n        name: \"DAYEND MINS\",\r\n        selector: \"DAYENDMINS\",\r\n        sortable: true,\r\n      },\r\n      {\r\n        name: \"TOTAL BREAK MINS\",\r\n        selector: \"SUM_DISPOSITIONMINS\",\r\n        sortable: true,\r\n      }\r\n    ];\r\n  }\r\n\r\n  calculateremainingtime(row) {\r\n    var syslogin = 8-row.SYSTEMLOGIN;\r\n    var remainingtime = parseFloat(syslogin.toFixed(2));\r\n    remainingtime = remainingtime < 0 ? 0 : remainingtime;\r\n    return remainingtime;\r\n  }\r\n\r\n  componentDidMount() {\r\n    \r\n    this.props.GetCommonspData({\r\n      limit: 10,\r\n      skip: 0,\r\n      root: \"AgentLoginTracker\",\r\n      params: [{ ManagerIds: getuser().UserID }]\r\n    });\r\n  }\r\n  componentWillReceiveProps(nextProps) {\r\n    if (!nextProps.CommonData.isError) {\r\n      this.setState({ AgentLoginTracker: nextProps.CommonData[\"AgentLoginTracker\"] });\r\n    }\r\n  }\r\n  handleShow(e) {\r\n    var SelectedSupervisors = e.SelectedSupervisors;\r\n    this.props.GetCommonspData({\r\n      limit: 10,\r\n      skip: 0,\r\n      root: \"AgentLoginTracker\",\r\n      params: [{ ManagerIds: SelectedSupervisors.join() }]\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const columns = this.columnlist;\r\n    const { PageTitle, AgentLoginTracker } = this.state;\r\n    console.log(\"AgentLoginTracker\", AgentLoginTracker);\r\n    return (\r\n      <>\r\n        <div className=\"content\">\r\n          <Row>\r\n            <Col md=\"12\">\r\n              <Card>\r\n                <CardHeader>\r\n                  <Row>\r\n                    <Col md={8}>\r\n                      <CardTitle tag=\"h4\">{PageTitle}</CardTitle>\r\n                    </Col>\r\n                    <Col md={4}>\r\n                      {/* <ProductSupervisorFilter handleShow={this.handleShow} showModal={true} /> */}\r\n                      <ManagerHierarchy handleShow={this.handleShow} value={/UserID/g}></ManagerHierarchy>\r\n                    </Col>\r\n                  </Row>\r\n\r\n                </CardHeader>\r\n                <CardBody>\r\n                  <DataTable\r\n                    columns={columns}\r\n                    data={AgentLoginTracker[0]}\r\n                    defaultSortField=\"USERNAME\"\r\n                    defaultSortAsc={true}\r\n                  />\r\n                </CardBody>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    CommonData: state.CommonData\r\n  };\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    GetCommonData,\r\n    GetCommonspData\r\n  }\r\n)(AgentLoginDashboard);","\r\nimport React, { Suspense } from 'react';\r\n\r\nimport {\r\n    GetCommonData, GetCommonspData, GetDataDirect\r\n} from \"../../store/actions/CommonAction\";\r\nimport { getUrlParameter, getuser } from '../../utility/utility.jsx';\r\n\r\n\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport 'react-checkbox-tree/lib/react-checkbox-tree.css';\r\nimport CheckboxTree from 'react-checkbox-tree';\r\n\r\n\r\nclass ManagerHierarchy extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            nodes: [],\r\n            checked: [],\r\n            expanded: [],\r\n        }\r\n        //this.onExpand = this.onExpand.bind(this);\r\n    }\r\n    componentDidMount() {\r\n\r\n        let UserId = getuser().RoleId == 2 ? 75 : getuser().UserID;\r\n\r\n        GetDataDirect({\r\n            root: \"Hierarchy\",\r\n            ManagerId: UserId,\r\n            statename: \"Hierarchy-\" + UserId,\r\n            value: this.props.value,\r\n            state: true\r\n        }, function (result) {\r\n\r\n            let str = JSON.stringify(result);\r\n            var res = str.replace(/UserName/g, \"label\");\r\n            res = res.replace(this.props.value, \"value\");\r\n\r\n            this.setState({ nodes: JSON.parse(res) });\r\n        }.bind(this));\r\n    }\r\n    componentWillReceiveProps(nextProps) {\r\n\r\n    }\r\n\r\n\r\n    onButtonClick() {\r\n        this.props.handleShow({\r\n            SelectedSupervisors: this.state.checked\r\n        });\r\n        this.forceUpdate();\r\n    }\r\n    onMouseEnter(e) {\r\n        document.getElementById(\"floating\").style.right = 0\r\n        document.getElementById(\"handle\").style.right = \"395px\"\r\n        //e.target.style.right = 0;\r\n    }\r\n    onMouseOut(e) {\r\n        setTimeout(function () {\r\n            document.getElementById(\"floating\").style.right = \"-400px\"\r\n            document.getElementById(\"handle\").style.right = \"-15px\"\r\n        }, 700);\r\n\r\n        //e.target.style.right = \"-350px\";\r\n    }\r\n    RemoveChecked(checkeditem) {\r\n        const { checked } = this.state;\r\n        let index = checked.indexOf(checkeditem);\r\n        if (index > -1) {\r\n            checked.splice(index, 1);\r\n        }\r\n        this.setState(checked);\r\n    }\r\n    onClick() {\r\n\r\n    }\r\n    render() {\r\n        const { nodes, checked } = this.state;\r\n        if (nodes.length == 0) {\r\n            return null;\r\n        }\r\n        return (\r\n\r\n\r\n            <div id=\"floating\" className=\"floating\" onMouseLeave={this.onMouseOut}>\r\n\r\n                <Row >\r\n                    <Col md=\"8\"><div id=\"handle\" className=\"handle\" onClick={this.onMouseEnter}>Filter</div></Col>\r\n                    <Col md=\"4\"><input type=\"button\" className=\"btn btn-primary\" onClick={this.onButtonClick.bind(this)} value=\"Show\" /></Col>\r\n                </Row>\r\n\r\n                <Row>\r\n                    <Col>\r\n\r\n                        <div className=\"managers\">\r\n                            <CheckboxTree\r\n                                nodes={nodes}\r\n                                checked={this.state.checked}\r\n                                expanded={this.state.expanded}\r\n                                checkModel=\"all\"\r\n                                name=\"UserName\"\r\n                                showNodeIcon={false}\r\n                                onCheck={checked => this.setState({ checked })}\r\n                                onExpand={expanded => this.setState({ expanded })}\r\n                                showExpandAll={true}\r\n                            />\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n\r\n\r\n\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default ManagerHierarchy;\r\n"],"sourceRoot":""}