{"version":3,"sources":["views/UserStats.jsx","views/Common/ManagerHierarchy.jsx"],"names":["UserStats","props","state","PageTitle","items","SelectedSupervisors","SelectedRows","clearSelected","key","Performancekey","handleShow","bind","statuschange","columnlist","name","selector","sortable","cell","row","LoginHours","toFixed","PerformanceCalculation","AvgGroupList","IdleTime","TalkTime","Attempts","UniqueDials","TotalBreaks","MissedCB","APE","BKGS","MissedAttempts","CancelAttempts","e","this","setState","ReportTime","Date","setTimeout","fetchData","target","value","alldata","UsersList","AgentData","forEach","element","indexOf","GroupId","push","length","field","groupid","grpavg","item","color","data","className","user","getuser","UserID","that","GetCommonspData","root","params","ManagerIds","join","UserId","dtRef","current","handleClearRows","nextProps","CommonData","isError","columns","console","log","filterdata","ddl","GroupName","md","tag","onChange","CheckPerformance","pagination","striped","noHeader","highlightOnHover","dense","ref","React","Component","connect","GetCommonData","GetComunicationData","ManagerHierarchy","nodes","checked","expanded","RoleId","GetDataDirect","ManagerId","statename","result","res","JSON","stringify","replace","parse","forceUpdate","document","getElementById","style","right","checkeditem","index","splice","id","onMouseLeave","onMouseOut","onClick","onMouseEnter","type","onButtonClick","checkModel","showNodeIcon","onCheck","onExpand","showExpandAll"],"mappings":"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","file":"static/js/92.53053b86.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {\r\n  GetCommonData, GetCommonspData, GetComunicationData\r\n} from \"../store/actions/CommonAction\";\r\nimport { getUrlParameter, hhmmss, getuser } from '../utility/utility.jsx';\r\nimport { connect } from \"react-redux\";\r\nimport DataTable from 'react-data-table-component';\r\nimport ManagerHierarchy from './Common/ManagerHierarchy';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n// reactstrap components\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  Row,\r\n  Col\r\n} from \"reactstrap\";\r\n\r\n\r\nclass UserStats extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      PageTitle: \"User Stats\",\r\n      items: {},\r\n      SelectedSupervisors: [],\r\n      SelectedRows: [],\r\n      clearSelected: false,\r\n      key: \"-1\",\r\n      Performancekey: \"-1\",\r\n    };\r\n    this.handleShow = this.handleShow.bind(this);\r\n    this.statuschange = this.statuschange.bind(this);\r\n    this.columnlist = [\r\n\r\n      {\r\n        name: \"EmployeeId\",\r\n        selector: \"EmployeeId\",\r\n\r\n        sortable: true,\r\n      },\r\n      {\r\n        name: \"UserName\",\r\n        selector: \"UserName\",\r\n\r\n        sortable: true,\r\n      },\r\n      {\r\n        name: \"GroupName\",\r\n        selector: \"GroupName\",\r\n\r\n        sortable: true,\r\n      },\r\n      {\r\n        name: \"LoginHours (hrs)\",\r\n        selector: \"LoginHours\",\r\n        sortable: true,\r\n        cell: row => <span >{(row.LoginHours / 60).toFixed(1)} {this.PerformanceCalculation(row, this.state.items.AvgGroupList, \"LoginHours\")}</span>\r\n      },\r\n      {\r\n        name: \"IdleTime (min)\",\r\n        selector: \"IdleTime\",\r\n        sortable: true,\r\n        cell: row => <span >{(row.IdleTime)} {this.PerformanceCalculation(row, this.state.items.AvgGroupList, \"IdleTime\", true)}</span>\r\n      },\r\n      {\r\n        name: \"Talktime (min)\",\r\n        selector: \"TalkTime\",\r\n        sortable: true,\r\n        cell: row => <span >{(row.TalkTime / 60).toFixed(0)} {this.PerformanceCalculation(row, this.state.items.AvgGroupList, \"TalkTime\")}</span>\r\n      },\r\n      {\r\n        name: \"Attempts\",\r\n        selector: \"Attempts\",\r\n        sortable: true,\r\n        cell: row => <span >{row.Attempts} {this.PerformanceCalculation(row, this.state.items.AvgGroupList, \"Attempts\")}</span>\r\n      },\r\n      {\r\n        name: \"UniqueDials\",\r\n        selector: \"UniqueDials\",\r\n        sortable: true,\r\n        cell: row => <span >{row.UniqueDials} {this.PerformanceCalculation(row, this.state.items.AvgGroupList, \"UniqueDials\")}</span>\r\n      },\r\n\r\n      {\r\n        name: \"TotalBreaks\",\r\n        selector: \"TotalBreaks\",\r\n        sortable: true,\r\n        cell: row => <span >{row.TotalBreaks} {this.PerformanceCalculation(row, this.state.items.AvgGroupList, \"TotalBreaks\", true)}</span>\r\n      },\r\n      {\r\n        name: \"MissedCB\",\r\n        selector: \"MissedCB\",\r\n        sortable: true,\r\n        cell: row => <span >{row.MissedCB} {this.PerformanceCalculation(row, this.state.items.AvgGroupList, \"MissedCB\", true)}</span>\r\n      },\r\n      {\r\n        name: \"APE (mtd)\",\r\n        selector: \"APE\",\r\n        sortable: true,\r\n        cell: row => <span >{row.APE} {this.PerformanceCalculation(row, this.state.items.AvgGroupList, \"APE\")}</span>\r\n      },\r\n      {\r\n        name: \"BKGS (mtd)\",\r\n        selector: \"BKGS\",\r\n        sortable: true,\r\n        cell: row => <span >{row.BKGS} {this.PerformanceCalculation(row, this.state.items.AvgGroupList, \"BKGS\")}</span>\r\n      },\r\n      {\r\n        name: \"Missed Attempts\",\r\n        selector: \"MissedAttempts\",\r\n        sortable: true,\r\n        cell: row => <span >{row.MissedAttempts} {this.PerformanceCalculation(row, this.state.items.AvgGroupList, \"MissedAttempts\", true)}</span>\r\n      },\r\n      {\r\n        name: \"Cancel Attempts\",\r\n        selector: \"CancelAttempts\",\r\n        sortable: true,\r\n        cell: row => <span >{row.CancelAttempts} {this.PerformanceCalculation(row, this.state.items.AvgGroupList, \"CancelAttempts\", true)}</span>\r\n      },\r\n    ];\r\n  }\r\n  handleShow(e) {\r\n\r\n    this.setState({ ReportTime: new Date(), SelectedSupervisors: e.SelectedSupervisors });\r\n    setTimeout(function () {\r\n      this.fetchData();\r\n    }.bind(this), 500);\r\n\r\n  }\r\n  statuschange(e) {\r\n    this.setState({ key: e.target.value });\r\n  }\r\n\r\n  CheckPerformance(e) {\r\n    this.setState({ Performancekey: e.target.value });\r\n  }\r\n  filterdata(e) {\r\n\r\n    let alldata = this.state.items.UsersList\r\n    let that = this;\r\n    if (this.state.key === \"-1\" && this.state.Performancekey === \"-1\") {\r\n      return alldata;\r\n    }\r\n\r\n    let AgentData = [];\r\n    alldata.forEach(element => {\r\n      if (this.state.key != -1 && this.state.key.indexOf(element.GroupId) > -1) {\r\n        AgentData.push(element);\r\n      }      \r\n    });\r\n\r\n    if(AgentData && AgentData.length == 0){\r\n      \r\n    }\r\n    \r\n\r\n\r\n\r\n    return AgentData;\r\n  }\r\n  PerformanceCalculation(row, AvgGroupList, field, MissedCB) {\r\n    let groupid = row.GroupId;\r\n    let grpavg = {}\r\n    if (AvgGroupList.length > 1) {\r\n      AvgGroupList.forEach(item => {\r\n        if (item.GroupId == groupid) {\r\n          grpavg = item;\r\n        }\r\n      });\r\n\r\n    }\r\n    else {\r\n      grpavg = AvgGroupList[0];\r\n    }\r\n\r\n    let data = ((row[field] / (grpavg[field] == 0 ? 1 : grpavg[field])) - 1) * 100;\r\n    let color;\r\n    if (MissedCB == true) {\r\n      if (data > 0) {\r\n        color = \"fa fa-long-arrow-up userstatred\";\r\n      }\r\n      else {\r\n        color = \"fa fa-long-arrow-down userstatgreen\";\r\n      }\r\n    }\r\n    else {\r\n      if (data < 0) {\r\n        color = \"fa fa-long-arrow-down userstatred\";\r\n      }\r\n      else {\r\n        color = \"fa fa-long-arrow-up userstatgreen\";\r\n      }\r\n    }\r\n\r\n    if (data < 0) {\r\n      data = data * -1;\r\n    }\r\n\r\n    return <>\r\n      <i className={color}> {data.toFixed(0)}%</i>\r\n    </>\r\n  }\r\n\r\n  componentDidMount() {\r\n\r\n    var that = this;\r\n    const user = getuser();\r\n    this.setState({ ReportTime: new Date(), SelectedSupervisors: [user.UserID] });\r\n    setTimeout(function () {\r\n      this.fetchData();\r\n    }.bind(this), 500);\r\n\r\n  }\r\n\r\n  fetchData() {\r\n    let that = this;\r\n    var SelectedSupervisors = this.state.SelectedSupervisors;\r\n    this.props.GetCommonspData({\r\n      root: \"GetUserStats\",\r\n      params: [{ ManagerIds: SelectedSupervisors.join() }, { UserId: 0 }],\r\n    }, function (data) {\r\n      if (data && data.data && data.data.data) {\r\n        let items = { UsersList: data.data.data[0], AvgGroupList: data.data.data[1] }\r\n        that.setState({ items: items });\r\n      }\r\n    });\r\n\r\n    if (that.state.SelectedRows.length > 0) {\r\n      that.dtRef.current.handleClearRows();\r\n    }\r\n\r\n  }\r\n\r\n\r\n  componentWillUnmount() {\r\n\r\n  }\r\n\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (!nextProps.CommonData.isError) {\r\n\r\n    }\r\n  }\r\n\r\n\r\n  render() {\r\n    const columns = this.columnlist;\r\n\r\n    const { items, PageTitle } = this.state;\r\n    console.log(items);\r\n    const data = this.filterdata();\r\n    let ddl = [];\r\n    if (items && items.AvgGroupList) {\r\n      items.AvgGroupList.forEach(item => {\r\n        ddl.push(<option value={item.GroupId}>{item.GroupName}</option>)\r\n      });\r\n    }\r\n\r\n\r\n    return (\r\n      <>\r\n        <div className=\"content\">\r\n          <ToastContainer />\r\n          <Row>\r\n            <Col md=\"12\">\r\n              <Card>\r\n                <CardHeader>\r\n                  <Row>\r\n                    <Col md={3}>\r\n                      <CardTitle tag=\"h4\">{PageTitle}</CardTitle>\r\n                    </Col>\r\n                    <Col md={5}>\r\n\r\n                    </Col>\r\n                    <Col md={2}>\r\n                      <div className=\"form-group\">\r\n                        <select className=\"form-control\" onChange={this.CheckPerformance}>\r\n                          <option value=\"-1\">ALL</option>\r\n                          <option value=\"80\">Less than 80</option>\r\n                          <option value=\"60\">Less than 60</option>\r\n                          <option value=\"50\">Less than 50</option>\r\n                          <option value=\"40\">Less than 40</option>\r\n\r\n                        </select>\r\n                      </div>\r\n                    </Col>\r\n                    <Col md={2}>\r\n                      <div className=\"form-group\">\r\n                        <select className=\"form-control\" onChange={this.statuschange}>\r\n                          <option value=\"-1\">ALL</option>\r\n                          {ddl}\r\n                        </select>\r\n                      </div>\r\n                      <ManagerHierarchy\r\n                        handleShow={this.handleShow} value={/UserID/g}\r\n                      >\r\n                      </ManagerHierarchy>\r\n                    </Col>\r\n\r\n                  </Row>\r\n\r\n                </CardHeader>\r\n\r\n                <CardBody>\r\n\r\n                  <div className=\"statusdata\">\r\n                    <DataTable\r\n                      columns={columns}\r\n                      data={data}\r\n                      pagination={false}\r\n                      striped={true}\r\n                      noHeader={true}\r\n                      highlightOnHover\r\n                      dense\r\n                      ref={this.dtRef}\r\n                    />\r\n\r\n                  </div>\r\n                </CardBody>\r\n\r\n              </Card>\r\n            </Col>\r\n\r\n          </Row>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    CommonData: state.CommonData\r\n  };\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    GetCommonData,\r\n    GetCommonspData,\r\n    GetComunicationData\r\n  }\r\n)(UserStats);\r\n\r\n\r\n\r\n\r\n","\r\nimport React, { Suspense } from 'react';\r\n\r\nimport {\r\n    GetCommonData, GetCommonspData, GetDataDirect\r\n} from \"../../store/actions/CommonAction\";\r\nimport { getUrlParameter, getuser } from '../../utility/utility.jsx';\r\n\r\n\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport 'react-checkbox-tree/lib/react-checkbox-tree.css';\r\nimport CheckboxTree from 'react-checkbox-tree';\r\n\r\n\r\nclass ManagerHierarchy extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            nodes: [],\r\n            checked: [],\r\n            expanded: [],\r\n        }\r\n        //this.onExpand = this.onExpand.bind(this);\r\n    }\r\n    componentDidMount() {\r\n\r\n        let UserId = getuser().RoleId == 2 ? 75 : getuser().UserID;\r\n\r\n        GetDataDirect({\r\n            root: \"Hierarchy\",\r\n            ManagerId: UserId,\r\n            statename: \"Hierarchy-\" + UserId,\r\n            value: this.props.value,\r\n            state: true\r\n        }, function (result) {\r\n\r\n            let str = JSON.stringify(result);\r\n            var res = str.replace(/UserName/g, \"label\");\r\n            res = res.replace(this.props.value, \"value\");\r\n\r\n            this.setState({ nodes: JSON.parse(res) });\r\n        }.bind(this));\r\n    }\r\n    componentWillReceiveProps(nextProps) {\r\n\r\n    }\r\n\r\n\r\n    onButtonClick() {\r\n        this.props.handleShow({\r\n            SelectedSupervisors: this.state.checked\r\n        });\r\n        this.forceUpdate();\r\n    }\r\n    onMouseEnter(e) {\r\n        document.getElementById(\"floating\").style.right = 0\r\n        document.getElementById(\"handle\").style.right = \"395px\"\r\n        //e.target.style.right = 0;\r\n    }\r\n    onMouseOut(e) {\r\n        setTimeout(function () {\r\n            document.getElementById(\"floating\").style.right = \"-400px\"\r\n            document.getElementById(\"handle\").style.right = \"-15px\"\r\n        }, 700);\r\n\r\n        //e.target.style.right = \"-350px\";\r\n    }\r\n    RemoveChecked(checkeditem) {\r\n        const { checked } = this.state;\r\n        let index = checked.indexOf(checkeditem);\r\n        if (index > -1) {\r\n            checked.splice(index, 1);\r\n        }\r\n        this.setState(checked);\r\n    }\r\n    onClick() {\r\n\r\n    }\r\n    render() {\r\n        const { nodes, checked } = this.state;\r\n        if (nodes.length == 0) {\r\n            return null;\r\n        }\r\n        return (\r\n\r\n\r\n            <div id=\"floating\" className=\"floating\" onMouseLeave={this.onMouseOut}>\r\n\r\n                <Row >\r\n                    <Col md=\"8\"><div id=\"handle\" className=\"handle\" onClick={this.onMouseEnter}>Filter</div></Col>\r\n                    <Col md=\"4\"><input type=\"button\" className=\"btn btn-primary\" onClick={this.onButtonClick.bind(this)} value=\"Show\" /></Col>\r\n                </Row>\r\n\r\n                <Row>\r\n                    <Col>\r\n\r\n                        <div className=\"managers\">\r\n                            <CheckboxTree\r\n                                nodes={nodes}\r\n                                checked={this.state.checked}\r\n                                expanded={this.state.expanded}\r\n                                checkModel=\"all\"\r\n                                name=\"UserName\"\r\n                                showNodeIcon={false}\r\n                                onCheck={checked => this.setState({ checked })}\r\n                                onExpand={expanded => this.setState({ expanded })}\r\n                                showExpandAll={true}\r\n                            />\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n\r\n\r\n\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default ManagerHierarchy;\r\n"],"sourceRoot":""}