{"version":3,"sources":["views/JagStoryBoard.jsx"],"names":["JagStoryBoard","props","handleChange","e","formvalue","state","od","target","type","id","checked","_isAMomentObject","format","parseInt","value","setState","ModalValueChanged","isLoaded","showModal","items","store","activePage","root","departmentId","PageTitle","FormTitle","event","user","handleRemove","bind","handleClose","handleShow","handleSave","selectedrow","columnlist","name","label","hide","searchable","width","editable","setTimeout","this","getuser","GetCommonData","limit","skip","cols","con","c","nextProps","CommonData","isError","columns","fnDatatableCol","push","cell","row","aria-label","variant","onClick","handleEdit","className","aria-hidden","window","confirm","JSON","parse","stringify","DeleteData","body","_id","data","status","toast","error","Object","assign","document","getElementsByName","length","reportValidity","console","log","fnCleanData","moment","UpdateData","querydata","addRecord","message","md","tag","extention","export","print","show","onHide","dialogClassName","Header","closeButton","Title","Body","map","col","fnRenderfrmControl","Footer","condition","React","Component","connect"],"mappings":"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","file":"static/js/119.43f8e1b8.chunk.js","sourcesContent":["\r\nimport React from \"react\";\r\nimport { ButtonGroup, Button, Modal, Form } from 'react-bootstrap';\r\nimport {\r\n  GetCommonData, addRecord, UpdateData, DeleteData\r\n} from \"../store/actions/CommonMongoAction\";\r\n\r\nimport { If, Then } from 'react-if';\r\n//import { If, Then, Else, When, Unless, Switch, Case, Default } from 'react-if';\r\n\r\nimport { connect } from \"react-redux\";\r\n// import { Link } from \"react-router-dom\";\r\nimport DataTable from './Common/DataTableWithFilter';\r\nimport DropDown from './Common/DropDownListMongo';\r\n\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nimport { fnRenderfrmControl, fnDatatableCol, fnCleanData } from '../utility/utility.jsx';\r\n// reactstrap components\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  Row,\r\n  Col\r\n} from \"reactstrap\";\r\nimport { getuser } from \"utility/utility\";\r\nimport moment from 'moment';\r\n\r\n\r\nclass JagStoryBoard extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isLoaded: false,\r\n      showModal: false,\r\n      items: [],\r\n      store: [],\r\n      activePage: 1,\r\n      root: \"JagStoryBoard\",\r\n      departmentId: \"0\",\r\n\r\n      PageTitle: \"Jag Story Board\",\r\n      FormTitle: \"\",\r\n      formvalue: {},\r\n      event: \"\",\r\n      ModalValueChanged: false,\r\n      user: {}\r\n    };\r\n    this.handleRemove = this.handleRemove.bind(this);\r\n    this.handleClose = this.handleClose.bind(this);\r\n    this.handleShow = this.handleShow.bind(this);\r\n    this.handleSave = this.handleSave.bind(this);\r\n    this.selectedrow = {\"empId\": \"\", \"story\": \"\" }\r\n    this.columnlist = [\r\n      {\r\n        name: \"_id\",\r\n        label: \"id\",\r\n        type: \"hidden\",\r\n        hide: true,\r\n      },\r\n      {\r\n        name: \"empId\",\r\n        label: \"Employee Id\",\r\n        type: \"string\",\r\n        searchable: true,\r\n      },\r\n      {\r\n        name: \"empName\",\r\n        label: \"Employee Name\",\r\n        type: \"string\",\r\n        searchable: true,\r\n      },\r\n      {\r\n        name: \"designation\",\r\n        label: \"Designation\",\r\n        type: \"string\",\r\n        searchable: true,\r\n      },\r\n      {\r\n        name: \"story\",\r\n        label: \"story\",\r\n        type: \"textarea\",\r\n        width: \"450px\",\r\n        editable: true,\r\n      },\r\n      {\r\n        name: \"CreatedOn\",\r\n        label: \"CreatedOn\",\r\n        type: \"datetime\",\r\n        hide: true\r\n      },\r\n      {\r\n        name: \"UpdatedOn\",\r\n        label: \"UpdatedOn\",\r\n        type: \"datetime\",\r\n        hide: true\r\n      }\r\n      \r\n    ];\r\n    let count = 0;\r\n  }\r\n\r\n\r\n\r\n  componentDidMount() {\r\n\r\n    setTimeout(function () {\r\n      this.setState({ user: getuser() });\r\n    }.bind(this), 500);\r\n\r\n    this.props.GetCommonData({\r\n        limit: 10,\r\n        skip: 0,\r\n        root: this.state.root,\r\n        cols: {},\r\n        con: {},\r\n        c: \"M\",\r\n      });\r\n  }\r\n\r\n\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n\r\n    if (!nextProps.CommonData.isError) {\r\n\r\n      this.setState({ items: nextProps.CommonData[this.state.root] });\r\n\r\n      this.setState({ store: nextProps.CommonData });\r\n    }\r\n\r\n  }\r\n\r\n\r\n  fnDatatableCol() {\r\n\r\n    var columns = fnDatatableCol(this.columnlist);\r\n\r\n    columns.push({\r\n      name: \"Action\",\r\n      cell: row => <ButtonGroup aria-label=\"Basic example\">\r\n        <Button variant=\"secondary\" onClick={() => this.handleEdit(row)}><i className=\"fa fa-pencil-square-o\" aria-hidden=\"true\"></i></Button>\r\n        <Button variant=\"secondary\" onClick={() => { if (window.confirm('Are you sure you wish to delete this record?')) this.handleRemove(row)}}><i className=\"fa fa-trash\" aria-hidden=\"true\"></i></Button>\r\n      </ButtonGroup>\r\n    });\r\n    return columns;\r\n  }\r\n  handleRemove(row){\r\n    let formvalue = JSON.parse(JSON.stringify(this.state.formvalue));\r\n    let id = formvalue[\"_id\"];\r\n\r\n    this.props.DeleteData({\r\n      root: this.state.root,\r\n      body: {_id: id},\r\n      c: \"M\"\r\n    }, function (data) {\r\n      if(data.data.status === 200) \r\n        toast(\"Record deleted!\", { type: 'success' });\r\n      else \r\n        toast.error(\"Record could not be deleted\"); \r\n    })\r\n\r\n    setTimeout(function () {\r\n      this.props.GetCommonData({\r\n        root: this.state.root,\r\n        cols: {},\r\n        con: {},\r\n        c: \"M\",\r\n        });\r\n    }.bind(this), 1000);\r\n\r\n  }\r\n  handleEdit(row) {\r\n    this.setState({ od: Object.assign({}, row, {}), formvalue: Object.assign({}, row, {}), event: \"Edit\", showModal: true, FormTitle: \"Edit Record\" });\r\n  }\r\n  handleClose() {\r\n    this.setState({ showModal: false });\r\n  }\r\n  handleShow() {\r\n    this.setState({ formvalue: {...this.selectedrow}, event: \"Add\", showModal: true, FormTitle: \"Add New Record\" });\r\n  }\r\n\r\n  handleSave() {\r\n    if (document.getElementsByName(\"frmJagStoryBoard\").length > 0 &&\r\n      document.getElementsByName(\"frmJagStoryBoard\")[0].reportValidity()) {\r\n\r\n      let formvalue = JSON.parse(JSON.stringify(this.state.formvalue));\r\n      console.log(\"formvalue\", formvalue);\r\n      this.fnCleanData(formvalue);\r\n      let id = formvalue[\"_id\"];\r\n      delete formvalue[\"_id\"]\r\n\r\n      if (this.state.event == \"Edit\") {\r\n        this.fnCleanData(formvalue);\r\n        formvalue[\"UpdatedOn\"] = moment().format(\"YYYY-MM-DD HH:mm:ss\");\r\n\r\n        let res = this.props.UpdateData({\r\n          root: this.state.root,\r\n          body: formvalue,\r\n          querydata: { _id: id },\r\n          c: \"M\",\r\n\r\n        }, function (data) {\r\n          toast(\"Record Updated Successfully!\", { type: 'success' });\r\n        });\r\n\r\n\r\n\r\n        // this.props.addRecord({\r\n        //   root: \"History\",\r\n        //   body: {\r\n        //     module: \"JagStoryBoardConfigure\",\r\n        //     od: this.state.od,\r\n        //     nd: formvalue,\r\n        //     ts: new Date(),\r\n        //     by: getuser().UserId\r\n        //   }\r\n        // }, function (data) {\r\n        //   toast(\"History Maintained!\", { type: 'success' });\r\n        // });\r\n      } else{\r\n        formvalue[\"CreatedOn\"] = moment().format(\"YYYY-MM-DD HH:mm:ss\");\r\n        this.props.addRecord({\r\n          root: this.state.root,\r\n          body: formvalue\r\n        }, function (data) {\r\n          if(data.data.status === 400){\r\n            toast.error(data.data.message) ; \r\n          } else\r\n            toast(\"User Added Successfully!\", { type: 'success' });\r\n        });\r\n      }\r\n\r\n      setTimeout(function () {\r\n        this.props.GetCommonData({\r\n          root: this.state.root,\r\n          cols: {},\r\n          con: {},\r\n          c: \"M\",\r\n        });\r\n      }.bind(this), 1000);\r\n\r\n      this.setState({ showModal: false });\r\n    }\r\n    return false;\r\n  }\r\n  handleChange = (e, props) => {\r\n    let formvalue = this.state.formvalue;\r\n    let od = this.state.od;\r\n\r\n    if (e.target && e.target.type == \"checkbox\") {\r\n      formvalue[e.target.id] = e.target.checked;\r\n    }\r\n    else if (e._isAMomentObject) {\r\n      formvalue[props] = e.format()\r\n    }\r\n    else {\r\n      formvalue[e.target.id] = e.target.type === 'number' ? parseInt(e.target.value) : e.target.value;\r\n    }\r\n    //debugger;\r\n    //let Changed = CompareJson(od, formvalue);\r\n\r\n    this.setState({ formvalue: formvalue, ModalValueChanged: true });\r\n  }\r\n\r\n  fnCleanData(formvalue) {\r\n    formvalue = fnCleanData(this.columnlist, formvalue);\r\n    this.setState({ formvalue: formvalue });\r\n  }\r\n\r\n\r\n  render() {\r\n    const columns = this.fnDatatableCol();\r\n    const { items, PageTitle, showModal, FormTitle, formvalue, ModalValueChanged, event } = this.state;\r\n    console.log(\"renderitems\", items);\r\n    // let departments = [];\r\n    // departments.push(items);\r\n\r\n\r\n    return (\r\n      <>\r\n        <div className=\"content\">\r\n          <ToastContainer />\r\n          <Row>\r\n            <Col md=\"12\">\r\n              <Card>\r\n                <CardHeader>\r\n                  <Row>\r\n                    <Col md={10}>\r\n                      <CardTitle tag=\"h4\">{PageTitle}</CardTitle>\r\n                    </Col>\r\n\r\n                    <Col md={2}>\r\n                      <Button variant=\"primary\" onClick={this.handleShow}>Add Story</Button>\r\n                    </Col>\r\n                  </Row>\r\n                </CardHeader>\r\n                <CardBody>\r\n                  <DataTable\r\n                    columns={columns}\r\n                    data={items}\r\n                    extention={true}\r\n                    export={false}\r\n                    print={false}\r\n                  />\r\n                </CardBody>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n\r\n          <Modal show={showModal} onHide={this.handleClose} dialogClassName=\"modal-90w\">\r\n            <Modal.Header closeButton>\r\n              <Modal.Title>{FormTitle}</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n              <Form name=\"frmJagStoryBoard\">\r\n                <Row>\r\n                  {this.columnlist.map(col => (\r\n                    fnRenderfrmControl(col, formvalue, this.handleChange, event)\r\n                  ))}\r\n                </Row>\r\n              </Form>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n              <Button variant=\"secondary\" onClick={this.handleClose}>\r\n                Close\r\n              </Button>\r\n              <If condition={ModalValueChanged}>\r\n                <Then>\r\n                  <input type=\"submit\" value=\"Save Changes\" className=\"btn btn-primary\" onClick={this.handleSave} />\r\n                </Then>\r\n              </If>\r\n            </Modal.Footer>\r\n          </Modal>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    CommonData: state.CommonData\r\n  };\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    GetCommonData,\r\n    addRecord,\r\n    UpdateData,\r\n    addRecord,\r\n    DeleteData\r\n  }\r\n)(JagStoryBoard);"],"sourceRoot":""}