{"version":3,"sources":["views/RenewalPaymentFailed.jsx","views/Common/AlertBox.jsx","store/actions/CommonMysqlAction.jsx","views/Common/ManagerHierarchy.jsx","views/Common/DropDownListMysql.jsx","views/Common/Date.jsx","views/RealTimePanel/RealTimePanel.jsx","views/RealTimePanel/RealTimePanelQueuewiseTwo.jsx"],"names":["RenewalPaymentFailed","props","state","root","PageTitle","selectedIvrProduct","ivrType","ivrProducts","ivrQueues","SelectedQueues","addClass","UserId","RealTimeUrl","selectedValue","label","value","selectedFile","uploadFile","ManagerId","DownloadedFile","ResponseData","UploadStatusColumns","StartDate","moment","format","dateRangeRef","React","createRef","this","UserList","columnlist","fnDatatableCol","managerid","getuser","UserID","setState","event","console","log","target","files","e","preventDefault","formData","FormData","append","name","PostTestAws","results","data","AgentChatAPICall","bind","toast","type","forEach","element","json","BookingId","ProposalNo","PolicyNo","utc","ExpiryDate","GraceEndDate","EmiDueDate","IsEMandateOrSI","EMIAmount","InsurerName","RegisteredCardDetails","FailureReason","PaymentMode","GetCommonspData","c","params","result","VideoData","to","download","length","Object","entries","map","key","push","cell","row","className","Status","toString","searchable","columns","md","tag","ref","onSubmit","onFileUpload","id","onChange","onFileChange","renderDownloadFile","fileData","renderUploadStatus","Component","connect","CommonData","GetMySqlData","AlertBox","show","nextProps","setTimeout","variant","body","GetCommonData_fetched","Todos","dataToSend","statename","localStorage","setItem","JSON","stringify","constants","GET_COMMON_SUCCESS","payload","GetCommonData_fetch_error","error","GET_COMMON_FAIL","cb","undefined","dispatch","getState","getItem","parse","axios","get","config","api","base_url","then","catch","InsertData","post","INSERT_COMMON_SUCCESS","INSERT_COMMON_FAIL","InsertData_fetch_error","UpdateData","UPDATE_COMMON_SUCCESS","UPDATE_COMMON_FAIL","UpdateData_fetch_error","GetDataDirect","ManagerHierarchy","nodes","checked","expanded","RoleId","res","replace","handleShow","SelectedSupervisors","forceUpdate","document","getElementById","style","right","checkeditem","index","indexOf","splice","onMouseLeave","onMouseOut","onClick","onMouseEnter","onButtonClick","checkModel","showNodeIcon","onCheck","onExpand","showExpandAll","DropDownListMysql","items","CallApi","isError","col","Idfield","Displayfield","limit","skip","cols","con","visible","Control","as","disabled","firstoption","item","Id","Display","Date","handleStartDateChange","_isAMomentObject","onStartDate","startdate","enddate","add","handleEndDateChange","onEndDate","validation","currentDate","isBefore","validationEndDate","Group","controlId","dateFormat","RealTimePanel","AgentData","TotalData","onBarge","winactive","BargeWith","statuschange","_handleKeyDown","userAgent","schdular","selector","sortable","width","bargecall","Barge","aria-hidden","displayStatus","AgentCode","LastUpdatedOn","from","ServerTime","hhmmss","TotalTalkTime","m","setInterval","hasFocus","window","addEventListener","context","GetRealTimeTotalData","user","join","EmployeeId","GetRealTimeAgentData","clearInterval","hangup","BargeWithAgent","unbargecall","toUpperCase","User","Pass","Realm","Asterisk_Url","WSServer","LoginAsteriskServer","CallingCompany","DIDNo","call","onsuccess","onerror","media","remote","audio","ua","uri","wsServers","authorizationUser","password","Web","Simple","on","stream","isRegistered","alldata","answered","unanswered","totalAgents","waitingCalls","totalAvailableAgents","totalcolumnlist","filterdata","required","onKeyDown","username","placeholder","_handleOnClick","pagination","striped","noHeader","highlightOnHover","dense","GetCommonData","RealTimePanelQueuewise","queues","QueueData","MoreInfoData","contextName","showModal","showMoreInfoModal","queueServerIp","clickedQueue","wraptime","wrapcomplete","unansweredlist","calltime","ModalTitle","entertime","mainqueueentertime","getHtmlListen","clickMoreinfo","moreinfolist","calldate","custom_disposition","getHtmlListenMoreInfo","fromNow","getLastUpdatedOn","getUrlParameter","getqueue","queueList","totalList","row_num","CreateMoreInfoRecordingURL","class","now","hanguptime","diff","call_type","data-toggle","title","CreateNCallersRecordingURL","number","paused","innerHTML","userfield","dstchannel","date","hour","datetime","phoneNo","substring","callid","recfilename","GetAwsRecordingUrl","status","url","src","GetFileExists","onloadedmetadata","duration","play","onended","pause","currentTime","calldataid","orig_callid","AwsRecordingUrl","GetRecordingName","CheckFile","extension","file_available","agent_file","record","queuestring","val","queuename","serverip","server_ip","GetRealTimeQueueData","is_mobile","is_claim","proid","product","ProductType","ProductId","IsMobile","IsClaim","filterContext","filter","queue","newContext","isMaster","child","UnansweredData","uniqueid","find","toLowerCase","lastupdatetime","lastsincetime","icon","classList","remove","CheckAudioFinishedPlay","tr","changeContext","data-myattribute","clickanswered","clickUnanswered","waitingibcalls","waitingctccalls","waitingassignedcalls","totalcalls","responsive","unansweredcolumns","moreinfocolumns","renderTotalData","onHide","dialogClassName","Header","closeButton","Title","Body","Footer"],"mappings":"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","file":"static/js/31.d6be0d9c.chunk.js","sourcesContent":["import React from \"react\";\nimport {\n    GetCommonData, GetCommonspData, GetFileExists, PostIncentiveFormData, PostAgentChatFileData, UpdateAgentChatParams,\n    PostTestAws\n} from \"../store/actions/CommonAction\";\nimport {\n    GetMySqlData, GetDataDirect\n} from \"../store/actions/CommonMysqlAction\";\nimport { connect } from \"react-redux\";\nimport { getuser, fnDatatableCol, joinObject } from '../utility/utility.jsx';\nimport DropDownListMysql from './Common/DropDownListMysql';\nimport MultiSelect from \"react-multi-select-component\";\nimport DropDown from './Common/DropDownList';\nimport RealTimePanel from './RealTimePanel/RealTimePanel';\nimport RealTimePanelQueuewise from './RealTimePanel/RealTimePanelQueuewiseTwo';\nimport { If, Then, Else } from 'react-if';\nimport AlertBox from './Common/AlertBox';\nimport DataTable from './Common/DataTableWithFilter';\nimport Date from \"./Common/Date\"\nimport moment from 'moment';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { Link } from 'react-router-dom'\n\n\n// reactstrap components\nimport {\n    Card,\n    CardHeader,\n    CardBody,\n    CardTitle,\n    Table,\n    Row,\n    Col\n} from \"reactstrap\";\nimport { ButtonGroup, Button, Modal, Form } from 'react-bootstrap';\nimport { func, string } from \"prop-types\";\n\nclass RenewalPaymentFailed extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            root: \"\",\n            PageTitle: \"\",\n            selectedIvrProduct: \"\",\n            ivrType: \"0\",\n            ivrProducts: [],\n            ivrQueues: [],\n            SelectedQueues: [],\n            addClass: 'btn btn-primary',\n            UserId: '',\n            RealTimeUrl: '',\n            selectedValue: [{ label: \"Select IVR Queues\", value: \"0\" }],\n            selectedFile: null,\n            uploadFile: '',\n            ManagerId: '',\n            DownloadedFile: '/SampleExcelfiles/RenewalPaymentFailed.xlsx',\n            ResponseData:'',\n            UploadStatusColumns: [],\n            StartDate: moment().format(\"YYYY-MM-01\"),\n        };\n\n        this.dateRangeRef = React.createRef();\n\n    }\n\n    componentDidMount() {\n        this.UserList();\n    }\n\n    fnDatatableCol(columnlist) {\n\n        var columns = fnDatatableCol(columnlist);\n        return columns;\n    }\n\n    UserList() {debugger;\n        const user = getuser();\n        var managerid = user.UserID;\n        this.setState({ManagerId : managerid});\n    }\n\n    // On file select (from the pop up) \n    onFileChange(event) { debugger;\n        console.log(event.target.files[0]);\n        // Update the state \n        this.setState({ selectedFile: event.target.files[0] }); \n       \n    }; \n\n    // On file upload (click the upload button) \n    onFileUpload(e)\n    {   \n        this.setState({addClass:'btn btn-primary fa fa-spinner'});\n        e.preventDefault();\n         debugger;\n        // if (this.state.uploadFile == '') {\n        // toast(\"Please select Upload File Type\", { type: 'error' });\n        // return;\n        // }\n        if (this.state.selectedFile == null) {\n        toast(\"Please choose Excel File\", { type: 'error' });\n        return;\n        }\n        // Create an object of formData \n        const formData = new FormData(); \n        console.log(formData);\n        // Update the formData object \n        formData.append( \n          \"myFile\", \n          this.state.selectedFile, \n          this.state.selectedFile.name \n        ); \n        formData.append( \n            \"bucketname\", \n            \"policystatic.policybazaar.com\" \n          ); \n        formData.append( \n        \"filename\", \n        this.state.selectedFile.name \n        ); \n\n        // formData.append('TypeId', this.state.uploadFile); \n        // formData.append('UserId', this.state.ManagerId); \n        // formData.append('ValidFrom', moment(this.state.StartDate).format(\"YYYY-MM-01\"));    \n        \n       \n        // Details of the uploaded file \n        console.log(this.state.selectedFile);      \n        // Request made to the backend api \n        // Send formData object \n        // PostAgentChatFileData(formData, function (results) {\n        //     console.log(results);\n        //     this.setState({ ResponseData: results.data.data }, () =>\n        //     this.AgentChatAPICall());\n        //     this.setState({ addClass: 'btn btn-primary' });\n        // }.bind(this));\n        PostTestAws(formData, function (results) {debugger;\n            console.log(results);\n            this.setState({ ResponseData: results.data.data }, () =>\n            this.AgentChatAPICall());\n            this.setState({ addClass: 'btn btn-primary' });\n        }.bind(this));\n    }\n\n    AgentChatAPICall(){\n        let requestdata = this.state.ResponseData;\n        requestdata.forEach(element => {\n            var json = {\n                \"BookingId\" : element.BookingId,\n                \"ProposalNo\" : ''+element.ProposalNo,\n               \"PolicyNo\": ''+element.PolicyNo,\n               \"ExpiryDate\":moment.utc(element.ExpiryDate).format('YYYY-MM-DD'),\n               \"GraceEndDate\":moment.utc(element.GraceEndDate).format('YYYY-MM-DD'),//element.GraceEndDate,\n               \"EmiDueDate\":moment.utc(element.EmiDueDate).format('YYYY-MM-DD'),//element.EmiDueDate,\n               \"IsEMandateOrSI\":element.IsEMandateOrSI,\n               \"EMIAmount\":element.EMIAmount,\n               \"InsurerName\":element.InsurerName,\n               \"RegisteredCardDetails\":element.RegisteredCardDetails,\n               \"FailureReason\":element.FailureReason,\n               \"PaymentMode\":element.PaymentMode,\n               \"UploadedBy\": this.state.ManagerId,\n               };\n               this.props.GetCommonspData({\n                root: 'RenewalPaymentFailed',\n                c: \"L\",\n                params: [json],\n            }, function (result) {\n                if (result.data && result.data.data[0] ) {debugger;\n                    console.log(result.data.data[0]);\n                    this.setState({ VideoData: result.data.data[0] });\n              }\n            }.bind(this));\n        });\n        \n    }\n\n    fileData() \n    {      \n        if (this.state.selectedFile) { \n            \n          return ( \n            <div> \n              {/* <span>File Details:</span>  */}\n              <span>File Name: {this.state.selectedFile.name}</span> \n              <p>File Type: {this.state.selectedFile.type}</p> \n              {/* <p> \n                Last Modified:{\" \"} \n                {this.state.selectedFile.lastModifiedDate.toDateString()} \n              </p>  */}\n            </div> \n          ); \n        } else { \n          return ( \n            <div> \n              <br /> \n              <h4>Choose before Pressing the Upload button</h4> \n            </div> \n          ); \n        } \n    } \n\n    uploadfilechange(e, props){\n        this.setState({\n            uploadFile: e.target.value,\n            DownloadedFile: '/SampleExcelfiles/FirstPremPaid.xlsx'\n         });\n       \n    }\n\n    renderDownloadFile(){\n        if (this.state.DownloadedFile) {\n            return  <Link to={this.state.DownloadedFile} target=\"_blank\" download>Download Sample Excel File</Link>\n        }\n    }\n\n    renderUploadStatus() {\n\n        if (this.state.ResponseData && this.state.ResponseData.length > 0) {\n            let UploadStatusColumns = [];\n            let ResponseData = this.state.ResponseData;\n      \n            Object.entries(ResponseData[0]).map(([key,value])=>{\n                    if(key == 'Status'){                       \n                    UploadStatusColumns.push({ label: \"Status\",\n                                name: \"Status\",\n                                cell: row => <div className=\"Status\">{row.Status ? row.Status : \"N.A\"}</div>,\n                    })       \n                    }else if(key == 'FirstPremPaid' || key == 'FLC'){\n                        UploadStatusColumns.push({ label: key.toString(),\n                                name: key.toString(),\n                                type: \"bool\",\n                    })  \n                    }else{\n                    UploadStatusColumns.push({\n                    \"name\": key.toString(),\n                    \"label\": key.toString(),\n                     searchable: true,                    \n                    })\n                    }\n              })\n\n            const columns = this.fnDatatableCol(UploadStatusColumns);\n\n            return <Row>\n                <Col md=\"12\">\n                    <Card>\n                        <CardHeader>\n                            <Row>\n                                <Col md={12}>\n                                    <CardTitle tag=\"h6\">Upload Data Status</CardTitle>\n                                </Col>\n                            </Row>\n                        </CardHeader>\n                        <CardBody>\n                            <DataTable columns={columns} data={this.state.ResponseData} />\n                        </CardBody>\n                    </Card>\n                </Col>\n            </Row>\n        }\n\n        return null;\n\n    }\n\n    render() {\n        return (\n            <>\n                <div className=\"content\">\n                    <ToastContainer />\n                    <Row>\n                        <Col md=\"12\">\n                            <Card>\n                                <CardHeader>                                    \n                                    <Row>\n                                    <form ref=\"form\" onSubmit={this.onFileUpload.bind(this)} id=\"paymentForm\">\n                                            <input type=\"file\" onChange={this.onFileChange.bind(this)} /> \n                                            <button type=\"submit\" className={this.state.addClass}>Upload!</button>\n                                    </form>\n                                   </Row>\n\n                                </CardHeader>\n                                <CardBody>\n                                {this.renderDownloadFile()}   \n                                {this.fileData()}\n                                {this.renderUploadStatus()}\n                                </CardBody>\n                            </Card>\n                        </Col>\n                    </Row>\n                 </div>\n            </>\n        );\n    }\n}\n\n\nfunction mapStateToProps(state) {\n    return {\n        CommonData: state.CommonData\n    };\n}\n\nexport default connect(\n    mapStateToProps,\n    {\n        GetMySqlData,\n        GetCommonspData\n    }\n)(RenewalPaymentFailed);","\r\nimport React from \"react\";\r\nimport { Alert } from 'react-bootstrap';\r\n\r\n\r\nclass AlertBox extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            show: this.props.show\r\n        }\r\n    }\r\n    componentDidUpdate() {\r\n\r\n    }\r\n    componentWillReceiveProps(nextProps) {\r\n        this.setState({ show: nextProps.show });\r\n        if (nextProps.show) {\r\n            setTimeout(function () {\r\n                this.setState({ show: false });\r\n            }.bind(this), 5000);\r\n        }\r\n    }\r\n    render() {\r\n        if (this.state.show) {\r\n            return (\r\n                <Alert variant={this.props.variant}>\r\n                    {this.props.body}\r\n                </Alert>\r\n            );\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n}\r\n\r\nexport default AlertBox;\r\n","import axios from \"axios\";\nimport config from \"../../config.jsx\";\nimport constants from \"../../Constants/Constants.jsx\";\n\nconst GetCommonData_fetched = Todos => {\n\n  if (Todos.dataToSend.state && Todos.dataToSend.statename) {\n    localStorage.setItem(Todos.dataToSend.statename, JSON.stringify(Todos.data));\n  }\n\n  return {\n    type: constants.GET_COMMON_SUCCESS,\n    payload: Todos.data,\n    root: Todos.dataToSend.root\n  };\n};\n\nconst GetCommonData_fetch_error = error => {\n  return {\n    type: constants.GET_COMMON_FAIL,\n    payload: error\n  };\n};\n\nexport const GetMySqlData = (dataToSend,cb) => {\n\n  if (dataToSend.data != null || dataToSend.data != undefined) {\n    return function (dispatch, getState) {\n      dispatch(GetCommonData_fetched({ data: dataToSend.data, dataToSend: dataToSend }));\n    };\n  }\n  try {\n    if ((dataToSend.state && localStorage.getItem(dataToSend.statename)) || localStorage.getItem(dataToSend.statename)) {\n\n      return function (dispatch, getState) {\n        let data = JSON.parse(localStorage.getItem(dataToSend.statename))\n        dispatch(GetCommonData_fetched({ data: data, dataToSend: dataToSend }));\n      }\n    }\n  }\n  catch (e) {\n\n  }\n\n\n  return function (dispatch, getState) {\n    axios\n      .get(config.api.base_url + \"/mydb/list/\", {\n        params: dataToSend\n      })\n      .then(data => {\n        if (dataToSend.state && dataToSend.statename) {\n          localStorage.setItem(dataToSend.statename, JSON.stringify(data.data.data));\n        }\n        if (cb) {\n          cb(data);\n        }\n        dispatch(GetCommonData_fetched({ data: data.data.data[0], dataToSend: dataToSend }));\n      })\n      .catch(error => {\n        dispatch(GetCommonData_fetch_error(error, dataToSend));\n      });\n  };\n};\n\n\n\n\nconst InsertData_fetched = Todos => {\n\n  return {\n    type: constants.INSERT_COMMON_SUCCESS,\n    payload: Todos.data\n  };\n};\n\nconst InsertData_fetch_error = error => {\n  return {\n    type: constants.INSERT_COMMON_FAIL,\n    payload: error\n  };\n};\n\nexport const InsertData = (dataToSend, cb) => {\n  return function (dispatch, getState) {\n    axios\n      .post(config.api.base_url + \"/mydb/insert/\", {\n        data: dataToSend\n      })\n      .then(data => {\n        if (cb) {\n          cb(data);\n        }\n        dispatch(InsertData_fetched({ data: data.data }));\n      })\n      .catch(error => {\n        dispatch(InsertData_fetch_error(error));\n      });\n  };\n};\n\n\nconst UpdateData_fetched = Todos => {\n\n  return {\n    type: constants.UPDATE_COMMON_SUCCESS,\n    payload: Todos.data\n  };\n};\n\nconst UpdateData_fetch_error = error => {\n  return {\n    type: constants.UPDATE_COMMON_FAIL,\n    payload: error\n  };\n};\n\nexport const UpdateData = (dataToSend, cb) => {\n\n  return function (dispatch, getState) {\n    axios\n      .post(config.api.base_url + \"/mydb/update/\", {\n        data: dataToSend\n      })\n      .then(data => {\n        if (cb) {\n          cb(data);\n        }\n        dispatch(UpdateData_fetched({ data: data.data }));\n      })\n      .catch(error => {\n        dispatch(UpdateData_fetch_error(error));\n      });\n  };\n};\n\n\n\n\nexport const GetDataDirect = (dataToSend, cb) => {\n\n  try {\n    if ((dataToSend.state && localStorage.getItem(dataToSend.statename)) || localStorage.getItem(dataToSend.statename)) {\n\n      let data = JSON.parse(localStorage.getItem(dataToSend.statename));\n      cb(data);\n      return;\n    }\n  }\n  catch (e) {\n\n  }\n  //return function (dispatch, getState) {\n  axios\n    .get(config.api.base_url + \"/mydb/list/\", {\n      params: dataToSend\n    })\n    .then(data => {\n      if (dataToSend.state && dataToSend.statename) {\n        localStorage.setItem(dataToSend.statename, JSON.stringify(data.data.data));\n      }\n      cb(data.data.data);\n\n      //dispatch(GetCommonData_fetched({ data: data.data.data[0], dataToSend: dataToSend }));\n    })\n    .catch(error => {\n      //dispatch(GetCommonData_fetch_error(error, dataToSend));\n    });\n  //};\n\n};\n\nexport const GetRealTimeAgentData = (manager, context, cb) => {\n\n  let url = config.api.realtimeurl + \"RealTimeAgentStatus?managercode=\" + (context == \"\" ? manager : \"\") + \"&context=\" + context;\n\n  axios\n    .get(url)\n    .then(data => {\n\n      cb(data);\n      //dispatch(GetCommonData_fetched({ data: data.data.data[0], dataToSend: dataToSend }));\n    })\n    .catch(error => {\n      //dispatch(GetCommonData_fetch_error(error, dataToSend));\n    });\n  //};\n\n};\n\nexport const GetRealTimeTotalData = (context, cb) => {\n\n  let url = config.api.realtimeurl + \"RealTimeData?context=\" + context;\n\n  axios\n    .get(url)\n    .then(data => {\n\n      cb(data);\n      //dispatch(GetCommonData_fetched({ data: data.data.data[0], dataToSend: dataToSend }));\n    })\n    .catch(error => {\n      //dispatch(GetCommonData_fetch_error(error, dataToSend));\n    });\n  //};\n\n};\n\n\nexport const SendOTP = (dataToSend, cb) => {\n  let url = config.api.SendOTP;\n  const headers = {\n    'Content-Type': 'application/json',\n    'Authorization': 'cG9saWN5 YmF6YWFy'\n  }\n  axios\n    .post(url,\n      dataToSend\n      , {\n        headers: headers\n      })\n    .then(data => {\n\n      cb(data);\n    })\n    .catch(error => {\n    });\n};\n\nexport const ValidateOTP = (dataToSend, cb) => {\n  let url = config.api.ValidateOTP;\n  const headers = {\n    'Content-Type': 'application/json',\n    'Authorization': 'cG9saWN5 YmF6YWFy'\n  }\n  axios\n    .post(url,\n      dataToSend\n      , {\n        headers: headers\n      })\n    .then(data => {\n\n      cb(data);\n    })\n    .catch(error => {\n    });\n};\n\nexport const GetComunicationData = (dataToSend, cb) => {\n\n  return function (dispatch, getState) {\n    axios\n      .get(config.api.ServiceAPI + dataToSend.root, {\n        params: dataToSend.data\n      })\n      .then(data => {\n        cb(data);\n        //dispatch(GetCommonData_fetched({ data: data, dataToSend: dataToSend }));\n      })\n      .catch(error => {\n        dispatch(GetCommonData_fetch_error(error, dataToSend));\n      });\n  };\n};","\r\nimport React, { Suspense } from 'react';\r\n\r\nimport {\r\n    GetCommonData, GetCommonspData, GetDataDirect\r\n} from \"../../store/actions/CommonAction\";\r\nimport { getUrlParameter, getuser } from '../../utility/utility.jsx';\r\n\r\n\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport 'react-checkbox-tree/lib/react-checkbox-tree.css';\r\nimport CheckboxTree from 'react-checkbox-tree';\r\n\r\n\r\nclass ManagerHierarchy extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            nodes: [],\r\n            checked: [],\r\n            expanded: [],\r\n        }\r\n        //this.onExpand = this.onExpand.bind(this);\r\n    }\r\n    componentDidMount() {\r\n\r\n        let UserId = getuser().RoleId == 2 ? 75 : getuser().UserID;\r\n\r\n        GetDataDirect({\r\n            root: \"Hierarchy\",\r\n            ManagerId: UserId,\r\n            statename: \"Hierarchy-\" + UserId,\r\n            value: this.props.value,\r\n            state: true\r\n        }, function (result) {\r\n\r\n            let str = JSON.stringify(result);\r\n            var res = str.replace(/UserName/g, \"label\");\r\n            res = res.replace(this.props.value, \"value\");\r\n\r\n            this.setState({ nodes: JSON.parse(res) });\r\n        }.bind(this));\r\n    }\r\n    componentWillReceiveProps(nextProps) {\r\n\r\n    }\r\n\r\n\r\n    onButtonClick() {\r\n        this.props.handleShow({\r\n            SelectedSupervisors: this.state.checked\r\n        });\r\n        this.forceUpdate();\r\n    }\r\n    onMouseEnter(e) {\r\n        document.getElementById(\"floating\").style.right = 0\r\n        document.getElementById(\"handle\").style.right = \"395px\"\r\n        //e.target.style.right = 0;\r\n    }\r\n    onMouseOut(e) {\r\n        setTimeout(function () {\r\n            document.getElementById(\"floating\").style.right = \"-400px\"\r\n            document.getElementById(\"handle\").style.right = \"-15px\"\r\n        }, 700);\r\n\r\n        //e.target.style.right = \"-350px\";\r\n    }\r\n    RemoveChecked(checkeditem) {\r\n        const { checked } = this.state;\r\n        let index = checked.indexOf(checkeditem);\r\n        if (index > -1) {\r\n            checked.splice(index, 1);\r\n        }\r\n        this.setState(checked);\r\n    }\r\n    onClick() {\r\n\r\n    }\r\n    render() {\r\n        const { nodes, checked } = this.state;\r\n        if (nodes.length == 0) {\r\n            return null;\r\n        }\r\n        return (\r\n\r\n\r\n            <div id=\"floating\" className=\"floating\" onMouseLeave={this.onMouseOut}>\r\n\r\n                <Row >\r\n                    <Col md=\"8\"><div id=\"handle\" className=\"handle\" onClick={this.onMouseEnter}>Filter</div></Col>\r\n                    <Col md=\"4\"><input type=\"button\" className=\"btn btn-primary\" onClick={this.onButtonClick.bind(this)} value=\"Show\" /></Col>\r\n                </Row>\r\n\r\n                <Row>\r\n                    <Col>\r\n\r\n                        <div className=\"managers\">\r\n                            <CheckboxTree\r\n                                nodes={nodes}\r\n                                checked={this.state.checked}\r\n                                expanded={this.state.expanded}\r\n                                checkModel=\"all\"\r\n                                name=\"UserName\"\r\n                                showNodeIcon={false}\r\n                                onCheck={checked => this.setState({ checked })}\r\n                                onExpand={expanded => this.setState({ expanded })}\r\n                                showExpandAll={true}\r\n                            />\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n\r\n\r\n\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default ManagerHierarchy;\r\n","\r\nimport React from \"react\";\r\nimport { Form } from 'react-bootstrap';\r\nimport { connect } from \"react-redux\";\r\n// reactstrap components\r\n\r\nimport {\r\n    GetMySqlData\r\n} from \"../../store/actions/CommonMysqlAction\";\r\nclass DropDownListMysql extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            items: [],\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        if (this.state.items && this.state.items.length === 0) {\r\n            this.CallApi();\r\n        }\r\n    }\r\n    componentWillReceiveProps(nextProps) {\r\n        \r\n        // if (nextProps.col.config.rebind) {\r\n            \r\n        // }\r\n\r\n        if (!nextProps.CommonData.isError) {\r\n            //debugger;\r\n            if (nextProps.CommonData[this.props.col.config.root]) {\r\n                let str = JSON.stringify(nextProps.CommonData[this.props.col.config.root]);\r\n                var res = str.replace(this.props.col.config.Idfield, \"Id\");\r\n                res = res.replace(this.props.col.config.Displayfield, \"Display\");\r\n\r\n                this.setState({ items: JSON.parse(res) });\r\n            }\r\n        }\r\n    }\r\n\r\n    componentWillUpdate(){\r\n        //this.CallApi();\r\n    }\r\n\r\n    CallApi() {\r\n\r\n        this.props.GetMySqlData({\r\n            limit: 10,\r\n            skip: 0,\r\n            root: this.props.col.config.root,\r\n            cols: this.props.col.config.cols,\r\n            con: this.props.col.config.con,\r\n            data: this.props.col.config.data,\r\n            statename: this.props.col.config.statename,\r\n            state: this.props.col.config.state\r\n        });\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        let { items } = this.state;\r\n        const { value, onChange, visible } = this.props;\r\n\r\n        if (!items) {\r\n            items = [];\r\n        }\r\n        if (visible == false) {\r\n            return null;\r\n        }\r\n        return (\r\n\r\n            <div>\r\n\r\n                <Form.Control as=\"select\" disabled={this.props.disabled} value={value} name={this.props.col.name} onChange={onChange}>\r\n                    <option key={0} value={0}>{this.props.firstoption ? this.props.firstoption : \"Select\"}</option>\r\n                    {items.map(item => (\r\n                        <option key={item.Id} value={item.Id}>{item.Display}</option>\r\n                    ))}\r\n\r\n                </Form.Control>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        CommonData: state.CommonData\r\n    };\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    {\r\n        GetMySqlData\r\n    }\r\n)(DropDownListMysql);\r\n\r\n","\r\nimport React from \"react\";\r\nimport { Form } from 'react-bootstrap';\r\n\r\n// reactstrap components\r\nimport moment from 'moment';\r\n\r\nimport * as Datetime from 'react-datetime';\r\nimport 'react-datetime/css/react-datetime.css'\r\n\r\n\r\nimport { Row, Col } from 'react-bootstrap';\r\n\r\n\r\n\r\nclass Date extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleStartDateChange = this.handleStartDateChange.bind(this);\r\n        this.handleEndDateChange = this.handleEndDateChange.bind(this);\r\n\r\n        this.state = {\r\n            startdate: moment().format(\"YYYY-MM-DD\"),            \r\n        }\r\n    }\r\n    componentDidMount() {\r\n\r\n    }\r\n    componentWillReceiveProps(nextProps) {\r\n\r\n    }\r\n\r\n    handleStartDateChange = (e, props) => {\r\n        if (e._isAMomentObject) {\r\n            this.props.onStartDate(e.format(\"YYYY-MM-DD\"));\r\n            this.setState({ startdate: e.format(\"YYYY-MM-DD\"), enddate: e.add(30, 'days').format(\"YYYY-MM-DD\") }, function () {\r\n            });\r\n        }\r\n    }\r\n\r\n    handleEndDateChange = (e, props) => {\r\n        if (e._isAMomentObject) {\r\n            this.props.onEndDate(e.format(\"YYYY-MM-DD\"));\r\n            this.setState({ enddate: e.format(\"YYYY-MM-DD\") }, function () {\r\n                //this.fetchCallBackData();\r\n            });\r\n        }\r\n    }\r\n    validation = (currentDate) => {\r\n        return currentDate.isBefore(moment());\r\n    };\r\n\r\n    validationEndDate = (currentDate) => {\r\n        \r\n\r\n        if (!currentDate.isBefore(moment(this.state.enddate))) {\r\n            return false;\r\n        }\r\n\r\n        if(currentDate.isBefore(moment(this.state.startdate))) {\r\n            return false;\r\n        }\r\n        \r\n        return true;\r\n        \r\n    };\r\n\r\n    getSelectedDateRange() {\r\n        return {\r\n            startdate: this.state.startdate,\r\n            enddate: this.state.enddate\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n\r\n        let { visible } = this.props;\r\n\r\n        if (visible == false) {\r\n            return null;\r\n        }\r\n        return (\r\n\r\n            <>\r\n                    <Form.Group controlId=\"startdate_field\">\r\n                        <Datetime value={new Date()}\r\n                            dateFormat=\"YYYY-MM-DD\"\r\n                            value={this.state.startdate}\r\n                            isValidDate={this.validation.bind(this)}\r\n                            onChange={moment => this.handleStartDateChange(moment)}\r\n                            utc={true}\r\n                            timeFormat={false}\r\n                            className=\"form-group\"\r\n                        />\r\n                    </Form.Group>\r\n            </>\r\n\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default Date;\r\n\r\n","import React from \"react\";\r\nimport {\r\n  GetCommonData, GetCommonspData, GetRealTimeAgentData, GetRealTimeTotalData\r\n} from \"../../store/actions/CommonAction\";\r\nimport { hhmmss, getuser } from '../../utility/utility.jsx';\r\nimport { connect } from \"react-redux\";\r\nimport DataTable from 'react-data-table-component';\r\nimport ManagerHierarchy from '../Common/ManagerHierarchy';\r\nimport Moment from 'react-moment';\r\nimport { Web } from \"sip.js\";\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n// reactstrap components\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  Row,\r\n  Col\r\n} from \"reactstrap\";\r\nimport { Form } from 'react-bootstrap';\r\n\r\nclass RealTimePanel extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      PageTitle: \"RealTime Panel\",\r\n      AgentData: [],\r\n      TotalData: [],\r\n      items: [],\r\n      key: \"ALL\",\r\n      onBarge: false,\r\n      SelectedSupervisors: [],\r\n      winactive: 0,\r\n      BargeWith: \"\"\r\n    };\r\n    this.handleShow = this.handleShow.bind(this);\r\n    this.statuschange = this.statuschange.bind(this);\r\n    this._handleKeyDown = this._handleKeyDown.bind(this);\r\n    //this.bargecall = this.bargecall.bind(this);\r\n    this.userAgent = null;\r\n    this.winactive = 0;\r\n    this.schdular = null;\r\n    this.columnlist = [\r\n      {\r\n        name: \"Barging\",\r\n        selector: \"Barging\",\r\n        sortable: true,\r\n        width: \"80px\",\r\n        cell: row =>\r\n          <div className={row.Status == \"BUSY\" ? \"\" : \"hide\"} >\r\n\r\n            <button onClick={(e) => this.bargecall(e, row)} className={row.Barge ? \"hide\" : \"show\"}><i className=\"fa fa-volume-up\" aria-hidden=\"true\"></i></button>\r\n\r\n\r\n          </div>\r\n      },\r\n      {\r\n        name: \"Agent Code\",\r\n        selector: \"AgentCode\",\r\n\r\n        sortable: true,\r\n      },\r\n      {\r\n        name: \"Status\",\r\n        selector: \"Status\",\r\n        sortable: true,\r\n\r\n        cell: row => <div className={this.displayStatus(row) + \" RealtimeStatus\"}>{this.displayStatus(row)}</div>\r\n      },\r\n      {\r\n        name: \"Agent Name\",\r\n        selector: \"AgentName\",\r\n        sortable: true,\r\n      },\r\n      {\r\n        name: \"Call Type\",\r\n        selector: \"CallType\",\r\n      },\r\n      {\r\n        name: \"Lead Id\",\r\n        selector: \"LeadId\",\r\n        sortable: true,\r\n      },\r\n      {\r\n        name: \"D.C.\",\r\n        selector: \"CallingCompany\",\r\n\r\n        sortable: true,\r\n      },\r\n      {\r\n        name: \"DIDNo\",\r\n        selector: \"DIDNo\",\r\n\r\n        sortable: true,\r\n      },\r\n      // {\r\n      //   name: \"Asterisk_Url\",\r\n      //   selector: \"Asterisk_Url\",\r\n      //   width: \"120px\",\r\n      //   sortable: true,\r\n      // },\r\n\r\n      // {\r\n      //   name: \"Last Updated On\",\r\n      //   selector: \"LastUpdatedOn\",\r\n      //   width: \"130px\",\r\n      //   sortable: true,\r\n      //   cell: row => <div className={row.AgentCode}>{row.LastUpdatedOn ? <Moment format=\"HH:mm:ss A\">{row.LastUpdatedOn}</Moment> : \"N.A\"}</div>\r\n      // },\r\n      {\r\n        name: \"Since\",\r\n        selector: \"LastUpdatedOn\",\r\n        sortable: true,\r\n        width: \"130px\",\r\n        cell: row => <div className={row.AgentCode}>{row.LastUpdatedOn ? <Moment utc={true} from={row.ServerTime}>{row.LastUpdatedOn}</Moment> : \"N.A\"}</div>\r\n      },\r\n      {\r\n        name: \"T Calls\",\r\n        selector: \"TotalCalls\",\r\n        width: \"70px\",\r\n        sortable: true,\r\n      },\r\n      {\r\n        name: \"U Dials\",\r\n        selector: \"UniqueDials\",\r\n        width: \"70px\",\r\n        sortable: true,\r\n      },\r\n      {\r\n        name: \"C Dials\",\r\n        selector: \"ConnectedDials\",\r\n        width: \"70px\",\r\n        sortable: true,\r\n      },\r\n      {\r\n        name: \"T TalkTime\",\r\n        selector: \"TotalTalkTime\",\r\n        sortable: true,\r\n        width: \"130px\",\r\n        cell: row => hhmmss(row.TotalTalkTime),\r\n      },\r\n\r\n    ];\r\n\r\n\r\n  }\r\n\r\n  componentDidMount() {\r\n\r\n    const user = getuser();\r\n    this.setState({ SelectedSupervisors: [this.props.m] }, function () {\r\n      this.UserList();\r\n    }.bind(this));\r\n\r\n    if (this.schdular == null) {\r\n      this.schdular = setInterval(function () {\r\n        //if (!this.state.onBarge) {\r\n        //if ((new Date()).getHours() >= 21 || (new Date()).getHours() < 9) {\r\n        if (this.state.winactive == 1 || document.hasFocus()) {\r\n          this.UserList();\r\n          //this.totalList();\r\n        }\r\n        // }\r\n        // else {\r\n        //   this.UserList();\r\n        //   this.totalList();\r\n        // }\r\n        //}\r\n      }.bind(this), 2500)\r\n\r\n      window.addEventListener(\"message\", function (event) {\r\n        if (event.data.type == \"checkactive\") {\r\n          this.setState({ winactive: event.data.winactive })\r\n          this.winactive = event.data.winactive;\r\n        }\r\n      }.bind(this));\r\n    }\r\n  }\r\n\r\n  totalList() {\r\n    let context = this.props.c;\r\n    if (context != \"\") {\r\n      GetRealTimeTotalData(context, function (results) {\r\n        this.setState({ TotalData: results.data });\r\n      }.bind(this));\r\n    }\r\n  }\r\n\r\n  UserList() {\r\n    let managerid = this.props.m;\r\n    let context = this.props.c\r\n    const user = getuser();\r\n    if (this.state.SelectedSupervisors.length > 0) {\r\n      managerid = this.state.SelectedSupervisors.join()\r\n    }\r\n\r\n    if (managerid == \"\" && context == \"\") {\r\n      managerid = user.EmployeeId;\r\n      this.setState({ SelectedSupervisors: [managerid] });\r\n    }\r\n\r\n    GetRealTimeAgentData(managerid, context, function (results) {\r\n      this.setState({ AgentData: results.data });\r\n    }.bind(this));\r\n\r\n  }\r\n\r\n  handleShow(e) {\r\n    this.setState({ SelectedSupervisors: e.SelectedSupervisors });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    clearInterval(this.schdular);\r\n    if (this.userAgent != null)\r\n      this.userAgent.hangup();\r\n  }\r\n\r\n  displayStatus(row) {\r\n    // var diff = (new Date() - new Date(row.LastUpdatedOn)) / 1000;\r\n    // if (diff > 60 && row.Status == \"IDLE\") {\r\n    //   return \"Away\";\r\n    // } else return row.Status;\r\n    let BargeWithAgent = this.state.BargeWithAgent;\r\n    if (BargeWithAgent && BargeWithAgent.AgentCode == row.AgentCode && row.Status != \"BUSY\") {\r\n\r\n      // if (this.userAgent) {\r\n      //   this.userAgent.hangup();\r\n      //   this.userAgent = null;        \r\n      // }\r\n      // this.setState({ onBarge: false, BargeWith: \"\" });\r\n      this.unbargecall();\r\n    }\r\n    else if (BargeWithAgent && BargeWithAgent.AgentCode == row.AgentCode && row.Status == \"BUSY\") {\r\n      // if (this.userAgent == null) {\r\n      //   this.bargecall(null, BargeWithAgent);\r\n      // }\r\n    }\r\n    return row.Status.toUpperCase()\r\n  }\r\n\r\n  unbargecall(e) {\r\n    if (this.userAgent) {\r\n      this.userAgent.hangup();\r\n      this.userAgent = null;\r\n    }\r\n    this.setState({ onBarge: false, BargeWith: \"\", BargeWithAgent: null });\r\n  }\r\n\r\n\r\n  bargecall(e, row) {\r\n    try {\r\n      if (this.userAgent) {\r\n        this.userAgent.hangup();\r\n        this.userAgent = null\r\n      }\r\n      //if (!this.state.onBarge) {\r\n\r\n      let user = {\r\n        Display: getuser().EmployeeId,\r\n        User: getuser().EmployeeId,\r\n        Pass: getuser().EmployeeId,\r\n        Realm: row.Asterisk_Url,\r\n        WSServer: \"wss://\" + row.Asterisk_Url + \":8089/ws\"\r\n      }\r\n      this.LoginAsteriskServer(user, function () {\r\n        setTimeout(function () {\r\n\r\n          if (this.userAgent) {\r\n            let target = \"*222\" + row.AgentCode;\r\n            if (row.CallingCompany == \"WFH\" || row.CallingCompany == \"KNOWLARITY\") {\r\n              target = \"*222\" + row.DIDNo;\r\n            }\r\n\r\n            this.userAgent.call(target);\r\n          }\r\n          this.setState({ onBarge: true, BargeWith: row.AgentCode, BargeWithAgent: row });\r\n\r\n          // setTimeout(function () {\r\n          //   //this.forceUpdate();\r\n\r\n          // }.bind(this), 500);\r\n\r\n        }.bind(this), 1000);\r\n      }.bind(this), function () {\r\n        document.getElementById(row.AgentCode).checked = false;\r\n      }.bind(this));\r\n\r\n      // }\r\n      // else {\r\n      //   toast(\"Close previous call barging\", { type: 'error' });\r\n      //   e.target.checked = false;\r\n      //   return false;\r\n      // }\r\n\r\n\r\n    } catch (e) {\r\n\r\n    }\r\n\r\n  }\r\n\r\n  LoginAsteriskServer(user, onsuccess, onerror) {\r\n\r\n    if (user) {\r\n      var config = {\r\n        media: {\r\n          remote: {\r\n            //video: document.getElementById('remoteVideo'),\r\n            // This is necessary to do an audio/video call as opposed to just a video call\r\n            audio: document.getElementById('audioRemote')\r\n          }\r\n        },\r\n        ua: {\r\n          uri: user.User + '@' + user.Realm,\r\n          wsServers: [user.WSServer],\r\n          authorizationUser: user.Display,\r\n          password: user.Pass\r\n        }\r\n      }\r\n\r\n      if (Web) {\r\n        this.userAgent = new Web.Simple(config);\r\n\r\n        //let remoteElem = document.getElementById('audioRemote');\r\n        //let localElem = document.getElementById('audioLocal');\r\n        this.userAgent.on('connected', function (e) {\r\n          toast(\"Barging Connected!\", { type: 'success' });\r\n        });\r\n        this.userAgent.on('disconnected', function (e) {\r\n\r\n        });\r\n        this.userAgent.on('registered', function (e) {\r\n          if (onsuccess) {\r\n            onsuccess();\r\n          }\r\n\r\n        });\r\n        this.userAgent.on('registrationFailed', function (e) {\r\n          toast(\"Make sure your VPN is connected!\", { type: 'error' });\r\n        });\r\n        this.userAgent.on('unregistered', function (e) {\r\n          toast(\"Dialer issue please contact administrator!\", { type: 'error' });\r\n          if (onerror) {\r\n            onerror();\r\n          }\r\n\r\n        });\r\n        this.userAgent.on('userMediaFailed', function (e) {\r\n\r\n        });\r\n        this.userAgent.on('userMediaRequest', function (e) {\r\n\r\n        });\r\n        this.userAgent.on('userMedia', function (e) {\r\n\r\n        });\r\n        this.userAgent.on('invite', function (e) {\r\n\r\n        });\r\n        this.userAgent.on('addStream', function (stream) {\r\n\r\n        });\r\n        this.userAgent.on('ended', function (stream) {\r\n\r\n        });\r\n      }\r\n    }\r\n\r\n    setTimeout(function () {\r\n      if (this.userAgent && this.userAgent.ua && this.userAgent.ua.isRegistered() == false) {\r\n        toast(\"Make sure your VPN is connected!\", { type: 'error' });\r\n      }\r\n    }.bind(this), 10000);\r\n    return this.userAgent;\r\n  }\r\n  componentWillReceiveProps(nextProps) {\r\n    if (!nextProps.CommonData.isError) {\r\n\r\n    }\r\n  }\r\n\r\n  statuschange(e) {\r\n    this.setState({ key: e.target.value });\r\n\r\n  }\r\n\r\n  filterdata(e) {\r\n\r\n    let alldata = this.state.AgentData\r\n    let that = this;\r\n    if (this.state.key === \"ALL\") {\r\n      return alldata;\r\n    }\r\n    if (this.state.key === \"Away\") {\r\n      let AgentData = [];\r\n      alldata.forEach(element => {\r\n        var diff = (new Date() - new Date(element.LastUpdatedOn)) / 1000;\r\n        if (diff > 60 && element.Status === \"IDLE\") {\r\n          AgentData.push(element);\r\n        }\r\n      });\r\n      return AgentData;\r\n    }\r\n\r\n    let AgentData = [];\r\n    alldata.forEach(element => {\r\n      if (this.state.key.indexOf(element.Status) > -1) {\r\n        AgentData.push(element);\r\n      }\r\n    });\r\n    return AgentData;\r\n  }\r\n  _handleKeyDown(e) {\r\n\r\n    if (e.key === 'Enter') {\r\n      this.setState({ SelectedSupervisors: [e.target.value] });\r\n    }\r\n  }\r\n\r\n  _handleOnClick(e) {\r\n\r\n\r\n    this.setState({ SelectedSupervisors: [document.getElementById(\"EmpId\").value] });\r\n\r\n  }\r\n\r\n  renderTotalData() {\r\n    const context = this.props.c;\r\n    let TotalData = this.state.TotalData;\r\n    if (context != \"\") {\r\n      return <div>\r\n\r\n        <div className=\"totaldata\">\r\n          <Row></Row>\r\n          <Row>\r\n            <Col md={2}><span className=\"totaltext\">Context : {TotalData.context}</span></Col>\r\n            <Col md={2}><span className=\"totaltext\">Answered : {TotalData.answered}</span></Col>\r\n            <Col md={2}><span className=\"totaltext\">Unanswered : {TotalData.unanswered}</span></Col>\r\n            <Col md={2}><span className=\"totaltext\"># Agents : {TotalData.totalAgents}</span></Col>\r\n            <Col md={2}><span className=\"totaltext\">Waiting Calls : {TotalData.waitingCalls}</span></Col>\r\n            <Col md={2}><span className=\"totaltext\"># Avail. Agents : {TotalData.totalAvailableAgents}</span></Col>\r\n          </Row>\r\n        </div>\r\n        <br />\r\n      </div>\r\n    }\r\n    else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n\r\n  render() {\r\n    const columns = this.columnlist;\r\n    const totalcolumns = this.totalcolumnlist;\r\n    const data = this.filterdata();\r\n    const managerid = this.props.m;\r\n    const context = this.props.c;\r\n\r\n    const { items, PageTitle } = this.state;\r\n\r\n\r\n    return (\r\n      <>\r\n        <ToastContainer />\r\n        <Row>\r\n          <Col md=\"12\">\r\n            <Card>\r\n              <CardHeader>\r\n                <Row>\r\n                  <Col md={3}>\r\n                    <CardTitle tag=\"h4\">{PageTitle}</CardTitle>\r\n                  </Col>\r\n                  <Col md={4}>\r\n                    <CardTitle tag=\"h6\">{this.state.SelectedSupervisors.join()}</CardTitle>\r\n                  </Col>\r\n                  <Col md={3}>\r\n                    <div className=\"input-group\">\r\n\r\n                      <Form.Control required type=\"text\" name=\"EmpId\" id=\"EmpId\" onKeyDown={this._handleKeyDown} onChange={(e) => this.setState({ username: e.target.value })} value={this.state.username} placeholder={\"Enter Supervisor Id\"} />\r\n                      <div className=\"input-group-append\">\r\n                        <button onClick={(e) => this._handleOnClick(e)} className=\"btn btn-primary input-group-button\"><i className=\"fa fa-search\" aria-hidden=\"true\"></i></button>\r\n\r\n                      </div>\r\n                    </div>\r\n                  </Col>\r\n                  <Col md={2}>\r\n                    <div className=\"form-group\">\r\n                      <select className=\"form-control\" onChange={this.statuschange}>\r\n                        <option value=\"ALL\">ALL</option>\r\n                        <option value=\"IDLE\">IDLE</option>\r\n                        <option value=\"Away\">Away</option>\r\n                        <option value=\"BUSY\">BUSY</option>\r\n                        <option value=\"Lunch,Tea,Training,Meeting,Day End\">Break</option>\r\n                        <option value=\"PAUSE\">PAUSE</option>\r\n                        <option value=\"Auto Logout,LOGOUT\">LOGOUT</option>\r\n                      </select>\r\n                    </div>\r\n                    {\r\n                      (managerid == '' && context == '') ? <ManagerHierarchy handleShow={this.handleShow} value={/EmployeeId/g} ></ManagerHierarchy> : null\r\n                    }\r\n                    <button id=\"BargeWith\" onClick={(e) => this.unbargecall(e)} className={this.state.BargeWith == \"\" ? \"hide\" : \"btn btn-primary hangupwith show\"} ><i className=\"fa fa-volume-off\" aria-hidden=\"true\"></i> Hang Up With: {this.state.BargeWith}</button>\r\n                  </Col>\r\n\r\n                </Row>\r\n\r\n              </CardHeader>\r\n\r\n              <CardBody>\r\n                {/* {this.renderTotalData()} */}\r\n                <div className=\"statusdata\">\r\n                  <DataTable\r\n                    columns={columns}\r\n                    data={data}\r\n                    pagination={false}\r\n                    striped={true}\r\n                    noHeader={true}\r\n                    highlightOnHover\r\n                    dense\r\n\r\n                  />\r\n\r\n                </div>\r\n              </CardBody>\r\n\r\n            </Card>\r\n          </Col>\r\n          <audio id=\"audioRemote\"></audio>\r\n          <audio id=\"audioLocal\"></audio>\r\n        </Row>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    CommonData: state.CommonData\r\n  };\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    GetCommonData,\r\n    GetCommonspData\r\n  }\r\n)(RealTimePanel);\r\n\r\n\r\n\r\n\r\n","import React from \"react\";\nimport {\n  GetMySqlData\n} from \"../../store/actions/CommonMysqlAction\";\nimport {\n  GetCommonData, GetCommonspData, GetRealTimeAgentData, GetRealTimeTotalData, GetRealTimeQueueData, GetFileExists, \n  GetAwsRecordingUrl, GetRecordingName\n} from \"../../store/actions/CommonAction\";\nimport { getUrlParameter, hhmmss, getuser } from '../../utility/utility.jsx';\nimport { connect } from \"react-redux\";\nimport DataTable from 'react-data-table-component';\nimport ManagerHierarchy from '../Common/ManagerHierarchy';\nimport Moment from 'react-moment';\nimport moment from 'moment';\nimport { Web } from \"sip.js\";\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n// reactstrap components\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Table\n} from \"reactstrap\";\nimport { Form, Modal, Glyphicon } from 'react-bootstrap';\nimport { If, Then, Else } from 'react-if';\n\nclass RealTimePanelQueuewise extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      PageTitle: \"RealTime Panel\",\n      AgentData: [],\n      TotalData: [],\n      items: [],\n      key: \"ALL\",\n      onBarge: false,\n      SelectedSupervisors: [],\n      winactive: 0,\n      BargeWith: \"\",\n      queues: [],\n      QueueData: [],\n      MoreInfoData: [],\n      contextName: null,\n      showModal: false,\n      showMoreInfoModal: false,\n      addClass: \"fa fa-play-circle\",\n      queueServerIp: \"\",\n      clickedQueue : \"\",\n      wraptime: \"\",\n      wrapcomplete: false,\n    };\n    this.handleShow = this.handleShow.bind(this);\n    this.statuschange = this.statuschange.bind(this);\n    this._handleKeyDown = this._handleKeyDown.bind(this);\n    //this.bargecall = this.bargecall.bind(this);\n    this.userAgent = null;\n    this.winactive = 0;\n    this.schdular = null;\n\n    this.unansweredlist = [\n      { name: \"Callid\", selector: \"callid\" },\n      { name: \"leadid\", selector: \"leadid\" },\n      { name: \"Calltime\", cell: row => <div className=\"calltime\">{row.calltime ? <Moment format=\"YYYY-MM-DD HH:mm:ss\" utc={true}>{row.calltime}</Moment> : \"N.A\"}</div> },\n      { name: \"Status\", cell: row => <div className=\"abandon\">{this.state.ModalTitle.indexOf(\"Unanswered\") > -1 ? \"ABANDON\" : \"ANSWERED\"}</div> },\n      { name: \"Waiting Time\", selector: \"waittime\" },\n      { name: \"EnterTime\", cell: row => <div className=\"calltime\">{row.entertime ? <Moment format=\"YYYY-MM-DD HH:mm:ss\" utc={true}>{row.entertime}</Moment> : \"N.A\"}</div>,\n       width: \"150px\",\n    },\n      { name: \"Main Queue EnterTime\", cell: row => <div className=\"calltime\">{row.mainqueueentertime ? <Moment format=\"YYYY-MM-DD HH:mm:ss\" utc={true}>{row.mainqueueentertime}</Moment> : \"N.A\"}</div>,\n      width: \"150px\",\n    },\n      { name: \"IVR Time\", selector: \"ivrtime\" },\n      { name: \"Call Type\", selector: \"call_type\" },\n      {\n        name: \"Listen\", cell: row =>\n        <div className=\"listenUserDetails\">\n            {this.getHtmlListen(row)}\n        </div>\n      },\n      {\n        name: \"More Info\", cell: row => <div className=\"moreinfo\"><a onClick={(e) => this.clickMoreinfo(e, row)} className=\"detailsinfo\">\n          <i className=\"fa fa-eye\"></i></a>\n        </div>\n      },\n    ];\n    this.moreinfolist = [\n      { name: \"callid\", selector: \"callid\" },\n      { name: \"leadid\", selector: \"leadid\" }, \n      { name: \"Calldate\", cell: row => <div className=\"calldate\">{row.calldate ? <Moment utc={true} format=\"YYYY-MM-DD HH:mm:ss\">{row.calldate}</Moment> : \"N.A\"}</div> },\n      { name: \"agentno\", selector: \"agentno\" },\n      { name: \"agentid\", selector: \"agentid\" },\n      { name: \"isassignedagent\", selector: \"isassignedagent\" },\n      { name: \"duration\", selector: \"ringtime\" }, \n      { name: \"disposition\", \n        //selector: \"custom_disposition\",\n        cell: row => this.state.ModalTitle.indexOf(\"Unanswered\") > -1 && row.custom_disposition === \"ANSWERED\" ? \"NO ANSWER\" : row.custom_disposition\n      },\n      {\n        name: \"Listen\", cell: row =>(['Playback','Hangup'].indexOf(row.custom_disposition) > -1)?'No file found':\n        <div className=\"listen\">\n            {this.getHtmlListenMoreInfo(row)}\n        </div>\n      },\n      // {\n      //   name: \"Listen\", cell: row =>\n      //     <div className=\"listen\">\n      //       {this.CreateRecordingURL(row)}\n      //     </div>\n      // }\n    ];\n    this.columnlist = [\n      {\n        name: \"Barging\",\n        selector: \"Barging\",\n        sortable: true,\n        width: \"80px\",\n        cell: row =>\n          <div className={row.Status == \"BUSY\" ? \"\" : \"hide\"} >\n            <button onClick={(e) => this.bargecall(e, row)} className={row.Barge ? \"hide\" : \"show\"}><i className=\"fa fa-volume-up\" aria-hidden=\"true\"></i></button>\n          </div>\n      },\n      {\n        name: \"Agent Code\",\n        selector: \"AgentCode\",\n\n        sortable: true,\n      },\n      {\n        name: \"Status\",\n        selector: \"Status\",\n        sortable: true,\n\n        cell: row => <div className={this.displayStatus(row) + \" RealtimeStatus\"}>{this.displayStatus(row)}</div>\n      },\n      {\n        name: \"Agent Name\",\n        selector: \"AgentName\",\n        sortable: true,\n      },\n      {\n      name: \"TL Name\",\n      selector: \"TLName\",\n      sortable: true,\n      },\n      {\n        name: \"Call Type\",\n        selector: \"CallType\",\n      },\n      {\n        name: \"Lead Id\",\n        selector: \"LeadId\",\n        sortable: true,\n      },\n      {\n        name: \"D.C.\",\n        selector: \"CallingCompany\",\n\n        sortable: true,\n      },\n      {\n        name: \"DIDNo\",\n        selector: \"DIDNo\",\n\n        sortable: true,\n      },\n      {\n        name: \"Asterisk_Url\",\n        selector: \"Asterisk_Url\",\n        width: \"120px\",\n        sortable: true,\n      },\n\n      // {\n      //   name: \"Last Updated On\",\n      //   selector: \"LastUpdatedOn\",\n      //   width: \"130px\",\n      //   sortable: true,\n      //   cell: row => <div className={row.AgentCode}>{row.LastUpdatedOn ? <Moment format=\"HH:mm:ss A\">{row.LastUpdatedOn}</Moment> : \"N.A\"}</div>\n      // },\n      {\n        name: \"Since\",\n        selector: \"LastUpdatedOn\",\n        sortable: true,\n        width: \"130px\",\n        cell: row => <div className={row.AgentCode}>{row.LastUpdatedOn ? <Moment fromNow>{this.getLastUpdatedOn(row)}</Moment> : \"N.A\"}</div>\n\n        //cell: row => <div className={row.AgentCode}>{row.LastUpdatedOn ? <Moment fromNow>{row.LastUpdatedOn}</Moment> : \"N.A\"}</div>\n      },\n      {\n        name: \"T Calls\",\n        selector: \"TotalCalls\",\n        width: \"70px\",\n        sortable: true,\n      },\n      {\n        name: \"U Dials\",\n        selector: \"UniqueDials\",\n        width: \"70px\",\n        sortable: true,\n      },\n      {\n        name: \"C Dials\",\n        selector: \"ConnectedDials\",\n        width: \"70px\",\n        sortable: true,\n      },\n      {\n        name: \"T TalkTime\",\n        selector: \"TotalTalkTime\",\n        sortable: true,\n        width: \"130px\",\n        cell: row => hhmmss(row.TotalTalkTime),\n      },\n\n    ];\n\n\n  }\n\n  componentWillReceiveProps(nextProps) {debugger;\n    if ((nextProps.queues && nextProps.queues != this.props.queues) ) {\n\n    const user = getuser();\n    this.setState({ SelectedSupervisors: [getUrlParameter(\"m\") == \"\" ? user.EmployeeId : getUrlParameter(\"m\")] }, function () {\n      \n      this.getqueue();\n      this.UserList();\n      this.queueList();\n    }.bind(this));\n\n  }\n    if (this.schdular == null) {\n      this.schdular = setInterval(function () {\n        //if (!this.state.onBarge) {\n        //if ((new Date()).getHours() >= 21 || (new Date()).getHours() < 9) {\n        if (this.state.winactive == 1 || document.hasFocus()) {\n          //this.getqueue();\n          this.UserList();\n          this.totalList();\n          this.queueList();\n        }\n        // }\n        // else {\n        //   this.UserList();\n        //   this.totalList();\n        // }\n        //}\n      }.bind(this), 2500)\n\n      window.addEventListener(\"message\", function (event) {\n        if (event.data.type == \"checkactive\") {\n          this.setState({ winactive: event.data.winactive })\n          this.winactive = event.data.winactive;\n        }\n      }.bind(this));\n    }\n  \n  }\n\n  componentDidMount() {\n\n    const user = getuser();\n    this.setState({ SelectedSupervisors: [getUrlParameter(\"m\") == \"\" ? user.EmployeeId : getUrlParameter(\"m\")] }, function () {\n      \n      this.getqueue();\n      this.UserList();\n      this.queueList();\n    }.bind(this));\n\n  \n    if (this.schdular == null) {\n      this.schdular = setInterval(function () {\n        //if (!this.state.onBarge) {\n        //if ((new Date()).getHours() >= 21 || (new Date()).getHours() < 9) {\n        if (this.state.winactive == 1 || document.hasFocus()) {\n          //this.getqueue();\n          this.UserList();\n          this.totalList();\n          this.queueList();\n        }\n        // }\n        // else {\n        //   this.UserList();\n        //   this.totalList();\n        // }\n        //}\n      }.bind(this), 2500)\n\n      window.addEventListener(\"message\", function (event) {\n        if (event.data.type == \"checkactive\") {\n          this.setState({ winactive: event.data.winactive })\n          this.winactive = event.data.winactive;\n        }\n      }.bind(this));\n    }\n  \n  }\n\n  getHtmlListenMoreInfo(row){\n    return  (<span id={\"span_\" + row.row_num} onClick={(e) => this.CreateMoreInfoRecordingURL(e, row)}>\n      <i class=\"fa fa-play-circle listen\"></i>\n      </span>)\n  }\n\n  getHtmlListen(row){debugger;\n    //var diff = (new Date() - new Date(row.hanguptime)) / 1000;\n    var now = moment().format(\"YYYY-MM-DD HH:mm:ss\");\n    var then = moment.utc(new Date(row.hanguptime)).format(\"YYYY-MM-DD HH:mm:ss\");\n\n    //var then = moment(row.hanguptime).format(\"YYYY-MM-DD HH:mm:ss\");\n    var diff = (moment(now,\"YYYY-MM-DD HH:mm:ss\").diff(moment(then,\"YYYY-MM-DD HH:mm:ss\")))/ 1000;\n\n    //if (row.orig_callid == 0){\n    //  return <i class=\"fa fa-info-circle infotooltip\" data-toggle=\"tooltip\" title=\"Transferred Call- Recording available next day on AI Portal\" aria-hidden=\"true\"></i>\n    //}\n    if (row.call_type == 1 && diff < 600) {\n      return <i class=\"fa fa-info-circle infotooltip\" diff={diff} data-toggle=\"tooltip\" title=\"Transferred Call- Recording available after 10 minutes of Call\" aria-hidden=\"true\"></i>\n    }\n    else if(diff < 600){\n      return <i class=\"fa fa-info-circle infotooltip\" data-toggle=\"tooltip\" title=\"IB - Recording available after 10 minutes of Call\" aria-hidden=\"true\"></i>\n    }else{\n      return  (<span id={\"span_\" + row.row_num} onClick={(e) => this.CreateNCallersRecordingURL(e, row)}>\n      <i class=\"fa fa-play-circle listen\"></i>\n      </span>)\n    }\n  }\n\n  CreateMoreInfoRecordingURL(e, row){\n    var audio = document.getElementById('audio2');\n    var number = row.row_num;\n    if (audio.paused) {\n      document.getElementById('span_'+ number).innerHTML = '<i class=\"fa fa-spinner fa-spin\"></i>';\n      let userfield = row.userfield;\n      let dstchannel = row.dstchannel;\n      let date = moment(new Date(userfield)).format(\"DD-MM-YYYY\");\n      let hour = moment(new Date(userfield)).format(\"H\");\n      let datetime = moment(new Date(userfield)).format(\"YYYYMMDDHHmmss\");\n      let phoneNo = dstchannel.substring(dstchannel.indexOf(\"/\") + 1, dstchannel.indexOf(\"-\"));\n      let callid = row.callid;\n      console.log(date, hour, datetime, phoneNo, callid);\n      let recfilename = \"recording/\"+ date + \"/\" + hour + \"/\" + callid + \"-\" + datetime + \"-\" + phoneNo + \".wav\";\n      //let url = \"https://asterisk-log.s3.ap-south-1.amazonaws.com/recording/\" + date + \"/\" + hour + \"/\" + callid + \"-\" + datetime + \"-\" + phoneNo + \".wav\";\n  \n  \n      if (date == \"Invalid date\" || hour == \"Invalid date\" || datetime == \"Invalid date\" || phoneNo == null) {\n        document.getElementById('span_'+ number).innerHTML = 'No File Found';\n        return;\n      }\n      //debugger;\n          GetAwsRecordingUrl(recfilename, 'asterisk-log' ,function (results) {debugger;\n            //debugger;\n\n            console.log(\"results\", results);\n            if (results.data.status == 200) {\n              let url = results.data.data;\n              audio.src = results.data.data;\n              document.getElementById('span_'+ number).innerHTML = '<i class=\"fa fa-spinner fa-spin\"></i>';\n              GetFileExists(url, function (params) {\n                //debugger;\n                if (params && params.status && params.status != 404) {\n                  audio.onloadedmetadata = function() {\n                    console.log(audio.duration)\n                    //setTimeout(function () {\n                      audio.play();\n                      console.log(audio.duration);\n                      if(audio.paused == false && audio.duration > 0 && audio.duration != 'Infinity' && audio.duration != 'NaN'){\n                      document.getElementById('span_'+ number).innerHTML = '<i class=\"fa fa-stop-circle listen\"></i>';\n                     \n                      audio.onended = function() {\n                        document.getElementById('span_'+ number).innerHTML = '<i class=\"fa fa-play-circle listen\"></i>';\n                      };\n                     \n                      }else{\n                      document.getElementById('span_'+ number).innerHTML = 'No File Found'; \n                      }\n                   // }.bind(this), 500);\n                  };\n                } else {\n                  try {\n                    document.getElementById(\"span_\" + row.row_num).innerHTML = \"File not found\";\n                  } catch (e) {\n                    //console.log('error', e);        \n                  }\n                }\n              });\n            \n              \n            } else {\n              document.getElementById('span_'+ number).innerHTML = 'No File Found';\n            }\n          }.bind(this));\n       \n\n\n    } else {\n      //debugger;\n      audio.pause();\n      audio.currentTime = 0;\n      document.getElementById('span_'+ number).innerHTML = '<i class=\"fa fa-play-circle listen\"></i>';\n\n    }\n\n  }\n  CreateNCallersRecordingURL(e,row){\n    var audio = document.getElementById('audio1');\n    var number = row.row_num;\n    if (audio.paused) {\n\n      let calldataid = row.orig_callid;\n      this.state.AwsRecordingUrl = '';\n      document.getElementById('span_'+ number).innerHTML = '<i class=\"fa fa-spinner fa-spin\"></i>';\n      //debugger;\n      GetRecordingName(calldataid, function (results) {\n        //console.log(\"results\", results);   \n        var CheckFile = '';\n        var extension = '';\n        if(results.data.file_available == true){\n          extension = '.wav';\n          CheckFile = results.data.file_available;\n        }else{\n          extension = '-out.wav';\n          CheckFile = results.data.agent_file;\n        }\n\n        if (CheckFile == true) {\n          //this.setState({ RecordingName: results.data.record });\n          GetAwsRecordingUrl(results.data.record+extension, 'newcctecbuckt', function (results) {\n            //debugger;\n            console.log(\"results\", results);\n            if (results.data.status == 200) {\n              this.setState({ AwsRecordingUrl: results.data.data });\n              audio.src = results.data.data;\n              document.getElementById('span_'+ number).innerHTML = '<i class=\"fa fa-spinner fa-spin\"></i>';\n\n              audio.onloadedmetadata = function() {\n                console.log(audio.duration)\n                //setTimeout(function () {\n                  audio.play();\n                  console.log(audio.duration);\n                  if(audio.paused == false && audio.duration > 0 && audio.duration != 'Infinity' && audio.duration != 'NaN'){\n                  document.getElementById('span_'+ number).innerHTML = '<i class=\"fa fa-stop-circle listen\"></i>';\n                 \n                  audio.onended = function() {\n                    document.getElementById('span_'+ number).innerHTML = '<i class=\"fa fa-play-circle listen\"></i>';\n                  };\n                 \n                  }else{\n                  document.getElementById('span_'+ number).innerHTML = 'No File Found'; \n                  }\n               // }.bind(this), 500);\n              };\n              \n            } else {\n              document.getElementById('span_'+ number).innerHTML = 'No File Found';\n            }\n          }.bind(this));\n        } else {\n          document.getElementById('span_'+ number).innerHTML = 'No File Name Found';\n        }\n\n      }.bind(this));\n\n    } else {\n      //debugger;\n      audio.pause();\n      audio.currentTime = 0;\n      document.getElementById('span_'+ number).innerHTML = '<i class=\"fa fa-play-circle listen\"></i>';\n\n    }\n\n  }\n\n  // CreateRecordingURL(row) {debugger;\n\n  //   let userfield = row.userfield;\n  //   let dstchannel = row.dstchannel;\n  //   let date = moment(new Date(userfield)).format(\"DD-MM-YYYY\");\n  //   let hour = moment(new Date(userfield)).format(\"H\");\n  //   let datetime = moment(new Date(userfield)).format(\"YYYYMMDDHHmmss\");\n  //   let phoneNo = dstchannel.substring(dstchannel.indexOf(\"/\") + 1, dstchannel.indexOf(\"-\"));\n  //   let callid = row.callid;\n  //   console.log(date, hour, datetime, phoneNo, callid);\n  //   let recfilename = date + \"/\" + hour + \"/\" + callid + \"-\" + datetime + \"-\" + phoneNo + \".wav\";\n  //   //let url = \"https://asterisk-log.s3.ap-south-1.amazonaws.com/recording/\" + date + \"/\" + hour + \"/\" + callid + \"-\" + datetime + \"-\" + phoneNo + \".wav\";\n\n\n  //   if (date == \"Invalid date\" || hour == \"Invalid date\" || datetime == \"Invalid date\" || phoneNo == null) {\n  //     return <span>File not found</span>\n  //   }\n\n  //   GetAwsRecordingUrl(recfilename, function (results) {debugger;\n\n  //     console.log(\"results\", results);\n  //     if (results.data.status == 200) {\n  //       let url = results.data.data;  \n             \n  //     } else {\n  //       try {\n  //         document.getElementById(\"span_\" + row.row_num).innerHTML = \"File not found\";\n  //       } catch (e) {\n  //         //console.log('error', e);        \n  //       }}\n  //   }.bind(this));\n\n  // }\n\n  totalList() {\n    let context = getUrlParameter(\"c\");\n    if (context != \"\") {\n      GetRealTimeTotalData(context, function (results) {\n        this.setState({ TotalData: results.data });\n      }.bind(this));\n    }\n  }\n\n  queueList() {//debugger;\n    let queues = this.state.queues;\n    //console.log(\"queues\", queues);\n\n    var queuestring = queues.map(function (val) {\n      return val.queuename;\n    });\n\n    var serverip = queues.map(function (val) {\n      return val.server_ip;\n    });\n\n    //var contextName = this.state.contextName ?? queuestring[0];\n\n    //this.setState({ queueServerIp: serverip[0], contextName: contextName });\n    this.setState({ queueServerIp: serverip[0] });\n\n    GetRealTimeQueueData(queuestring.join(\",\"), function (results) {\n      //console.log(\"results\", results);\n      this.setState({ QueueData: results.data });\n    }.bind(this));\n  }\n  getqueue() {debugger;\n    // let type = getUrlParameter(\"type\") == \"\" ? \"sales\" : getUrlParameter(\"type\");\n    // let proid = getUrlParameter(\"product\") == \"\" ? \"1\" : getUrlParameter(\"product\");\n    let is_mobile = getUrlParameter(\"IsMobile\") == \"\" ? \"0\" : getUrlParameter(\"IsMobile\");\n    let is_claim = getUrlParameter(\"IsClaim\") == \"\" ? \"0\" : getUrlParameter(\"IsClaim\");\n    // let queues =  getUrlParameter(\"queues\");\n    let type = this.props.type == \"\" ? \"sales\" : this.props.type;\n    let proid = this.props.product == \"\" ? \"1\" : this.props.product;\n    let queues =  this.props.queues;\n\n    // this.props.GetMySqlData({\n    //   root: \"getqueue\",\n    //   ProductType: type,\n    //   ProductId: proid,\n    //   IsMobile: is_mobile,\n    //   IsClaim:  is_claim,\n    // });\n\n    this.props.GetMySqlData({\n      root: \"getqueuetwo\",\n      ProductType: type,\n      ProductId: proid,\n      IsMobile: is_mobile,\n      IsClaim:  is_claim,\n      queues:   queues,\n    }, function (result) {\n      //console.log(\"result\",result);\n      this.setState({ queues: result.data.data[0] });\n    }.bind(this));\n  }\n\n  UserList() {\n    let managerid = getUrlParameter(\"m\");\n    let context = this.state.contextName == null ? getUrlParameter(\"c\") : this.state.contextName;\n    if(context == 'breakinmotor'){\n      context = 'BreakinMotor';\n    }\n    // if(context == 'claimofflinemotorib'){\n    //   context = \"claimofflinemotornia,claimofflinemotorprivate,claimofflinemotoruiic,claimofflinemotornao\";\n    // }\n    // if(context == 'claimonlinemotorib'){\n    //   context = \"claimonlinemotordc,claimonlinemotorqc,claimonlinemotorpayment\";\n    // }\n    let queues = this.state.queues;\n    const filterContext = queues.filter( (queue)=> queue.queuename == context);\n    //console.log(filterContext);\n    let newContext = '';\n    if(filterContext.length > 0){\n      this.setState({ wraptime : filterContext[0].wraptime});\n      if(filterContext[0].isMaster == 1){\n        newContext=filterContext[0].child\n      }else{\n        newContext=filterContext[0].queuename\n      }\n    }\n\n    const user = getuser();\n    if (this.state.SelectedSupervisors.length > 0) {\n      managerid = this.state.SelectedSupervisors.join()\n    }\n\n    if (managerid == \"\" && context == \"\") {\n      managerid = user.EmployeeId;\n      this.setState({ SelectedSupervisors: [managerid] });\n    }\n    if (managerid || context){\n    GetRealTimeAgentData(managerid, newContext, function (results) {\n      this.setState({ AgentData: results.data });\n    }.bind(this));\n  }\n\n  }\n\n  handleShow(e) {\n    this.setState({ SelectedSupervisors: e.SelectedSupervisors });\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.schdular);\n    if (this.userAgent != null)\n      this.userAgent.hangup();\n  }\n\n  changeContext(e, row) {\n    this.setState({ contextName: row.context });\n  }\n\n  clickUnanswered(e, row) {\n    let queuename = row.context;\n    this.setState({clickedQueue : queuename});\n    this.props.GetMySqlData({\n      root: \"unanswered\",\n      queues: queuename,\n    }, function (result) {\n      ////debugger;\n      this.setState({ showModal: true, UnansweredData: result.data.data[0], ModalTitle: \"Unanswered Calls\" });\n    }.bind(this));\n\n  }\n  clickanswered(e, row) {\n    let queuename = row.context;\n    this.setState({clickedQueue : queuename});\n\n    this.props.GetMySqlData({\n      root: \"answered\",\n      queues: queuename,\n    }, function (result) {\n      ////debugger;\n      this.setState({ showModal: true, UnansweredData: result.data.data[0], ModalTitle: \"Answered Calls\" });\n    }.bind(this));\n\n  }\n\n  clickMoreinfo(e, row) {//debugger;\n    let uniqueid = row.callid;\n    let queues = this.state.queues;\n    let queue = this.state.clickedQueue;\n\n    const queueData = queues.find((item) => item.queuename.toLowerCase() === queue.toLowerCase());\n\n    // if (queue == 'breakinmotor'){\n    //   var queueServerIp = \"10.0.91.32\";\n    // }else{\n    var queueServerIp = queueData.server_ip;\n    // }\n\n    this.props.GetMySqlData({\n      root: \"moreinfo\",\n      uniqueid: uniqueid,\n      queueServerIp: queueServerIp,\n    }, function (result) {////debugger;\n      this.setState({ showMoreInfoModal: true, MoreInfoData: result.data.data[0] });\n    }.bind(this));\n\n  }\n\n  getLastUpdatedOn(row) {\n    if(this.state.wraptime && row.Status == \"IDLE\"){\n      let lastupdatetime = moment(row.LastUpdatedOn).format('YYYY-MM-DD HH:mm:ss');\n      let currentTime = moment(row.ServerTime).format('YYYY-MM-DD HH:mm:ss');//moment().format(\"YYYY-MM-DD HH:mm:ss\");\n      var diff = (moment(currentTime,\"YYYY-MM-DD HH:mm:ss\").diff(moment(lastupdatetime,\"YYYY-MM-DD HH:mm:ss\")))/ 1000;\n\n      if(diff > this.state.wraptime){\n        let lastsincetime =  moment(row.LastUpdatedOn).add(this.state.wraptime, 'seconds').format('YYYY-MM-DD HH:mm:ss');\n        console.log('agent',row.AgentCode,'since',lastsincetime,'currenttime',currentTime);\n        console.log('agent',row.AgentCode,moment(lastsincetime).fromNow());\n        return lastsincetime;\n      }else{\n        return row.LastUpdatedOn;\n      }\n\n    }else{\n      return row.LastUpdatedOn;\n    }\n\n  }\n\n  displayStatus(row) {\n    // var diff = (new Date() - new Date(row.LastUpdatedOn)) / 1000;\n    // if (diff > 60 && row.Status == \"IDLE\") {\n    //   return \"Away\";\n    // } else return row.Status;\n    let BargeWithAgent = this.state.BargeWithAgent;\n    if (BargeWithAgent && BargeWithAgent.AgentCode == row.AgentCode && row.Status != \"BUSY\") {\n\n      // if (this.userAgent) {\n      //   this.userAgent.hangup();\n      //   this.userAgent = null;        \n      // }\n      // this.setState({ onBarge: false, BargeWith: \"\" });\n      this.unbargecall();\n    }\n    else if (BargeWithAgent && BargeWithAgent.AgentCode == row.AgentCode && row.Status == \"BUSY\") {\n      // if (this.userAgent == null) {\n      //   this.bargecall(null, BargeWithAgent);\n      // }\n    }\n    console.log('wraptime',this.state.wraptime);\n    let status = row.Status;\n    if(this.state.wraptime && row.Status == \"IDLE\"){\n      let lastupdatetime = moment(row.LastUpdatedOn).format('YYYY-MM-DD HH:mm:ss');\n      let currentTime =  moment(row.ServerTime).format('YYYY-MM-DD HH:mm:ss');//moment().format(\"YYYY-MM-DD HH:mm:ss\");\n      var diff = (moment(currentTime,\"YYYY-MM-DD HH:mm:ss\").diff(moment(lastupdatetime,\"YYYY-MM-DD HH:mm:ss\")))/ 1000;\n\n      if(diff < this.state.wraptime){\n        console.log('agent',row.AgentCode,'lastupdatetime',lastupdatetime,'currenttime',currentTime,'diff',diff);\n        status = \"OnWrap\";\n      }else{\n        status = row.Status;\n      }\n\n    }\n    return status.toUpperCase()\n  }\n\n  unbargecall(e) {\n    if (this.userAgent) {\n      this.userAgent.hangup();\n      this.userAgent = null;\n    }\n    this.setState({ onBarge: false, BargeWith: \"\", BargeWithAgent: null });\n  }\n\n\n  bargecall(e, row) {\n    try {\n      if (this.userAgent) {\n        this.userAgent.hangup();\n        this.userAgent = null\n      }\n      //if (!this.state.onBarge) {\n\n      let user = {\n        Display: getuser().EmployeeId,\n        User: getuser().EmployeeId,\n        Pass: getuser().EmployeeId,\n        Realm: row.Asterisk_Url,\n        WSServer: \"wss://\" + row.Asterisk_Url + \":8089/ws\"\n      }\n      this.LoginAsteriskServer(user, function () {\n        setTimeout(function () {\n\n          if (this.userAgent) {\n            let target = \"*222\" + row.AgentCode;\n            if (row.DIDNo) {\n              target = \"*222\" + row.DIDNo;\n            }\n\n            this.userAgent.call(target);\n          }\n          this.setState({ onBarge: true, BargeWith: row.AgentCode, BargeWithAgent: row });\n\n          // setTimeout(function () {\n          //   //this.forceUpdate();\n\n          // }.bind(this), 500);\n\n        }.bind(this), 1000);\n      }.bind(this), function () {\n        document.getElementById(row.AgentCode).checked = false;\n      }.bind(this));\n\n      // }\n      // else {\n      //   toast(\"Close previous call barging\", { type: 'error' });\n      //   e.target.checked = false;\n      //   return false;\n      // }\n\n\n    } catch (e) {\n\n    }\n\n  }\n\n  LoginAsteriskServer(user, onsuccess, onerror) {\n\n    if (user) {\n      var config = {\n        media: {\n          remote: {\n            //video: document.getElementById('remoteVideo'),\n            // This is necessary to do an audio/video call as opposed to just a video call\n            audio: document.getElementById('audioRemote')\n          }\n        },\n        ua: {\n          uri: user.User + '@' + user.Realm,\n          wsServers: [user.WSServer],\n          authorizationUser: user.Display,\n          password: user.Pass\n        }\n      }\n\n      if (Web) {\n        this.userAgent = new Web.Simple(config);\n\n        //let remoteElem = document.getElementById('audioRemote');\n        //let localElem = document.getElementById('audioLocal');\n        this.userAgent.on('connected', function (e) {\n          toast(\"Barging Connected!\", { type: 'success' });\n        });\n        this.userAgent.on('disconnected', function (e) {\n\n        });\n        this.userAgent.on('registered', function (e) {\n          if (onsuccess) {\n            onsuccess();\n          }\n\n        });\n        this.userAgent.on('registrationFailed', function (e) {\n          toast(\"Make sure your VPN is connected!\", { type: 'error' });\n        });\n        this.userAgent.on('unregistered', function (e) {\n          toast(\"Dialer issue please contact administrator!\", { type: 'error' });\n          if (onerror) {\n            onerror();\n          }\n\n        });\n        this.userAgent.on('userMediaFailed', function (e) {\n\n        });\n        this.userAgent.on('userMediaRequest', function (e) {\n\n        });\n        this.userAgent.on('userMedia', function (e) {\n\n        });\n        this.userAgent.on('invite', function (e) {\n\n        });\n        this.userAgent.on('addStream', function (stream) {\n\n        });\n        this.userAgent.on('ended', function (stream) {\n\n        });\n      }\n    }\n\n    setTimeout(function () {\n      if (this.userAgent && this.userAgent.ua && this.userAgent.ua.isRegistered() == false) {\n        toast(\"Make sure your VPN is connected!\", { type: 'error' });\n      }\n    }.bind(this), 10000);\n    return this.userAgent;\n  }\n  // componentWillReceiveProps(nextProps) {\n  //   if (!nextProps.CommonData.isError) {\n  //     //this.setState({ queues: nextProps.CommonData[\"getqueue\"] });\n  //     //this.setState({ UnansweredData: nextProps.CommonData[\"unanswered\"] });\n  //   }\n  // }\n\n  play(number) {\n    var audio = document.getElementById('audio_' + number);\n    var icon = document.getElementById(\"play\" + number);\n    if (audio.paused) {\n      audio.play();\n      icon.classList.remove(\"fa-play-circle\");\n      icon.classList.add(\"fa-stop-circle\");\n      this.CheckAudioFinishedPlay(audio, icon);\n     \n    } else {\n      audio.pause();\n      audio.currentTime = 0\n      icon.classList.remove(\"fa-stop-circle\");\n      icon.classList.add(\"fa-play-circle\");\n    }\n  }\n\n  CheckAudioFinishedPlay(audio, icon){//debugger;\n    audio.onended = function() {\n      icon.classList.remove(\"fa-stop-circle\");\n      icon.classList.add(\"fa-play-circle\");\n     };\n  }\n\n  statuschange(e) {\n    this.setState({ key: e.target.value });\n  }\n\n  filterdata(e) {\n\n    let alldata = this.state.AgentData\n    let that = this;\n    if (this.state.key === \"ALL\") {\n      return alldata;\n    }\n    if (this.state.key === \"Away\") {\n      let AgentData = [];\n      alldata.forEach(element => {\n        var diff = (new Date() - new Date(element.LastUpdatedOn)) / 1000;\n        if (diff > 60 && element.Status === \"IDLE\") {\n          AgentData.push(element);\n        }\n      });\n      return AgentData;\n    }\n\n    let AgentData = [];\n    alldata.forEach(element => {\n      if (this.state.key.indexOf(element.Status) > -1) {\n        AgentData.push(element);\n      }\n    });\n    return AgentData;\n  }\n  _handleKeyDown(e) {\n\n    if (e.key === 'Enter') {\n      this.setState({ SelectedSupervisors: [e.target.value] });\n    }\n  }\n\n  _handleOnClick(e) {\n\n\n    this.setState({ SelectedSupervisors: [document.getElementById(\"EmpId\").value] });\n\n  }\n\n  renderTotalData() {\n\n\n    let tr = [];\n    let QueueData = this.state.QueueData;\n    //console.log('..............................',QueueData);\n    if (QueueData && QueueData.length > 0) {\n\n      QueueData.forEach(element => {\n        tr.push(<tr className={this.state.contextName == element.context ? \"active\" : \"\"}>\n          <td>{<a onClick={(e) => this.changeContext(e, element)} data-myattribute=\"check\" className=\"abutton clickMe\">{element.context}</a>}</td>\n          {/* <td>{element.answered}</td> */}\n          <td>{<a onClick={(e) => this.clickanswered(e, element)} className=\"abutton\">{element.answered}</a>}</td>\n          <td>{<a onClick={(e) => this.clickUnanswered(e, element)} className=\"abutton\">{element.unanswered}</a>}</td>\n          <td className={element.waitingibcalls > 0 ? \"waiting_call_gt0\" : \"\"}>{element.waitingibcalls}</td>\n          <td className={element.waitingctccalls > 0 ? \"waiting_call_gt0\" : \"\"}>{element.waitingctccalls}</td>\n          <td className={element.waitingassignedcalls > 0 ? \"waiting_call_gt0\" : \"\"}>{element.waitingassignedcalls}</td>\n          <td>{element.totalcalls}</td>\n        </tr>)\n      });\n      return <Table responsive>\n        <thead className=\"text-primary\">\n          <tr>\n            <th>context</th>\n            <th>answered</th>\n            <th>unanswered</th>\n            <th>waitingibcalls</th>\n            <th>waitingctccalls</th>\n            <th>waitingassignedcalls</th>\n            <th>totalcalls</th>\n          </tr>\n        </thead>\n        <tbody>\n          {tr}\n        </tbody>\n      </Table>\n    }\n    else {\n      return null;\n    }\n  }\n\n\n  render() {\n    const columns = this.columnlist;\n\n    const unansweredcolumns = this.unansweredlist;\n    const moreinfocolumns = this.moreinfolist;\n\n    const totalcolumns = this.totalcolumnlist;\n    const data = this.filterdata();\n    const managerid = getUrlParameter(\"m\");\n    const context = getUrlParameter(\"c\");\n\n    const { PageTitle, UnansweredData, MoreInfoData } = this.state;\n\n    return (\n      <>\n        <div className=\"content\">\n          <ToastContainer />\n          <Row>\n            <Col md=\"12\">\n              <Card>\n                <CardHeader>\n                  <Row>\n                    <Col md={3}>\n                      <CardTitle tag=\"h4\">Queues</CardTitle>\n                    </Col>\n                    <Col md={9}>\n\n                    </Col>\n                  </Row>\n\n                </CardHeader>\n\n                <CardBody>\n                  <div className=\"queuetable\">\n                    {this.renderTotalData()}\n                  </div>\n                </CardBody>\n\n              </Card>\n\n\n\n\n            </Col>\n\n          </Row>\n          <Row>\n            <Col md=\"12\">\n              <Card>\n                <CardHeader>\n\n                  <Row>\n                    <Col md={3}>\n                      <CardTitle tag=\"h4\">{PageTitle}</CardTitle>\n                    </Col>\n                    <Col md={4}>\n                      <div>\n                      Queue Name : {this.state.contextName}\n                      </div>\n                    </Col>\n                    \n                    <Col md={3}>\n                      <div className=\"input-group hide\">\n\n                        <Form.Control required type=\"text\" name=\"EmpId\" id=\"EmpId\" onKeyDown={this._handleKeyDown} onChange={(e) => this.setState({ username: e.target.value })} value={this.state.username} placeholder={\"Enter Supervisor Id\"} />\n                        <div className=\"input-group-append\">\n                          <button onClick={(e) => this._handleOnClick(e)} className=\"btn btn-primary input-group-button\"><i className=\"fa fa-search\" aria-hidden=\"true\"></i></button>\n\n                        </div>\n                      </div>\n                    </Col>\n                    <Col md={2}>\n                      <div className=\"form-group \">\n                        <select className=\"form-control\" onChange={this.statuschange}>\n                          <option value=\"ALL\">ALL</option>\n                          <option value=\"IDLE\">IDLE</option>\n                          <option value=\"Away\">Away</option>\n                          <option value=\"BUSY\">BUSY</option>\n                          <option value=\"Lunch,Tea,Training,Meeting,Day End\">Break</option>\n                          <option value=\"PAUSE\">PAUSE</option>\n                          <option value=\"Auto Logout,LOGOUT\">LOGOUT</option>\n                        </select>\n                      </div>\n                      {\n                        (managerid == '' && context == ' ') ? <ManagerHierarchy handleShow={this.handleShow} value={/EmployeeId/g} ></ManagerHierarchy> : null\n                      }\n                      <button id=\"BargeWith\" onClick={(e) => this.unbargecall(e)} className={this.state.BargeWith == \"\" ? \"hide\" : \"btn btn-primary hangupwith show\"} ><i className=\"fa fa-volume-off\" aria-hidden=\"true\"></i> Hang Up With: {this.state.BargeWith}</button>\n                    </Col>\n\n                  </Row>\n\n                </CardHeader>\n\n                <CardBody>\n                  {/* {this.renderTotalData()} */}\n\n                  <div className=\"statusdata\">\n                    <DataTable\n                      columns={columns}\n                      data={data}\n                      pagination={false}\n                      striped={true}\n                      noHeader={true}\n                      highlightOnHover\n                      dense\n\n                    />\n\n                  </div>\n                </CardBody>\n\n              </Card>\n            </Col>\n            <audio id=\"audioRemote\"></audio>\n            <audio id=\"audioLocal\"></audio>\n\n          </Row>\n          <audio src=\"\" id={\"audio1\"}></audio>\n          <audio src=\"\" id={\"audio2\"}></audio>\n\n          <Modal show={this.state.showModal} onHide={() => this.setState({ showModal: false })} dialogClassName=\"modal-70w\">\n            <Modal.Header closeButton>\n              <Modal.Title>{this.state.ModalTitle}</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n              <div className=\"modaldata\">\n                <DataTable\n                  columns={unansweredcolumns}\n                  data={(UnansweredData && UnansweredData.length > 0) ? UnansweredData : []}\n                  pagination={false}\n                  striped={true}\n                  noHeader={true}\n                  highlightOnHover\n                  dense\n                  pagination={true}\n                />\n              </div>\n            </Modal.Body>\n            <Modal.Footer>\n\n            </Modal.Footer>\n          </Modal>\n          <Modal show={this.state.showMoreInfoModal} onHide={() => this.setState({ showMoreInfoModal: false })} dialogClassName=\"modal-90w\">\n            <Modal.Header closeButton>\n              <Modal.Title></Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n              <div className=\"modalmoreinfodata\">\n                <DataTable\n                  columns={moreinfocolumns}\n                  data={(MoreInfoData && MoreInfoData.length > 0) ? MoreInfoData : []}\n                  pagination={false}\n                  striped={true}\n                  noHeader={true}\n                  highlightOnHover\n                  dense\n\n                />\n              </div>\n            </Modal.Body>\n            <Modal.Footer>\n\n            </Modal.Footer>\n          </Modal>\n        </div>\n      </>\n    );\n  }\n}\n\n\nfunction mapStateToProps(state) {\n  return {\n    CommonData: state.CommonData\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  {\n    GetCommonData,\n    GetCommonspData,\n    GetMySqlData\n  }\n)(RealTimePanelQueuewise);\n\n\n\n\n"],"sourceRoot":""}