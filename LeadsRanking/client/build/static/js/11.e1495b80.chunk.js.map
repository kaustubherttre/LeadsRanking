{"version":3,"sources":["store/actions/CommonMysqlAction.jsx","views/Common/ManagerHierarchy.jsx","views/RealTimePanel/RealTimePanelQueuewiseTwo.jsx"],"names":["GetCommonData_fetched","Todos","dataToSend","state","statename","localStorage","setItem","JSON","stringify","data","type","constants","GET_COMMON_SUCCESS","payload","root","GetCommonData_fetch_error","error","GET_COMMON_FAIL","GetMySqlData","cb","undefined","dispatch","getState","getItem","parse","e","axios","get","config","api","base_url","params","then","catch","InsertData","post","INSERT_COMMON_SUCCESS","INSERT_COMMON_FAIL","InsertData_fetch_error","UpdateData","UPDATE_COMMON_SUCCESS","UPDATE_COMMON_FAIL","UpdateData_fetch_error","GetDataDirect","ManagerHierarchy","props","nodes","checked","expanded","UserId","getuser","RoleId","UserID","ManagerId","value","this","result","res","replace","setState","bind","nextProps","handleShow","SelectedSupervisors","forceUpdate","document","getElementById","style","right","setTimeout","checkeditem","index","indexOf","splice","length","id","className","onMouseLeave","onMouseOut","md","onClick","onMouseEnter","onButtonClick","checkModel","name","showNodeIcon","onCheck","onExpand","showExpandAll","React","Component","RealTimePanelQueuewise","PageTitle","AgentData","TotalData","items","key","onBarge","winactive","BargeWith","queues","QueueData","MoreInfoData","contextName","showModal","showMoreInfoModal","addClass","queueServerIp","clickedQueue","wraptime","wrapcomplete","statuschange","_handleKeyDown","userAgent","schdular","unansweredlist","selector","cell","row","calltime","format","utc","ModalTitle","entertime","width","mainqueueentertime","getHtmlListen","clickMoreinfo","moreinfolist","calldate","custom_disposition","getHtmlListenMoreInfo","columnlist","sortable","Status","bargecall","Barge","aria-hidden","displayStatus","AgentCode","LastUpdatedOn","fromNow","getLastUpdatedOn","hhmmss","TotalTalkTime","user","getUrlParameter","EmployeeId","getqueue","UserList","queueList","setInterval","hasFocus","totalList","window","addEventListener","event","row_num","CreateMoreInfoRecordingURL","class","now","moment","Date","hanguptime","diff","call_type","data-toggle","title","CreateNCallersRecordingURL","audio","number","paused","innerHTML","userfield","dstchannel","date","hour","datetime","phoneNo","substring","callid","console","log","recfilename","GetAwsRecordingUrl","results","status","url","src","GetFileExists","onloadedmetadata","duration","play","onended","pause","currentTime","calldataid","orig_callid","AwsRecordingUrl","GetRecordingName","CheckFile","extension","file_available","agent_file","record","context","GetRealTimeTotalData","queuestring","map","val","queuename","serverip","server_ip","GetRealTimeQueueData","join","is_mobile","is_claim","proid","product","ProductType","ProductId","IsMobile","IsClaim","managerid","filterContext","filter","queue","newContext","isMaster","child","GetRealTimeAgentData","clearInterval","hangup","UnansweredData","uniqueid","find","item","toLowerCase","lastupdatetime","ServerTime","lastsincetime","add","BargeWithAgent","unbargecall","toUpperCase","Display","User","Pass","Realm","Asterisk_Url","WSServer","LoginAsteriskServer","target","DIDNo","call","onsuccess","onerror","media","remote","ua","uri","wsServers","authorizationUser","password","Web","Simple","on","toast","stream","isRegistered","icon","classList","remove","CheckAudioFinishedPlay","alldata","forEach","element","push","tr","changeContext","data-myattribute","clickanswered","answered","clickUnanswered","unanswered","waitingibcalls","waitingctccalls","waitingassignedcalls","totalcalls","responsive","columns","unansweredcolumns","moreinfocolumns","totalcolumnlist","filterdata","tag","renderTotalData","Control","required","onKeyDown","onChange","username","placeholder","_handleOnClick","pagination","striped","noHeader","highlightOnHover","dense","show","onHide","dialogClassName","Header","closeButton","Title","Body","Footer","connect","CommonData","GetCommonData","GetCommonspData"],"mappings":"uHAAA,0KAIMA,EAAwB,SAAAC,GAM5B,OAJIA,EAAMC,WAAWC,OAASF,EAAMC,WAAWE,WAC7CC,aAAaC,QAAQL,EAAMC,WAAWE,UAAWG,KAAKC,UAAUP,EAAMQ,OAGjE,CACLC,KAAMC,IAAUC,mBAChBC,QAASZ,EAAMQ,KACfK,KAAMb,EAAMC,WAAWY,OAIrBC,EAA4B,SAAAC,GAChC,MAAO,CACLN,KAAMC,IAAUM,gBAChBJ,QAASG,IAIAE,EAAe,SAAChB,EAAWiB,GAEtC,GAAuB,MAAnBjB,EAAWO,WAAmCW,GAAnBlB,EAAWO,KACxC,OAAO,SAAUY,EAAUC,GACzBD,EAASrB,EAAsB,CAAES,KAAMP,EAAWO,KAAMP,WAAYA,MAGxE,IACE,GAAKA,EAAWC,OAASE,aAAakB,QAAQrB,EAAWE,YAAeC,aAAakB,QAAQrB,EAAWE,WAEtG,OAAO,SAAUiB,EAAUC,GACzB,IAAIb,EAAOF,KAAKiB,MAAMnB,aAAakB,QAAQrB,EAAWE,YACtDiB,EAASrB,EAAsB,CAAES,KAAMA,EAAMP,WAAYA,MAI/D,MAAOuB,IAKP,OAAO,SAAUJ,EAAUC,GACzBI,IACGC,IAAIC,IAAOC,IAAIC,SAAW,cAAe,CACxCC,OAAQ7B,IAET8B,MAAK,SAAAvB,GACAP,EAAWC,OAASD,EAAWE,WACjCC,aAAaC,QAAQJ,EAAWE,UAAWG,KAAKC,UAAUC,EAAKA,KAAKA,OAElEU,GACFA,EAAGV,GAELY,EAASrB,EAAsB,CAAES,KAAMA,EAAKA,KAAKA,KAAK,GAAIP,WAAYA,QAEvE+B,OAAM,SAAAjB,GACLK,EAASN,EAA0BC,SAuB9BkB,EAAa,SAAChC,EAAYiB,GACrC,OAAO,SAAUE,EAAUC,GACzBI,IACGS,KAAKP,IAAOC,IAAIC,SAAW,gBAAiB,CAC3CrB,KAAMP,IAEP8B,MAAK,SAAAvB,GArBe,IAAAR,EAsBfkB,GACFA,EAAGV,GAELY,GAzBmBpB,EAyBS,CAAEQ,KAAMA,EAAKA,MAvBxC,CACLC,KAAMC,IAAUyB,sBAChBvB,QAASZ,EAAMQ,WAuBZwB,OAAM,SAAAjB,GACLK,EApBuB,SAAAL,GAC7B,MAAO,CACLN,KAAMC,IAAU0B,mBAChBxB,QAASG,GAiBIsB,CAAuBtB,SAqB3BuB,EAAa,SAACrC,EAAYiB,GAErC,OAAO,SAAUE,EAAUC,GACzBI,IACGS,KAAKP,IAAOC,IAAIC,SAAW,gBAAiB,CAC3CrB,KAAMP,IAEP8B,MAAK,SAAAvB,GAtBe,IAAAR,EAuBfkB,GACFA,EAAGV,GAELY,GA1BmBpB,EA0BS,CAAEQ,KAAMA,EAAKA,MAxBxC,CACLC,KAAMC,IAAU6B,sBAChB3B,QAASZ,EAAMQ,WAwBZwB,OAAM,SAAAjB,GACLK,EArBuB,SAAAL,GAC7B,MAAO,CACLN,KAAMC,IAAU8B,mBAChB5B,QAASG,GAkBI0B,CAAuB1B,SAQ3B2B,EAAgB,SAACzC,EAAYiB,GAExC,IACE,GAAKjB,EAAWC,OAASE,aAAakB,QAAQrB,EAAWE,YAAeC,aAAakB,QAAQrB,EAAWE,WAAY,CAElH,IAAIK,EAAOF,KAAKiB,MAAMnB,aAAakB,QAAQrB,EAAWE,YAEtD,YADAe,EAAGV,IAIP,MAAOgB,IAIPC,IACGC,IAAIC,IAAOC,IAAIC,SAAW,cAAe,CACxCC,OAAQ7B,IAET8B,MAAK,SAAAvB,GACAP,EAAWC,OAASD,EAAWE,WACjCC,aAAaC,QAAQJ,EAAWE,UAAWG,KAAKC,UAAUC,EAAKA,KAAKA,OAEtEU,EAAGV,EAAKA,KAAKA,SAIdwB,OAAM,SAAAjB,S,mJCvJL4B,E,kDACF,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IACD1C,MAAQ,CACT2C,MAAO,GACPC,QAAS,GACTC,SAAU,IALC,E,qDASnB,WAEI,IAAIC,EAA6B,GAApBC,cAAUC,OAAc,GAAKD,cAAUE,OAEpDT,YAAc,CACV7B,KAAM,YACNuC,UAAWJ,EACX7C,UAAW,aAAe6C,EAC1BK,MAAOC,KAAKV,MAAMS,MAClBnD,OAAO,GACR,SAAUqD,GAET,IACIC,EADMlD,KAAKC,UAAUgD,GACXE,QAAQ,YAAa,SACnCD,EAAMA,EAAIC,QAAQH,KAAKV,MAAMS,MAAO,SAEpCC,KAAKI,SAAS,CAAEb,MAAOvC,KAAKiB,MAAMiC,MACpCG,KAAKL,S,uCAEX,SAA0BM,M,2BAK1B,WACIN,KAAKV,MAAMiB,WAAW,CAClBC,oBAAqBR,KAAKpD,MAAM4C,UAEpCQ,KAAKS,gB,0BAET,SAAavC,GACTwC,SAASC,eAAe,YAAYC,MAAMC,MAAQ,EAClDH,SAASC,eAAe,UAAUC,MAAMC,MAAQ,U,wBAGpD,SAAW3C,GACP4C,YAAW,WACPJ,SAASC,eAAe,YAAYC,MAAMC,MAAQ,SAClDH,SAASC,eAAe,UAAUC,MAAMC,MAAQ,UACjD,O,2BAIP,SAAcE,GACV,IAAQvB,EAAYQ,KAAKpD,MAAjB4C,QACJwB,EAAQxB,EAAQyB,QAAQF,GACxBC,GAAS,GACTxB,EAAQ0B,OAAOF,EAAO,GAE1BhB,KAAKI,SAASZ,K,qBAElB,c,oBAGA,WAAU,IAAD,OACL,EAA2BQ,KAAKpD,MAAxB2C,EAAR,EAAQA,MAAR,EAAeC,QACf,OAAoB,GAAhBD,EAAM4B,OACC,KAKP,yBAAKC,GAAG,WAAWC,UAAU,WAAWC,aAActB,KAAKuB,YAEvD,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAKC,GAAG,KAAI,yBAAKJ,GAAG,SAASC,UAAU,SAASI,QAASzB,KAAK0B,cAAlD,WACZ,kBAAC,IAAD,CAAKF,GAAG,KAAI,2BAAOrE,KAAK,SAASkE,UAAU,kBAAkBI,QAASzB,KAAK2B,cAActB,KAAKL,MAAOD,MAAM,WAG/G,kBAAC,IAAD,KACI,kBAAC,IAAD,KAEI,yBAAKsB,UAAU,YACX,kBAAC,IAAD,CACI9B,MAAOA,EACPC,QAASQ,KAAKpD,MAAM4C,QACpBC,SAAUO,KAAKpD,MAAM6C,SACrBmC,WAAW,MACXC,KAAK,WACLC,cAAc,EACdC,QAAS,SAAAvC,GAAO,OAAI,EAAKY,SAAS,CAAEZ,aACpCwC,SAAU,SAAAvC,GAAQ,OAAI,EAAKW,SAAS,CAAEX,cACtCwC,eAAe,Y,GA5FhBC,IAAMC,WA0GtB9C,O,yTC1FT+C,G,yDACJ,WAAY9C,GAAQ,IAAD,8BACjB,cAAMA,IACD1C,MAAQ,CACXyF,UAAW,iBACXC,UAAW,GACXC,UAAW,GACXC,MAAO,GACPC,IAAK,MACLC,SAAS,EACTlC,oBAAqB,GACrBmC,UAAW,EACXC,UAAW,GACXC,OAAQ,GACRC,UAAW,GACXC,aAAc,GACdC,YAAa,KACbC,WAAW,EACXC,mBAAmB,EACnBC,SAAU,oBACVC,cAAe,GACfC,aAAe,GACfC,SAAU,GACVC,cAAc,GAEhB,EAAKhD,WAAa,EAAKA,WAAWF,KAAhB,gBAClB,EAAKmD,aAAe,EAAKA,aAAanD,KAAlB,gBACpB,EAAKoD,eAAiB,EAAKA,eAAepD,KAApB,gBAEtB,EAAKqD,UAAY,KACjB,EAAKf,UAAY,EACjB,EAAKgB,SAAW,KAEhB,EAAKC,eAAiB,CACpB,CAAE/B,KAAM,SAAUgC,SAAU,UAC5B,CAAEhC,KAAM,SAAUgC,SAAU,UAC5B,CAAEhC,KAAM,WAAYiC,KAAM,SAAAC,GAAG,OAAI,yBAAK1C,UAAU,YAAY0C,EAAIC,SAAW,kBAAC,IAAD,CAAQC,OAAO,sBAAsBC,KAAK,GAAOH,EAAIC,UAAqB,SACrJ,CAAEnC,KAAM,SAAUiC,KAAM,SAAAC,GAAG,OAAI,yBAAK1C,UAAU,WAAW,EAAKzE,MAAMuH,WAAWlD,QAAQ,eAAiB,EAAI,UAAY,cACxH,CAAEY,KAAM,eAAgBgC,SAAU,YAClC,CAAEhC,KAAM,YAAaiC,KAAM,SAAAC,GAAG,OAAI,yBAAK1C,UAAU,YAAY0C,EAAIK,UAAY,kBAAC,IAAD,CAAQH,OAAO,sBAAsBC,KAAK,GAAOH,EAAIK,WAAsB,QACvJC,MAAO,SAER,CAAExC,KAAM,uBAAwBiC,KAAM,SAAAC,GAAG,OAAI,yBAAK1C,UAAU,YAAY0C,EAAIO,mBAAqB,kBAAC,IAAD,CAAQL,OAAO,sBAAsBC,KAAK,GAAOH,EAAIO,oBAA+B,QACrLD,MAAO,SAEP,CAAExC,KAAM,WAAYgC,SAAU,WAC9B,CAAEhC,KAAM,YAAagC,SAAU,aAC/B,CACEhC,KAAM,SAAUiC,KAAM,SAAAC,GAAG,OACzB,yBAAK1C,UAAU,qBACV,EAAKkD,cAAcR,MAG1B,CACElC,KAAM,YAAaiC,KAAM,SAAAC,GAAG,OAAI,yBAAK1C,UAAU,YAAW,uBAAGI,QAAS,SAACvD,GAAD,OAAO,EAAKsG,cAActG,EAAG6F,IAAM1C,UAAU,eACjH,uBAAGA,UAAU,mBAInB,EAAKoD,aAAe,CAClB,CAAE5C,KAAM,SAAUgC,SAAU,UAC5B,CAAEhC,KAAM,SAAUgC,SAAU,UAC5B,CAAEhC,KAAM,WAAYiC,KAAM,SAAAC,GAAG,OAAI,yBAAK1C,UAAU,YAAY0C,EAAIW,SAAW,kBAAC,IAAD,CAAQR,KAAK,EAAMD,OAAO,uBAAuBF,EAAIW,UAAqB,SACrJ,CAAE7C,KAAM,UAAWgC,SAAU,WAC7B,CAAEhC,KAAM,UAAWgC,SAAU,WAC7B,CAAEhC,KAAM,kBAAmBgC,SAAU,mBACrC,CAAEhC,KAAM,WAAYgC,SAAU,YAC9B,CAAEhC,KAAM,cAENiC,KAAM,SAAAC,GAAG,OAAI,EAAKnH,MAAMuH,WAAWlD,QAAQ,eAAiB,GAAgC,aAA3B8C,EAAIY,mBAAoC,YAAcZ,EAAIY,qBAE7H,CACE9C,KAAM,SAAUiC,KAAM,SAAAC,GAAG,MAAI,CAAC,WAAW,UAAU9C,QAAQ8C,EAAIY,qBAAuB,EAAG,gBACzF,yBAAKtD,UAAU,UACV,EAAKuD,sBAAsBb,OAUpC,EAAKc,WAAa,CAChB,CACEhD,KAAM,UACNgC,SAAU,UACViB,UAAU,EACVT,MAAO,OACPP,KAAM,SAAAC,GAAG,OACP,yBAAK1C,UAAyB,QAAd0C,EAAIgB,OAAmB,GAAK,QAC1C,4BAAQtD,QAAS,SAACvD,GAAD,OAAO,EAAK8G,UAAU9G,EAAG6F,IAAM1C,UAAW0C,EAAIkB,MAAQ,OAAS,QAAQ,uBAAG5D,UAAU,kBAAkB6D,cAAY,aAGzI,CACErD,KAAM,aACNgC,SAAU,YAEViB,UAAU,GAEZ,CACEjD,KAAM,SACNgC,SAAU,SACViB,UAAU,EAEVhB,KAAM,SAAAC,GAAG,OAAI,yBAAK1C,UAAW,EAAK8D,cAAcpB,GAAO,mBAAoB,EAAKoB,cAAcpB,MAEhG,CACElC,KAAM,aACNgC,SAAU,YACViB,UAAU,GAEZ,CACAjD,KAAM,UACNgC,SAAU,SACViB,UAAU,GAEV,CACEjD,KAAM,YACNgC,SAAU,YAEZ,CACEhC,KAAM,UACNgC,SAAU,SACViB,UAAU,GAEZ,CACEjD,KAAM,OACNgC,SAAU,iBAEViB,UAAU,GAEZ,CACEjD,KAAM,QACNgC,SAAU,QAEViB,UAAU,GAEZ,CACEjD,KAAM,eACNgC,SAAU,eACVQ,MAAO,QACPS,UAAU,GAUZ,CACEjD,KAAM,QACNgC,SAAU,gBACViB,UAAU,EACVT,MAAO,QACPP,KAAM,SAAAC,GAAG,OAAI,yBAAK1C,UAAW0C,EAAIqB,WAAYrB,EAAIsB,cAAgB,kBAAC,IAAD,CAAQC,SAAO,GAAE,EAAKC,iBAAiBxB,IAAiB,SAI3H,CACElC,KAAM,UACNgC,SAAU,aACVQ,MAAO,OACPS,UAAU,GAEZ,CACEjD,KAAM,UACNgC,SAAU,cACVQ,MAAO,OACPS,UAAU,GAEZ,CACEjD,KAAM,UACNgC,SAAU,iBACVQ,MAAO,OACPS,UAAU,GAEZ,CACEjD,KAAM,aACNgC,SAAU,gBACViB,UAAU,EACVT,MAAO,QACPP,KAAM,SAAAC,GAAG,OAAIyB,YAAOzB,EAAI0B,kBAxLX,E,6DAgMnB,SAA0BnF,GACxB,GAAKA,EAAUuC,QAAUvC,EAAUuC,QAAU7C,KAAKV,MAAMuD,OAAU,CAElE,IAAM6C,EAAO/F,cACbK,KAAKI,SAAS,CAAEI,oBAAqB,CAAyB,IAAxBmF,YAAgB,KAAaD,EAAKE,WAAaD,YAAgB,OAAS,WAE5G3F,KAAK6F,WACL7F,KAAK8F,WACL9F,KAAK+F,aACL1F,KAAKL,OAGc,MAAjBA,KAAK2D,WACP3D,KAAK2D,SAAWqC,YAAY,YAGE,GAAxBhG,KAAKpD,MAAM+F,WAAkBjC,SAASuF,cAExCjG,KAAK8F,WACL9F,KAAKkG,YACLlG,KAAK+F,cAQP1F,KAAKL,MAAO,MAEdmG,OAAOC,iBAAiB,UAAW,SAAUC,GACpB,eAAnBA,EAAMnJ,KAAKC,OACb6C,KAAKI,SAAS,CAAEuC,UAAW0D,EAAMnJ,KAAKyF,YACtC3C,KAAK2C,UAAY0D,EAAMnJ,KAAKyF,YAE9BtC,KAAKL,U,+BAKX,WAEE,IAAM0F,EAAO/F,cACbK,KAAKI,SAAS,CAAEI,oBAAqB,CAAyB,IAAxBmF,YAAgB,KAAaD,EAAKE,WAAaD,YAAgB,OAAS,WAE5G3F,KAAK6F,WACL7F,KAAK8F,WACL9F,KAAK+F,aACL1F,KAAKL,OAGc,MAAjBA,KAAK2D,WACP3D,KAAK2D,SAAWqC,YAAY,YAGE,GAAxBhG,KAAKpD,MAAM+F,WAAkBjC,SAASuF,cAExCjG,KAAK8F,WACL9F,KAAKkG,YACLlG,KAAK+F,cAQP1F,KAAKL,MAAO,MAEdmG,OAAOC,iBAAiB,UAAW,SAAUC,GACpB,eAAnBA,EAAMnJ,KAAKC,OACb6C,KAAKI,SAAS,CAAEuC,UAAW0D,EAAMnJ,KAAKyF,YACtC3C,KAAK2C,UAAY0D,EAAMnJ,KAAKyF,YAE9BtC,KAAKL,U,mCAKX,SAAsB+D,GAAK,IAAD,OACxB,OAAS,0BAAM3C,GAAI,QAAU2C,EAAIuC,QAAS7E,QAAS,SAACvD,GAAD,OAAO,EAAKqI,2BAA2BrI,EAAG6F,KAC3F,uBAAGyC,MAAM,gC,2BAIb,SAAczC,GAAK,IAAD,OAEZ0C,EAAMC,MAASzC,OAAO,uBACtBxF,EAAOiI,IAAOxC,IAAI,IAAIyC,KAAK5C,EAAI6C,aAAa3C,OAAO,uBAGnD4C,EAAQH,IAAOD,EAAI,uBAAuBI,KAAKH,IAAOjI,EAAK,wBAA0B,IAKzF,OAAqB,GAAjBsF,EAAI+C,WAAkBD,EAAO,IACxB,uBAAGL,MAAM,gCAAgCK,KAAMA,EAAME,cAAY,UAAUC,MAAM,iEAAiE9B,cAAY,SAE/J2B,EAAO,IACN,uBAAGL,MAAM,gCAAgCO,cAAY,UAAUC,MAAM,oDAAoD9B,cAAY,SAEnI,0BAAM9D,GAAI,QAAU2C,EAAIuC,QAAS7E,QAAS,SAACvD,GAAD,OAAO,EAAK+I,2BAA2B/I,EAAG6F,KAC7F,uBAAGyC,MAAM,gC,wCAKb,SAA2BtI,EAAG6F,GAC5B,IAAImD,EAAQxG,SAASC,eAAe,UAChCwG,EAASpD,EAAIuC,QACjB,GAAIY,EAAME,OAAQ,CAChB1G,SAASC,eAAe,QAASwG,GAAQE,UAAY,wCACrD,IAAIC,EAAYvD,EAAIuD,UAChBC,EAAaxD,EAAIwD,WACjBC,EAAOd,IAAO,IAAIC,KAAKW,IAAYrD,OAAO,cAC1CwD,EAAOf,IAAO,IAAIC,KAAKW,IAAYrD,OAAO,KAC1CyD,EAAWhB,IAAO,IAAIC,KAAKW,IAAYrD,OAAO,kBAC9C0D,EAAUJ,EAAWK,UAAUL,EAAWtG,QAAQ,KAAO,EAAGsG,EAAWtG,QAAQ,MAC/E4G,EAAS9D,EAAI8D,OACjBC,QAAQC,IAAIP,EAAMC,EAAMC,EAAUC,EAASE,GAC3C,IAAIG,EAAc,aAAcR,EAAO,IAAMC,EAAO,IAAMI,EAAS,IAAMH,EAAW,IAAMC,EAAU,OAIpG,GAAY,gBAARH,GAAkC,gBAARC,GAAsC,gBAAZC,GAAyC,MAAXC,EAEpF,YADAjH,SAASC,eAAe,QAASwG,GAAQE,UAAY,iBAInDY,YAAmBD,EAAa,eAAgB,SAAUE,GAIxD,GADAJ,QAAQC,IAAI,UAAWG,GACI,KAAvBA,EAAQhL,KAAKiL,OAAe,CAC9B,IAAIC,EAAMF,EAAQhL,KAAKA,KACvBgK,EAAMmB,IAAMH,EAAQhL,KAAKA,KACzBwD,SAASC,eAAe,QAASwG,GAAQE,UAAY,wCACrDiB,YAAcF,GAAK,SAAU5J,GAE3B,GAAIA,GAAUA,EAAO2J,QAA2B,KAAjB3J,EAAO2J,OACpCjB,EAAMqB,iBAAmB,WACvBT,QAAQC,IAAIb,EAAMsB,UAEhBtB,EAAMuB,OACNX,QAAQC,IAAIb,EAAMsB,UACC,GAAhBtB,EAAME,QAAmBF,EAAMsB,SAAW,GAAuB,YAAlBtB,EAAMsB,UAA4C,OAAlBtB,EAAMsB,UACxF9H,SAASC,eAAe,QAASwG,GAAQE,UAAY,2CAErDH,EAAMwB,QAAU,WACdhI,SAASC,eAAe,QAASwG,GAAQE,UAAY,6CAIvD3G,SAASC,eAAe,QAASwG,GAAQE,UAAY,sBAKzD,IACE3G,SAASC,eAAe,QAAUoD,EAAIuC,SAASe,UAAY,iBAC3D,MAAOnJ,aAQbwC,SAASC,eAAe,QAASwG,GAAQE,UAAY,iBAEvDhH,KAAKL,YAMXkH,EAAMyB,QACNzB,EAAM0B,YAAc,EACpBlI,SAASC,eAAe,QAASwG,GAAQE,UAAY,6C,wCAKzD,SAA2BnJ,EAAE6F,GAC3B,IAAImD,EAAQxG,SAASC,eAAe,UAChCwG,EAASpD,EAAIuC,QACjB,GAAIY,EAAME,OAAQ,CAEhB,IAAIyB,EAAa9E,EAAI+E,YACrB9I,KAAKpD,MAAMmM,gBAAkB,GAC7BrI,SAASC,eAAe,QAASwG,GAAQE,UAAY,wCAErD2B,YAAiBH,EAAY,SAAUX,GAErC,IAAIe,EAAY,GACZC,EAAY,GACkB,GAA/BhB,EAAQhL,KAAKiM,gBACdD,EAAY,OACZD,EAAYf,EAAQhL,KAAKiM,iBAEzBD,EAAY,WACZD,EAAYf,EAAQhL,KAAKkM,YAGV,GAAbH,EAEFhB,YAAmBC,EAAQhL,KAAKmM,OAAOH,EAAW,gBAAiB,SAAUhB,GAE3EJ,QAAQC,IAAI,UAAWG,GACI,KAAvBA,EAAQhL,KAAKiL,QACfnI,KAAKI,SAAS,CAAE2I,gBAAiBb,EAAQhL,KAAKA,OAC9CgK,EAAMmB,IAAMH,EAAQhL,KAAKA,KACzBwD,SAASC,eAAe,QAASwG,GAAQE,UAAY,wCAErDH,EAAMqB,iBAAmB,WACvBT,QAAQC,IAAIb,EAAMsB,UAEhBtB,EAAMuB,OACNX,QAAQC,IAAIb,EAAMsB,UACC,GAAhBtB,EAAME,QAAmBF,EAAMsB,SAAW,GAAuB,YAAlBtB,EAAMsB,UAA4C,OAAlBtB,EAAMsB,UACxF9H,SAASC,eAAe,QAASwG,GAAQE,UAAY,2CAErDH,EAAMwB,QAAU,WACdhI,SAASC,eAAe,QAASwG,GAAQE,UAAY,6CAIvD3G,SAASC,eAAe,QAASwG,GAAQE,UAAY,kBAMzD3G,SAASC,eAAe,QAASwG,GAAQE,UAAY,iBAEvDhH,KAAKL,OAEPU,SAASC,eAAe,QAASwG,GAAQE,UAAY,sBAGvDhH,KAAKL,YAIPkH,EAAMyB,QACNzB,EAAM0B,YAAc,EACpBlI,SAASC,eAAe,QAASwG,GAAQE,UAAY,6C,uBAwCzD,WACE,IAAIiC,EAAU3D,YAAgB,KACf,IAAX2D,GACFC,YAAqBD,EAAS,SAAUpB,GACtClI,KAAKI,SAAS,CAAEmC,UAAW2F,EAAQhL,QACnCmD,KAAKL,S,uBAIX,WACE,IAAI6C,EAAS7C,KAAKpD,MAAMiG,OAGpB2G,EAAc3G,EAAO4G,KAAI,SAAUC,GACrC,OAAOA,EAAIC,aAGTC,EAAW/G,EAAO4G,KAAI,SAAUC,GAClC,OAAOA,EAAIG,aAMb7J,KAAKI,SAAS,CAAEgD,cAAewG,EAAS,KAExCE,YAAqBN,EAAYO,KAAK,KAAM,SAAU7B,GAEpDlI,KAAKI,SAAS,CAAE0C,UAAWoF,EAAQhL,QACnCmD,KAAKL,S,sBAET,WAGE,IAAIgK,EAA2C,IAA/BrE,YAAgB,YAAoB,IAAMA,YAAgB,YACtEsE,EAAyC,IAA9BtE,YAAgB,WAAmB,IAAMA,YAAgB,WAEpExI,EAA0B,IAAnB6C,KAAKV,MAAMnC,KAAa,QAAU6C,KAAKV,MAAMnC,KACpD+M,EAA8B,IAAtBlK,KAAKV,MAAM6K,QAAgB,IAAMnK,KAAKV,MAAM6K,QACpDtH,EAAU7C,KAAKV,MAAMuD,OAUzB7C,KAAKV,MAAM3B,aAAa,CACtBJ,KAAM,cACN6M,YAAajN,EACbkN,UAAWH,EACXI,SAAUN,EACVO,QAAUN,EACVpH,OAAUA,GACT,SAAU5C,GAEXD,KAAKI,SAAS,CAAEyC,OAAQ5C,EAAO/C,KAAKA,KAAK,MACzCmD,KAAKL,S,sBAGT,WACE,IAAIwK,EAAY7E,YAAgB,KAC5B2D,EAAoC,MAA1BtJ,KAAKpD,MAAMoG,YAAsB2C,YAAgB,KAAO3F,KAAKpD,MAAMoG,YACnE,gBAAXsG,IACDA,EAAU,gBAQZ,IACMmB,EADOzK,KAAKpD,MAAMiG,OACK6H,QAAQ,SAACC,GAAD,OAAUA,EAAMhB,WAAaL,KAE9DsB,EAAa,GACdH,EAActJ,OAAS,IACxBnB,KAAKI,SAAS,CAAEkD,SAAWmH,EAAc,GAAGnH,WAE1CsH,EAD8B,GAA7BH,EAAc,GAAGI,SACPJ,EAAc,GAAGK,MAEjBL,EAAc,GAAGd,WAIhC,IAAMjE,EAAO/F,cACTK,KAAKpD,MAAM4D,oBAAoBW,OAAS,IAC1CqJ,EAAYxK,KAAKpD,MAAM4D,oBAAoBuJ,QAG5B,IAAbS,GAA8B,IAAXlB,IACrBkB,EAAY9E,EAAKE,WACjB5F,KAAKI,SAAS,CAAEI,oBAAqB,CAACgK,OAEpCA,GAAalB,IACjByB,YAAqBP,EAAWI,EAAY,SAAU1C,GACpDlI,KAAKI,SAAS,CAAEkC,UAAW4F,EAAQhL,QACnCmD,KAAKL,S,wBAKT,SAAW9B,GACT8B,KAAKI,SAAS,CAAEI,oBAAqBtC,EAAEsC,wB,kCAGzC,WACEwK,cAAchL,KAAK2D,UACG,MAAlB3D,KAAK0D,WACP1D,KAAK0D,UAAUuH,W,2BAGnB,SAAc/M,EAAG6F,GACf/D,KAAKI,SAAS,CAAE4C,YAAae,EAAIuF,Y,6BAGnC,SAAgBpL,EAAG6F,GACjB,IAAI4F,EAAY5F,EAAIuF,QACpBtJ,KAAKI,SAAS,CAACiD,aAAesG,IAC9B3J,KAAKV,MAAM3B,aAAa,CACtBJ,KAAM,aACNsF,OAAQ8G,GACP,SAAU1J,GAEXD,KAAKI,SAAS,CAAE6C,WAAW,EAAMiI,eAAgBjL,EAAO/C,KAAKA,KAAK,GAAIiH,WAAY,sBAClF9D,KAAKL,S,2BAGT,SAAc9B,EAAG6F,GACf,IAAI4F,EAAY5F,EAAIuF,QACpBtJ,KAAKI,SAAS,CAACiD,aAAesG,IAE9B3J,KAAKV,MAAM3B,aAAa,CACtBJ,KAAM,WACNsF,OAAQ8G,GACP,SAAU1J,GAEXD,KAAKI,SAAS,CAAE6C,WAAW,EAAMiI,eAAgBjL,EAAO/C,KAAKA,KAAK,GAAIiH,WAAY,oBAClF9D,KAAKL,S,2BAIT,SAAc9B,EAAG6F,GACf,IAAIoH,EAAWpH,EAAI8D,OACfhF,EAAS7C,KAAKpD,MAAMiG,OACpB8H,EAAQ3K,KAAKpD,MAAMyG,aAOnBD,EALcP,EAAOuI,MAAK,SAACC,GAAD,OAAUA,EAAK1B,UAAU2B,gBAAkBX,EAAMW,iBAKjDzB,UAG9B7J,KAAKV,MAAM3B,aAAa,CACtBJ,KAAM,WACN4N,SAAUA,EACV/H,cAAeA,GACd,SAAUnD,GACXD,KAAKI,SAAS,CAAE8C,mBAAmB,EAAMH,aAAc9C,EAAO/C,KAAKA,KAAK,MACxEmD,KAAKL,S,8BAIT,SAAiB+D,GACf,GAAG/D,KAAKpD,MAAM0G,UAA0B,QAAdS,EAAIgB,OAAiB,CAC7C,IAAIwG,EAAiB7E,IAAO3C,EAAIsB,eAAepB,OAAO,uBAClD2E,EAAclC,IAAO3C,EAAIyH,YAAYvH,OAAO,uBAGhD,GAFYyC,IAAOkC,EAAY,uBAAuB/B,KAAKH,IAAO6E,EAAe,wBAA0B,IAEjGvL,KAAKpD,MAAM0G,SAAS,CAC5B,IAAImI,EAAiB/E,IAAO3C,EAAIsB,eAAeqG,IAAI1L,KAAKpD,MAAM0G,SAAU,WAAWW,OAAO,uBAG1F,OAFA6D,QAAQC,IAAI,QAAQhE,EAAIqB,UAAU,QAAQqG,EAAc,cAAc7C,GACtEd,QAAQC,IAAI,QAAQhE,EAAIqB,UAAUsB,IAAO+E,GAAenG,WACjDmG,EAEP,OAAO1H,EAAIsB,cAIb,OAAOtB,EAAIsB,gB,2BAKf,SAActB,GAKZ,IAAI4H,EAAiB3L,KAAKpD,MAAM+O,eAC5BA,GAAkBA,EAAevG,WAAarB,EAAIqB,WAA2B,QAAdrB,EAAIgB,OAOrE/E,KAAK4L,cAEED,GAAkBA,EAAevG,WAAarB,EAAIqB,WAAarB,EAAIgB,OAK5E+C,QAAQC,IAAI,WAAW/H,KAAKpD,MAAM0G,UAClC,IAAI6E,EAASpE,EAAIgB,OACjB,GAAG/E,KAAKpD,MAAM0G,UAA0B,QAAdS,EAAIgB,OAAiB,CAC7C,IAAIwG,EAAiB7E,IAAO3C,EAAIsB,eAAepB,OAAO,uBAClD2E,EAAelC,IAAO3C,EAAIyH,YAAYvH,OAAO,uBAC7C4C,EAAQH,IAAOkC,EAAY,uBAAuB/B,KAAKH,IAAO6E,EAAe,wBAA0B,IAExG1E,EAAO7G,KAAKpD,MAAM0G,UACnBwE,QAAQC,IAAI,QAAQhE,EAAIqB,UAAU,iBAAiBmG,EAAe,cAAc3C,EAAY,OAAO/B,GACnGsB,EAAS,UAETA,EAASpE,EAAIgB,OAIjB,OAAOoD,EAAO0D,gB,yBAGhB,SAAY3N,GACN8B,KAAK0D,YACP1D,KAAK0D,UAAUuH,SACfjL,KAAK0D,UAAY,MAEnB1D,KAAKI,SAAS,CAAEsC,SAAS,EAAOE,UAAW,GAAI+I,eAAgB,S,uBAIjE,SAAUzN,EAAG6F,GACX,IACM/D,KAAK0D,YACP1D,KAAK0D,UAAUuH,SACfjL,KAAK0D,UAAY,MAInB,IAAIgC,EAAO,CACToG,QAASnM,cAAUiG,WACnBmG,KAAMpM,cAAUiG,WAChBoG,KAAMrM,cAAUiG,WAChBqG,MAAOlI,EAAImI,aACXC,SAAU,SAAWpI,EAAImI,aAAe,YAE1ClM,KAAKoM,oBAAoB1G,EAAM,WAC7B5E,WAAW,WAET,GAAId,KAAK0D,UAAW,CAClB,IAAI2I,EAAS,OAAStI,EAAIqB,UACtBrB,EAAIuI,QACND,EAAS,OAAStI,EAAIuI,OAGxBtM,KAAK0D,UAAU6I,KAAKF,GAEtBrM,KAAKI,SAAS,CAAEsC,SAAS,EAAME,UAAWmB,EAAIqB,UAAWuG,eAAgB5H,KAOzE1D,KAAKL,MAAO,MACdK,KAAKL,MAAO,WACZU,SAASC,eAAeoD,EAAIqB,WAAW5F,SAAU,GACjDa,KAAKL,OAUP,MAAO9B,O,iCAMX,SAAoBwH,EAAM8G,EAAWC,GAEnC,GAAI/G,EAAM,CACR,IAAIrH,EAAS,CACXqO,MAAO,CACLC,OAAQ,CAGNzF,MAAOxG,SAASC,eAAe,iBAGnCiM,GAAI,CACFC,IAAKnH,EAAKqG,KAAO,IAAMrG,EAAKuG,MAC5Ba,UAAW,CAACpH,EAAKyG,UACjBY,kBAAmBrH,EAAKoG,QACxBkB,SAAUtH,EAAKsG,OAIfiB,QACFjN,KAAK0D,UAAY,IAAIuJ,MAAIC,OAAO7O,GAIhC2B,KAAK0D,UAAUyJ,GAAG,aAAa,SAAUjP,GACvCkP,YAAM,qBAAsB,CAAEjQ,KAAM,eAEtC6C,KAAK0D,UAAUyJ,GAAG,gBAAgB,SAAUjP,OAG5C8B,KAAK0D,UAAUyJ,GAAG,cAAc,SAAUjP,GACpCsO,GACFA,OAIJxM,KAAK0D,UAAUyJ,GAAG,sBAAsB,SAAUjP,GAChDkP,YAAM,mCAAoC,CAAEjQ,KAAM,aAEpD6C,KAAK0D,UAAUyJ,GAAG,gBAAgB,SAAUjP,GAC1CkP,YAAM,6CAA8C,CAAEjQ,KAAM,UACxDsP,GACFA,OAIJzM,KAAK0D,UAAUyJ,GAAG,mBAAmB,SAAUjP,OAG/C8B,KAAK0D,UAAUyJ,GAAG,oBAAoB,SAAUjP,OAGhD8B,KAAK0D,UAAUyJ,GAAG,aAAa,SAAUjP,OAGzC8B,KAAK0D,UAAUyJ,GAAG,UAAU,SAAUjP,OAGtC8B,KAAK0D,UAAUyJ,GAAG,aAAa,SAAUE,OAGzCrN,KAAK0D,UAAUyJ,GAAG,SAAS,SAAUE,QAWzC,OALAvM,WAAW,WACLd,KAAK0D,WAAa1D,KAAK0D,UAAUkJ,IAA0C,GAApC5M,KAAK0D,UAAUkJ,GAAGU,gBAC3DF,YAAM,mCAAoC,CAAEjQ,KAAM,WAEpDkD,KAAKL,MAAO,KACPA,KAAK0D,Y,kBASd,SAAKyD,GACH,IAAID,EAAQxG,SAASC,eAAe,SAAWwG,GAC3CoG,EAAO7M,SAASC,eAAe,OAASwG,GACxCD,EAAME,QACRF,EAAMuB,OACN8E,EAAKC,UAAUC,OAAO,kBACtBF,EAAKC,UAAU9B,IAAI,kBACnB1L,KAAK0N,uBAAuBxG,EAAOqG,KAGnCrG,EAAMyB,QACNzB,EAAM0B,YAAc,EACpB2E,EAAKC,UAAUC,OAAO,kBACtBF,EAAKC,UAAU9B,IAAI,qB,oCAIvB,SAAuBxE,EAAOqG,GAC5BrG,EAAMwB,QAAU,WACd6E,EAAKC,UAAUC,OAAO,kBACtBF,EAAKC,UAAU9B,IAAI,qB,0BAIvB,SAAaxN,GACX8B,KAAKI,SAAS,CAAEqC,IAAKvE,EAAEmO,OAAOtM,U,wBAGhC,SAAW7B,GAAI,IAAD,OAERyP,EAAU3N,KAAKpD,MAAM0F,UAEzB,GAAuB,QAAnBtC,KAAKpD,MAAM6F,IACb,OAAOkL,EAET,GAAuB,SAAnB3N,KAAKpD,MAAM6F,IAAgB,CAC7B,IAAIH,EAAY,GAOhB,OANAqL,EAAQC,SAAQ,SAAAC,IACF,IAAIlH,KAAS,IAAIA,KAAKkH,EAAQxI,gBAAkB,IACjD,IAAyB,SAAnBwI,EAAQ9I,QACvBzC,EAAUwL,KAAKD,MAGZvL,EAGT,IAAIA,EAAY,GAMhB,OALAqL,EAAQC,SAAQ,SAAAC,GACV,EAAKjR,MAAM6F,IAAIxB,QAAQ4M,EAAQ9I,SAAW,GAC5CzC,EAAUwL,KAAKD,MAGZvL,I,4BAET,SAAepE,GAEC,UAAVA,EAAEuE,KACJzC,KAAKI,SAAS,CAAEI,oBAAqB,CAACtC,EAAEmO,OAAOtM,W,4BAInD,SAAe7B,GAGb8B,KAAKI,SAAS,CAAEI,oBAAqB,CAACE,SAASC,eAAe,SAASZ,W,6BAIzE,WAAmB,IAAD,OAGZgO,EAAK,GACLjL,EAAY9C,KAAKpD,MAAMkG,UAE3B,OAAIA,GAAaA,EAAU3B,OAAS,GAElC2B,EAAU8K,SAAQ,SAAAC,GAChBE,EAAGD,KAAK,wBAAIzM,UAAW,EAAKzE,MAAMoG,aAAe6K,EAAQvE,QAAU,SAAW,IAC5E,4BAAK,uBAAG7H,QAAS,SAACvD,GAAD,OAAO,EAAK8P,cAAc9P,EAAG2P,IAAUI,mBAAiB,QAAQ5M,UAAU,mBAAmBwM,EAAQvE,UAEtH,4BAAK,uBAAG7H,QAAS,SAACvD,GAAD,OAAO,EAAKgQ,cAAchQ,EAAG2P,IAAUxM,UAAU,WAAWwM,EAAQM,WACrF,4BAAK,uBAAG1M,QAAS,SAACvD,GAAD,OAAO,EAAKkQ,gBAAgBlQ,EAAG2P,IAAUxM,UAAU,WAAWwM,EAAQQ,aACvF,wBAAIhN,UAAWwM,EAAQS,eAAiB,EAAI,mBAAqB,IAAKT,EAAQS,gBAC9E,wBAAIjN,UAAWwM,EAAQU,gBAAkB,EAAI,mBAAqB,IAAKV,EAAQU,iBAC/E,wBAAIlN,UAAWwM,EAAQW,qBAAuB,EAAI,mBAAqB,IAAKX,EAAQW,sBACpF,4BAAKX,EAAQY,iBAGV,kBAAC,IAAD,CAAOC,YAAU,GACtB,2BAAOrN,UAAU,gBACf,4BACE,uCACA,wCACA,0CACA,8CACA,+CACA,oDACA,4CAGJ,+BACG0M,KAKE,O,oBAKX,WAAU,IAAD,OACDY,EAAU3O,KAAK6E,WAEf+J,EAAoB5O,KAAK4D,eACzBiL,EAAkB7O,KAAKyE,aAGvBvH,GADe8C,KAAK8O,gBACb9O,KAAK+O,cACZvE,EAAY7E,YAAgB,KAC5B2D,EAAU3D,YAAgB,KAEhC,EAAoD3F,KAAKpD,MAAjDyF,EAAR,EAAQA,UAAW6I,EAAnB,EAAmBA,eAAgBnI,EAAnC,EAAmCA,aAEnC,OACE,oCACE,yBAAK1B,UAAU,WACb,kBAAC,IAAD,MACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKG,GAAG,MACN,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKA,GAAI,GACP,kBAAC,IAAD,CAAWwN,IAAI,MAAf,WAEF,kBAAC,IAAD,CAAKxN,GAAI,MAOb,kBAAC,IAAD,KACE,yBAAKH,UAAU,cACZrB,KAAKiP,uBAYhB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKzN,GAAG,MACN,kBAAC,IAAD,KACE,kBAAC,IAAD,KAEE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKA,GAAI,GACP,kBAAC,IAAD,CAAWwN,IAAI,MAAM3M,IAEvB,kBAAC,IAAD,CAAKb,GAAI,GACP,6CACcxB,KAAKpD,MAAMoG,cAI3B,kBAAC,IAAD,CAAKxB,GAAI,GACP,yBAAKH,UAAU,oBAEb,kBAAC,IAAK6N,QAAN,CAAcC,UAAQ,EAAChS,KAAK,OAAO0E,KAAK,QAAQT,GAAG,QAAQgO,UAAWpP,KAAKyD,eAAgB4L,SAAU,SAACnR,GAAD,OAAO,EAAKkC,SAAS,CAAEkP,SAAUpR,EAAEmO,OAAOtM,SAAUA,MAAOC,KAAKpD,MAAM0S,SAAUC,YAAa,wBAClM,yBAAKlO,UAAU,sBACb,4BAAQI,QAAS,SAACvD,GAAD,OAAO,EAAKsR,eAAetR,IAAImD,UAAU,sCAAqC,uBAAGA,UAAU,eAAe6D,cAAY,aAK7I,kBAAC,IAAD,CAAK1D,GAAI,GACP,yBAAKH,UAAU,eACb,4BAAQA,UAAU,eAAegO,SAAUrP,KAAKwD,cAC9C,4BAAQzD,MAAM,OAAd,OACA,4BAAQA,MAAM,QAAd,QACA,4BAAQA,MAAM,QAAd,QACA,4BAAQA,MAAM,QAAd,QACA,4BAAQA,MAAM,sCAAd,SACA,4BAAQA,MAAM,SAAd,SACA,4BAAQA,MAAM,sBAAd,YAIY,IAAbyK,GAA8B,KAAXlB,EAAkB,kBAAC,IAAD,CAAkB/I,WAAYP,KAAKO,WAAYR,MAAO,gBAAsC,KAEpI,4BAAQqB,GAAG,YAAYK,QAAS,SAACvD,GAAD,OAAO,EAAK0N,YAAY1N,IAAImD,UAAmC,IAAxBrB,KAAKpD,MAAMgG,UAAkB,OAAS,mCAAoC,uBAAGvB,UAAU,mBAAmB6D,cAAY,SAA7L,kBAAwNlF,KAAKpD,MAAMgG,cAOzO,kBAAC,IAAD,KAGE,yBAAKvB,UAAU,cACb,kBAAC,IAAD,CACEsN,QAASA,EACTzR,KAAMA,EACNuS,YAAY,EACZC,SAAS,EACTC,UAAU,EACVC,kBAAgB,EAChBC,OAAK,QASf,2BAAOzO,GAAG,gBACV,2BAAOA,GAAG,gBAGZ,2BAAOiH,IAAI,GAAGjH,GAAI,WAClB,2BAAOiH,IAAI,GAAGjH,GAAI,WAElB,kBAAC,IAAD,CAAO0O,KAAM9P,KAAKpD,MAAMqG,UAAW8M,OAAQ,kBAAM,EAAK3P,SAAS,CAAE6C,WAAW,KAAU+M,gBAAgB,aACpG,kBAAC,IAAMC,OAAP,CAAcC,aAAW,GACvB,kBAAC,IAAMC,MAAP,KAAcnQ,KAAKpD,MAAMuH,aAE3B,kBAAC,IAAMiM,KAAP,KACE,yBAAK/O,UAAU,aACb,kBAAC,IAAD,aACEsN,QAASC,EACT1R,KAAOgO,GAAkBA,EAAe/J,OAAS,EAAK+J,EAAiB,GACvEuE,YAAY,EACZC,SAAS,EACTC,UAAU,EACVC,kBAAgB,EAChBC,OAAK,GAPP,cAQc,MAIlB,kBAAC,IAAMQ,OAAP,OAIF,kBAAC,IAAD,CAAOP,KAAM9P,KAAKpD,MAAMsG,kBAAmB6M,OAAQ,kBAAM,EAAK3P,SAAS,CAAE8C,mBAAmB,KAAU8M,gBAAgB,aACpH,kBAAC,IAAMC,OAAP,CAAcC,aAAW,GACvB,kBAAC,IAAMC,MAAP,OAEF,kBAAC,IAAMC,KAAP,KACE,yBAAK/O,UAAU,qBACb,kBAAC,IAAD,CACEsN,QAASE,EACT3R,KAAO6F,GAAgBA,EAAa5B,OAAS,EAAK4B,EAAe,GACjE0M,YAAY,EACZC,SAAS,EACTC,UAAU,EACVC,kBAAgB,EAChBC,OAAK,MAKX,kBAAC,IAAMQ,OAAP,a,GA/lCyBnO,IAAMC,YAgnC5BmO,uBANf,SAAyB1T,GACvB,MAAO,CACL2T,WAAY3T,EAAM2T,cAMpB,CACEC,kBACAC,oBACA9S,kBALW2S,CAOblO","file":"static/js/11.e1495b80.chunk.js","sourcesContent":["import axios from \"axios\";\nimport config from \"../../config.jsx\";\nimport constants from \"../../Constants/Constants.jsx\";\n\nconst GetCommonData_fetched = Todos => {\n\n  if (Todos.dataToSend.state && Todos.dataToSend.statename) {\n    localStorage.setItem(Todos.dataToSend.statename, JSON.stringify(Todos.data));\n  }\n\n  return {\n    type: constants.GET_COMMON_SUCCESS,\n    payload: Todos.data,\n    root: Todos.dataToSend.root\n  };\n};\n\nconst GetCommonData_fetch_error = error => {\n  return {\n    type: constants.GET_COMMON_FAIL,\n    payload: error\n  };\n};\n\nexport const GetMySqlData = (dataToSend,cb) => {\n\n  if (dataToSend.data != null || dataToSend.data != undefined) {\n    return function (dispatch, getState) {\n      dispatch(GetCommonData_fetched({ data: dataToSend.data, dataToSend: dataToSend }));\n    };\n  }\n  try {\n    if ((dataToSend.state && localStorage.getItem(dataToSend.statename)) || localStorage.getItem(dataToSend.statename)) {\n\n      return function (dispatch, getState) {\n        let data = JSON.parse(localStorage.getItem(dataToSend.statename))\n        dispatch(GetCommonData_fetched({ data: data, dataToSend: dataToSend }));\n      }\n    }\n  }\n  catch (e) {\n\n  }\n\n\n  return function (dispatch, getState) {\n    axios\n      .get(config.api.base_url + \"/mydb/list/\", {\n        params: dataToSend\n      })\n      .then(data => {\n        if (dataToSend.state && dataToSend.statename) {\n          localStorage.setItem(dataToSend.statename, JSON.stringify(data.data.data));\n        }\n        if (cb) {\n          cb(data);\n        }\n        dispatch(GetCommonData_fetched({ data: data.data.data[0], dataToSend: dataToSend }));\n      })\n      .catch(error => {\n        dispatch(GetCommonData_fetch_error(error, dataToSend));\n      });\n  };\n};\n\n\n\n\nconst InsertData_fetched = Todos => {\n\n  return {\n    type: constants.INSERT_COMMON_SUCCESS,\n    payload: Todos.data\n  };\n};\n\nconst InsertData_fetch_error = error => {\n  return {\n    type: constants.INSERT_COMMON_FAIL,\n    payload: error\n  };\n};\n\nexport const InsertData = (dataToSend, cb) => {\n  return function (dispatch, getState) {\n    axios\n      .post(config.api.base_url + \"/mydb/insert/\", {\n        data: dataToSend\n      })\n      .then(data => {\n        if (cb) {\n          cb(data);\n        }\n        dispatch(InsertData_fetched({ data: data.data }));\n      })\n      .catch(error => {\n        dispatch(InsertData_fetch_error(error));\n      });\n  };\n};\n\n\nconst UpdateData_fetched = Todos => {\n\n  return {\n    type: constants.UPDATE_COMMON_SUCCESS,\n    payload: Todos.data\n  };\n};\n\nconst UpdateData_fetch_error = error => {\n  return {\n    type: constants.UPDATE_COMMON_FAIL,\n    payload: error\n  };\n};\n\nexport const UpdateData = (dataToSend, cb) => {\n\n  return function (dispatch, getState) {\n    axios\n      .post(config.api.base_url + \"/mydb/update/\", {\n        data: dataToSend\n      })\n      .then(data => {\n        if (cb) {\n          cb(data);\n        }\n        dispatch(UpdateData_fetched({ data: data.data }));\n      })\n      .catch(error => {\n        dispatch(UpdateData_fetch_error(error));\n      });\n  };\n};\n\n\n\n\nexport const GetDataDirect = (dataToSend, cb) => {\n\n  try {\n    if ((dataToSend.state && localStorage.getItem(dataToSend.statename)) || localStorage.getItem(dataToSend.statename)) {\n\n      let data = JSON.parse(localStorage.getItem(dataToSend.statename));\n      cb(data);\n      return;\n    }\n  }\n  catch (e) {\n\n  }\n  //return function (dispatch, getState) {\n  axios\n    .get(config.api.base_url + \"/mydb/list/\", {\n      params: dataToSend\n    })\n    .then(data => {\n      if (dataToSend.state && dataToSend.statename) {\n        localStorage.setItem(dataToSend.statename, JSON.stringify(data.data.data));\n      }\n      cb(data.data.data);\n\n      //dispatch(GetCommonData_fetched({ data: data.data.data[0], dataToSend: dataToSend }));\n    })\n    .catch(error => {\n      //dispatch(GetCommonData_fetch_error(error, dataToSend));\n    });\n  //};\n\n};\n\nexport const GetRealTimeAgentData = (manager, context, cb) => {\n\n  let url = config.api.realtimeurl + \"RealTimeAgentStatus?managercode=\" + (context == \"\" ? manager : \"\") + \"&context=\" + context;\n\n  axios\n    .get(url)\n    .then(data => {\n\n      cb(data);\n      //dispatch(GetCommonData_fetched({ data: data.data.data[0], dataToSend: dataToSend }));\n    })\n    .catch(error => {\n      //dispatch(GetCommonData_fetch_error(error, dataToSend));\n    });\n  //};\n\n};\n\nexport const GetRealTimeTotalData = (context, cb) => {\n\n  let url = config.api.realtimeurl + \"RealTimeData?context=\" + context;\n\n  axios\n    .get(url)\n    .then(data => {\n\n      cb(data);\n      //dispatch(GetCommonData_fetched({ data: data.data.data[0], dataToSend: dataToSend }));\n    })\n    .catch(error => {\n      //dispatch(GetCommonData_fetch_error(error, dataToSend));\n    });\n  //};\n\n};\n\n\nexport const SendOTP = (dataToSend, cb) => {\n  let url = config.api.SendOTP;\n  const headers = {\n    'Content-Type': 'application/json',\n    'Authorization': 'cG9saWN5 YmF6YWFy'\n  }\n  axios\n    .post(url,\n      dataToSend\n      , {\n        headers: headers\n      })\n    .then(data => {\n\n      cb(data);\n    })\n    .catch(error => {\n    });\n};\n\nexport const ValidateOTP = (dataToSend, cb) => {\n  let url = config.api.ValidateOTP;\n  const headers = {\n    'Content-Type': 'application/json',\n    'Authorization': 'cG9saWN5 YmF6YWFy'\n  }\n  axios\n    .post(url,\n      dataToSend\n      , {\n        headers: headers\n      })\n    .then(data => {\n\n      cb(data);\n    })\n    .catch(error => {\n    });\n};\n\nexport const GetComunicationData = (dataToSend, cb) => {\n\n  return function (dispatch, getState) {\n    axios\n      .get(config.api.ServiceAPI + dataToSend.root, {\n        params: dataToSend.data\n      })\n      .then(data => {\n        cb(data);\n        //dispatch(GetCommonData_fetched({ data: data, dataToSend: dataToSend }));\n      })\n      .catch(error => {\n        dispatch(GetCommonData_fetch_error(error, dataToSend));\n      });\n  };\n};","\r\nimport React, { Suspense } from 'react';\r\n\r\nimport {\r\n    GetCommonData, GetCommonspData, GetDataDirect\r\n} from \"../../store/actions/CommonAction\";\r\nimport { getUrlParameter, getuser } from '../../utility/utility.jsx';\r\n\r\n\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport 'react-checkbox-tree/lib/react-checkbox-tree.css';\r\nimport CheckboxTree from 'react-checkbox-tree';\r\n\r\n\r\nclass ManagerHierarchy extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            nodes: [],\r\n            checked: [],\r\n            expanded: [],\r\n        }\r\n        //this.onExpand = this.onExpand.bind(this);\r\n    }\r\n    componentDidMount() {\r\n\r\n        let UserId = getuser().RoleId == 2 ? 75 : getuser().UserID;\r\n\r\n        GetDataDirect({\r\n            root: \"Hierarchy\",\r\n            ManagerId: UserId,\r\n            statename: \"Hierarchy-\" + UserId,\r\n            value: this.props.value,\r\n            state: true\r\n        }, function (result) {\r\n\r\n            let str = JSON.stringify(result);\r\n            var res = str.replace(/UserName/g, \"label\");\r\n            res = res.replace(this.props.value, \"value\");\r\n\r\n            this.setState({ nodes: JSON.parse(res) });\r\n        }.bind(this));\r\n    }\r\n    componentWillReceiveProps(nextProps) {\r\n\r\n    }\r\n\r\n\r\n    onButtonClick() {\r\n        this.props.handleShow({\r\n            SelectedSupervisors: this.state.checked\r\n        });\r\n        this.forceUpdate();\r\n    }\r\n    onMouseEnter(e) {\r\n        document.getElementById(\"floating\").style.right = 0\r\n        document.getElementById(\"handle\").style.right = \"395px\"\r\n        //e.target.style.right = 0;\r\n    }\r\n    onMouseOut(e) {\r\n        setTimeout(function () {\r\n            document.getElementById(\"floating\").style.right = \"-400px\"\r\n            document.getElementById(\"handle\").style.right = \"-15px\"\r\n        }, 700);\r\n\r\n        //e.target.style.right = \"-350px\";\r\n    }\r\n    RemoveChecked(checkeditem) {\r\n        const { checked } = this.state;\r\n        let index = checked.indexOf(checkeditem);\r\n        if (index > -1) {\r\n            checked.splice(index, 1);\r\n        }\r\n        this.setState(checked);\r\n    }\r\n    onClick() {\r\n\r\n    }\r\n    render() {\r\n        const { nodes, checked } = this.state;\r\n        if (nodes.length == 0) {\r\n            return null;\r\n        }\r\n        return (\r\n\r\n\r\n            <div id=\"floating\" className=\"floating\" onMouseLeave={this.onMouseOut}>\r\n\r\n                <Row >\r\n                    <Col md=\"8\"><div id=\"handle\" className=\"handle\" onClick={this.onMouseEnter}>Filter</div></Col>\r\n                    <Col md=\"4\"><input type=\"button\" className=\"btn btn-primary\" onClick={this.onButtonClick.bind(this)} value=\"Show\" /></Col>\r\n                </Row>\r\n\r\n                <Row>\r\n                    <Col>\r\n\r\n                        <div className=\"managers\">\r\n                            <CheckboxTree\r\n                                nodes={nodes}\r\n                                checked={this.state.checked}\r\n                                expanded={this.state.expanded}\r\n                                checkModel=\"all\"\r\n                                name=\"UserName\"\r\n                                showNodeIcon={false}\r\n                                onCheck={checked => this.setState({ checked })}\r\n                                onExpand={expanded => this.setState({ expanded })}\r\n                                showExpandAll={true}\r\n                            />\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n\r\n\r\n\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default ManagerHierarchy;\r\n","import React from \"react\";\nimport {\n  GetMySqlData\n} from \"../../store/actions/CommonMysqlAction\";\nimport {\n  GetCommonData, GetCommonspData, GetRealTimeAgentData, GetRealTimeTotalData, GetRealTimeQueueData, GetFileExists, \n  GetAwsRecordingUrl, GetRecordingName\n} from \"../../store/actions/CommonAction\";\nimport { getUrlParameter, hhmmss, getuser } from '../../utility/utility.jsx';\nimport { connect } from \"react-redux\";\nimport DataTable from 'react-data-table-component';\nimport ManagerHierarchy from '../Common/ManagerHierarchy';\nimport Moment from 'react-moment';\nimport moment from 'moment';\nimport { Web } from \"sip.js\";\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n// reactstrap components\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Table\n} from \"reactstrap\";\nimport { Form, Modal, Glyphicon } from 'react-bootstrap';\nimport { If, Then, Else } from 'react-if';\n\nclass RealTimePanelQueuewise extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      PageTitle: \"RealTime Panel\",\n      AgentData: [],\n      TotalData: [],\n      items: [],\n      key: \"ALL\",\n      onBarge: false,\n      SelectedSupervisors: [],\n      winactive: 0,\n      BargeWith: \"\",\n      queues: [],\n      QueueData: [],\n      MoreInfoData: [],\n      contextName: null,\n      showModal: false,\n      showMoreInfoModal: false,\n      addClass: \"fa fa-play-circle\",\n      queueServerIp: \"\",\n      clickedQueue : \"\",\n      wraptime: \"\",\n      wrapcomplete: false,\n    };\n    this.handleShow = this.handleShow.bind(this);\n    this.statuschange = this.statuschange.bind(this);\n    this._handleKeyDown = this._handleKeyDown.bind(this);\n    //this.bargecall = this.bargecall.bind(this);\n    this.userAgent = null;\n    this.winactive = 0;\n    this.schdular = null;\n\n    this.unansweredlist = [\n      { name: \"Callid\", selector: \"callid\" },\n      { name: \"leadid\", selector: \"leadid\" },\n      { name: \"Calltime\", cell: row => <div className=\"calltime\">{row.calltime ? <Moment format=\"YYYY-MM-DD HH:mm:ss\" utc={true}>{row.calltime}</Moment> : \"N.A\"}</div> },\n      { name: \"Status\", cell: row => <div className=\"abandon\">{this.state.ModalTitle.indexOf(\"Unanswered\") > -1 ? \"ABANDON\" : \"ANSWERED\"}</div> },\n      { name: \"Waiting Time\", selector: \"waittime\" },\n      { name: \"EnterTime\", cell: row => <div className=\"calltime\">{row.entertime ? <Moment format=\"YYYY-MM-DD HH:mm:ss\" utc={true}>{row.entertime}</Moment> : \"N.A\"}</div>,\n       width: \"150px\",\n    },\n      { name: \"Main Queue EnterTime\", cell: row => <div className=\"calltime\">{row.mainqueueentertime ? <Moment format=\"YYYY-MM-DD HH:mm:ss\" utc={true}>{row.mainqueueentertime}</Moment> : \"N.A\"}</div>,\n      width: \"150px\",\n    },\n      { name: \"IVR Time\", selector: \"ivrtime\" },\n      { name: \"Call Type\", selector: \"call_type\" },\n      {\n        name: \"Listen\", cell: row =>\n        <div className=\"listenUserDetails\">\n            {this.getHtmlListen(row)}\n        </div>\n      },\n      {\n        name: \"More Info\", cell: row => <div className=\"moreinfo\"><a onClick={(e) => this.clickMoreinfo(e, row)} className=\"detailsinfo\">\n          <i className=\"fa fa-eye\"></i></a>\n        </div>\n      },\n    ];\n    this.moreinfolist = [\n      { name: \"callid\", selector: \"callid\" },\n      { name: \"leadid\", selector: \"leadid\" }, \n      { name: \"Calldate\", cell: row => <div className=\"calldate\">{row.calldate ? <Moment utc={true} format=\"YYYY-MM-DD HH:mm:ss\">{row.calldate}</Moment> : \"N.A\"}</div> },\n      { name: \"agentno\", selector: \"agentno\" },\n      { name: \"agentid\", selector: \"agentid\" },\n      { name: \"isassignedagent\", selector: \"isassignedagent\" },\n      { name: \"duration\", selector: \"ringtime\" }, \n      { name: \"disposition\", \n        //selector: \"custom_disposition\",\n        cell: row => this.state.ModalTitle.indexOf(\"Unanswered\") > -1 && row.custom_disposition === \"ANSWERED\" ? \"NO ANSWER\" : row.custom_disposition\n      },\n      {\n        name: \"Listen\", cell: row =>(['Playback','Hangup'].indexOf(row.custom_disposition) > -1)?'No file found':\n        <div className=\"listen\">\n            {this.getHtmlListenMoreInfo(row)}\n        </div>\n      },\n      // {\n      //   name: \"Listen\", cell: row =>\n      //     <div className=\"listen\">\n      //       {this.CreateRecordingURL(row)}\n      //     </div>\n      // }\n    ];\n    this.columnlist = [\n      {\n        name: \"Barging\",\n        selector: \"Barging\",\n        sortable: true,\n        width: \"80px\",\n        cell: row =>\n          <div className={row.Status == \"BUSY\" ? \"\" : \"hide\"} >\n            <button onClick={(e) => this.bargecall(e, row)} className={row.Barge ? \"hide\" : \"show\"}><i className=\"fa fa-volume-up\" aria-hidden=\"true\"></i></button>\n          </div>\n      },\n      {\n        name: \"Agent Code\",\n        selector: \"AgentCode\",\n\n        sortable: true,\n      },\n      {\n        name: \"Status\",\n        selector: \"Status\",\n        sortable: true,\n\n        cell: row => <div className={this.displayStatus(row) + \" RealtimeStatus\"}>{this.displayStatus(row)}</div>\n      },\n      {\n        name: \"Agent Name\",\n        selector: \"AgentName\",\n        sortable: true,\n      },\n      {\n      name: \"TL Name\",\n      selector: \"TLName\",\n      sortable: true,\n      },\n      {\n        name: \"Call Type\",\n        selector: \"CallType\",\n      },\n      {\n        name: \"Lead Id\",\n        selector: \"LeadId\",\n        sortable: true,\n      },\n      {\n        name: \"D.C.\",\n        selector: \"CallingCompany\",\n\n        sortable: true,\n      },\n      {\n        name: \"DIDNo\",\n        selector: \"DIDNo\",\n\n        sortable: true,\n      },\n      {\n        name: \"Asterisk_Url\",\n        selector: \"Asterisk_Url\",\n        width: \"120px\",\n        sortable: true,\n      },\n\n      // {\n      //   name: \"Last Updated On\",\n      //   selector: \"LastUpdatedOn\",\n      //   width: \"130px\",\n      //   sortable: true,\n      //   cell: row => <div className={row.AgentCode}>{row.LastUpdatedOn ? <Moment format=\"HH:mm:ss A\">{row.LastUpdatedOn}</Moment> : \"N.A\"}</div>\n      // },\n      {\n        name: \"Since\",\n        selector: \"LastUpdatedOn\",\n        sortable: true,\n        width: \"130px\",\n        cell: row => <div className={row.AgentCode}>{row.LastUpdatedOn ? <Moment fromNow>{this.getLastUpdatedOn(row)}</Moment> : \"N.A\"}</div>\n\n        //cell: row => <div className={row.AgentCode}>{row.LastUpdatedOn ? <Moment fromNow>{row.LastUpdatedOn}</Moment> : \"N.A\"}</div>\n      },\n      {\n        name: \"T Calls\",\n        selector: \"TotalCalls\",\n        width: \"70px\",\n        sortable: true,\n      },\n      {\n        name: \"U Dials\",\n        selector: \"UniqueDials\",\n        width: \"70px\",\n        sortable: true,\n      },\n      {\n        name: \"C Dials\",\n        selector: \"ConnectedDials\",\n        width: \"70px\",\n        sortable: true,\n      },\n      {\n        name: \"T TalkTime\",\n        selector: \"TotalTalkTime\",\n        sortable: true,\n        width: \"130px\",\n        cell: row => hhmmss(row.TotalTalkTime),\n      },\n\n    ];\n\n\n  }\n\n  componentWillReceiveProps(nextProps) {debugger;\n    if ((nextProps.queues && nextProps.queues != this.props.queues) ) {\n\n    const user = getuser();\n    this.setState({ SelectedSupervisors: [getUrlParameter(\"m\") == \"\" ? user.EmployeeId : getUrlParameter(\"m\")] }, function () {\n      \n      this.getqueue();\n      this.UserList();\n      this.queueList();\n    }.bind(this));\n\n  }\n    if (this.schdular == null) {\n      this.schdular = setInterval(function () {\n        //if (!this.state.onBarge) {\n        //if ((new Date()).getHours() >= 21 || (new Date()).getHours() < 9) {\n        if (this.state.winactive == 1 || document.hasFocus()) {\n          //this.getqueue();\n          this.UserList();\n          this.totalList();\n          this.queueList();\n        }\n        // }\n        // else {\n        //   this.UserList();\n        //   this.totalList();\n        // }\n        //}\n      }.bind(this), 2500)\n\n      window.addEventListener(\"message\", function (event) {\n        if (event.data.type == \"checkactive\") {\n          this.setState({ winactive: event.data.winactive })\n          this.winactive = event.data.winactive;\n        }\n      }.bind(this));\n    }\n  \n  }\n\n  componentDidMount() {\n\n    const user = getuser();\n    this.setState({ SelectedSupervisors: [getUrlParameter(\"m\") == \"\" ? user.EmployeeId : getUrlParameter(\"m\")] }, function () {\n      \n      this.getqueue();\n      this.UserList();\n      this.queueList();\n    }.bind(this));\n\n  \n    if (this.schdular == null) {\n      this.schdular = setInterval(function () {\n        //if (!this.state.onBarge) {\n        //if ((new Date()).getHours() >= 21 || (new Date()).getHours() < 9) {\n        if (this.state.winactive == 1 || document.hasFocus()) {\n          //this.getqueue();\n          this.UserList();\n          this.totalList();\n          this.queueList();\n        }\n        // }\n        // else {\n        //   this.UserList();\n        //   this.totalList();\n        // }\n        //}\n      }.bind(this), 2500)\n\n      window.addEventListener(\"message\", function (event) {\n        if (event.data.type == \"checkactive\") {\n          this.setState({ winactive: event.data.winactive })\n          this.winactive = event.data.winactive;\n        }\n      }.bind(this));\n    }\n  \n  }\n\n  getHtmlListenMoreInfo(row){\n    return  (<span id={\"span_\" + row.row_num} onClick={(e) => this.CreateMoreInfoRecordingURL(e, row)}>\n      <i class=\"fa fa-play-circle listen\"></i>\n      </span>)\n  }\n\n  getHtmlListen(row){debugger;\n    //var diff = (new Date() - new Date(row.hanguptime)) / 1000;\n    var now = moment().format(\"YYYY-MM-DD HH:mm:ss\");\n    var then = moment.utc(new Date(row.hanguptime)).format(\"YYYY-MM-DD HH:mm:ss\");\n\n    //var then = moment(row.hanguptime).format(\"YYYY-MM-DD HH:mm:ss\");\n    var diff = (moment(now,\"YYYY-MM-DD HH:mm:ss\").diff(moment(then,\"YYYY-MM-DD HH:mm:ss\")))/ 1000;\n\n    //if (row.orig_callid == 0){\n    //  return <i class=\"fa fa-info-circle infotooltip\" data-toggle=\"tooltip\" title=\"Transferred Call- Recording available next day on AI Portal\" aria-hidden=\"true\"></i>\n    //}\n    if (row.call_type == 1 && diff < 600) {\n      return <i class=\"fa fa-info-circle infotooltip\" diff={diff} data-toggle=\"tooltip\" title=\"Transferred Call- Recording available after 10 minutes of Call\" aria-hidden=\"true\"></i>\n    }\n    else if(diff < 600){\n      return <i class=\"fa fa-info-circle infotooltip\" data-toggle=\"tooltip\" title=\"IB - Recording available after 10 minutes of Call\" aria-hidden=\"true\"></i>\n    }else{\n      return  (<span id={\"span_\" + row.row_num} onClick={(e) => this.CreateNCallersRecordingURL(e, row)}>\n      <i class=\"fa fa-play-circle listen\"></i>\n      </span>)\n    }\n  }\n\n  CreateMoreInfoRecordingURL(e, row){\n    var audio = document.getElementById('audio2');\n    var number = row.row_num;\n    if (audio.paused) {\n      document.getElementById('span_'+ number).innerHTML = '<i class=\"fa fa-spinner fa-spin\"></i>';\n      let userfield = row.userfield;\n      let dstchannel = row.dstchannel;\n      let date = moment(new Date(userfield)).format(\"DD-MM-YYYY\");\n      let hour = moment(new Date(userfield)).format(\"H\");\n      let datetime = moment(new Date(userfield)).format(\"YYYYMMDDHHmmss\");\n      let phoneNo = dstchannel.substring(dstchannel.indexOf(\"/\") + 1, dstchannel.indexOf(\"-\"));\n      let callid = row.callid;\n      console.log(date, hour, datetime, phoneNo, callid);\n      let recfilename = \"recording/\"+ date + \"/\" + hour + \"/\" + callid + \"-\" + datetime + \"-\" + phoneNo + \".wav\";\n      //let url = \"https://asterisk-log.s3.ap-south-1.amazonaws.com/recording/\" + date + \"/\" + hour + \"/\" + callid + \"-\" + datetime + \"-\" + phoneNo + \".wav\";\n  \n  \n      if (date == \"Invalid date\" || hour == \"Invalid date\" || datetime == \"Invalid date\" || phoneNo == null) {\n        document.getElementById('span_'+ number).innerHTML = 'No File Found';\n        return;\n      }\n      //debugger;\n          GetAwsRecordingUrl(recfilename, 'asterisk-log' ,function (results) {debugger;\n            //debugger;\n\n            console.log(\"results\", results);\n            if (results.data.status == 200) {\n              let url = results.data.data;\n              audio.src = results.data.data;\n              document.getElementById('span_'+ number).innerHTML = '<i class=\"fa fa-spinner fa-spin\"></i>';\n              GetFileExists(url, function (params) {\n                //debugger;\n                if (params && params.status && params.status != 404) {\n                  audio.onloadedmetadata = function() {\n                    console.log(audio.duration)\n                    //setTimeout(function () {\n                      audio.play();\n                      console.log(audio.duration);\n                      if(audio.paused == false && audio.duration > 0 && audio.duration != 'Infinity' && audio.duration != 'NaN'){\n                      document.getElementById('span_'+ number).innerHTML = '<i class=\"fa fa-stop-circle listen\"></i>';\n                     \n                      audio.onended = function() {\n                        document.getElementById('span_'+ number).innerHTML = '<i class=\"fa fa-play-circle listen\"></i>';\n                      };\n                     \n                      }else{\n                      document.getElementById('span_'+ number).innerHTML = 'No File Found'; \n                      }\n                   // }.bind(this), 500);\n                  };\n                } else {\n                  try {\n                    document.getElementById(\"span_\" + row.row_num).innerHTML = \"File not found\";\n                  } catch (e) {\n                    //console.log('error', e);        \n                  }\n                }\n              });\n            \n              \n            } else {\n              document.getElementById('span_'+ number).innerHTML = 'No File Found';\n            }\n          }.bind(this));\n       \n\n\n    } else {\n      //debugger;\n      audio.pause();\n      audio.currentTime = 0;\n      document.getElementById('span_'+ number).innerHTML = '<i class=\"fa fa-play-circle listen\"></i>';\n\n    }\n\n  }\n  CreateNCallersRecordingURL(e,row){\n    var audio = document.getElementById('audio1');\n    var number = row.row_num;\n    if (audio.paused) {\n\n      let calldataid = row.orig_callid;\n      this.state.AwsRecordingUrl = '';\n      document.getElementById('span_'+ number).innerHTML = '<i class=\"fa fa-spinner fa-spin\"></i>';\n      //debugger;\n      GetRecordingName(calldataid, function (results) {\n        //console.log(\"results\", results);   \n        var CheckFile = '';\n        var extension = '';\n        if(results.data.file_available == true){\n          extension = '.wav';\n          CheckFile = results.data.file_available;\n        }else{\n          extension = '-out.wav';\n          CheckFile = results.data.agent_file;\n        }\n\n        if (CheckFile == true) {\n          //this.setState({ RecordingName: results.data.record });\n          GetAwsRecordingUrl(results.data.record+extension, 'newcctecbuckt', function (results) {\n            //debugger;\n            console.log(\"results\", results);\n            if (results.data.status == 200) {\n              this.setState({ AwsRecordingUrl: results.data.data });\n              audio.src = results.data.data;\n              document.getElementById('span_'+ number).innerHTML = '<i class=\"fa fa-spinner fa-spin\"></i>';\n\n              audio.onloadedmetadata = function() {\n                console.log(audio.duration)\n                //setTimeout(function () {\n                  audio.play();\n                  console.log(audio.duration);\n                  if(audio.paused == false && audio.duration > 0 && audio.duration != 'Infinity' && audio.duration != 'NaN'){\n                  document.getElementById('span_'+ number).innerHTML = '<i class=\"fa fa-stop-circle listen\"></i>';\n                 \n                  audio.onended = function() {\n                    document.getElementById('span_'+ number).innerHTML = '<i class=\"fa fa-play-circle listen\"></i>';\n                  };\n                 \n                  }else{\n                  document.getElementById('span_'+ number).innerHTML = 'No File Found'; \n                  }\n               // }.bind(this), 500);\n              };\n              \n            } else {\n              document.getElementById('span_'+ number).innerHTML = 'No File Found';\n            }\n          }.bind(this));\n        } else {\n          document.getElementById('span_'+ number).innerHTML = 'No File Name Found';\n        }\n\n      }.bind(this));\n\n    } else {\n      //debugger;\n      audio.pause();\n      audio.currentTime = 0;\n      document.getElementById('span_'+ number).innerHTML = '<i class=\"fa fa-play-circle listen\"></i>';\n\n    }\n\n  }\n\n  // CreateRecordingURL(row) {debugger;\n\n  //   let userfield = row.userfield;\n  //   let dstchannel = row.dstchannel;\n  //   let date = moment(new Date(userfield)).format(\"DD-MM-YYYY\");\n  //   let hour = moment(new Date(userfield)).format(\"H\");\n  //   let datetime = moment(new Date(userfield)).format(\"YYYYMMDDHHmmss\");\n  //   let phoneNo = dstchannel.substring(dstchannel.indexOf(\"/\") + 1, dstchannel.indexOf(\"-\"));\n  //   let callid = row.callid;\n  //   console.log(date, hour, datetime, phoneNo, callid);\n  //   let recfilename = date + \"/\" + hour + \"/\" + callid + \"-\" + datetime + \"-\" + phoneNo + \".wav\";\n  //   //let url = \"https://asterisk-log.s3.ap-south-1.amazonaws.com/recording/\" + date + \"/\" + hour + \"/\" + callid + \"-\" + datetime + \"-\" + phoneNo + \".wav\";\n\n\n  //   if (date == \"Invalid date\" || hour == \"Invalid date\" || datetime == \"Invalid date\" || phoneNo == null) {\n  //     return <span>File not found</span>\n  //   }\n\n  //   GetAwsRecordingUrl(recfilename, function (results) {debugger;\n\n  //     console.log(\"results\", results);\n  //     if (results.data.status == 200) {\n  //       let url = results.data.data;  \n             \n  //     } else {\n  //       try {\n  //         document.getElementById(\"span_\" + row.row_num).innerHTML = \"File not found\";\n  //       } catch (e) {\n  //         //console.log('error', e);        \n  //       }}\n  //   }.bind(this));\n\n  // }\n\n  totalList() {\n    let context = getUrlParameter(\"c\");\n    if (context != \"\") {\n      GetRealTimeTotalData(context, function (results) {\n        this.setState({ TotalData: results.data });\n      }.bind(this));\n    }\n  }\n\n  queueList() {//debugger;\n    let queues = this.state.queues;\n    //console.log(\"queues\", queues);\n\n    var queuestring = queues.map(function (val) {\n      return val.queuename;\n    });\n\n    var serverip = queues.map(function (val) {\n      return val.server_ip;\n    });\n\n    //var contextName = this.state.contextName ?? queuestring[0];\n\n    //this.setState({ queueServerIp: serverip[0], contextName: contextName });\n    this.setState({ queueServerIp: serverip[0] });\n\n    GetRealTimeQueueData(queuestring.join(\",\"), function (results) {\n      //console.log(\"results\", results);\n      this.setState({ QueueData: results.data });\n    }.bind(this));\n  }\n  getqueue() {debugger;\n    // let type = getUrlParameter(\"type\") == \"\" ? \"sales\" : getUrlParameter(\"type\");\n    // let proid = getUrlParameter(\"product\") == \"\" ? \"1\" : getUrlParameter(\"product\");\n    let is_mobile = getUrlParameter(\"IsMobile\") == \"\" ? \"0\" : getUrlParameter(\"IsMobile\");\n    let is_claim = getUrlParameter(\"IsClaim\") == \"\" ? \"0\" : getUrlParameter(\"IsClaim\");\n    // let queues =  getUrlParameter(\"queues\");\n    let type = this.props.type == \"\" ? \"sales\" : this.props.type;\n    let proid = this.props.product == \"\" ? \"1\" : this.props.product;\n    let queues =  this.props.queues;\n\n    // this.props.GetMySqlData({\n    //   root: \"getqueue\",\n    //   ProductType: type,\n    //   ProductId: proid,\n    //   IsMobile: is_mobile,\n    //   IsClaim:  is_claim,\n    // });\n\n    this.props.GetMySqlData({\n      root: \"getqueuetwo\",\n      ProductType: type,\n      ProductId: proid,\n      IsMobile: is_mobile,\n      IsClaim:  is_claim,\n      queues:   queues,\n    }, function (result) {\n      //console.log(\"result\",result);\n      this.setState({ queues: result.data.data[0] });\n    }.bind(this));\n  }\n\n  UserList() {\n    let managerid = getUrlParameter(\"m\");\n    let context = this.state.contextName == null ? getUrlParameter(\"c\") : this.state.contextName;\n    if(context == 'breakinmotor'){\n      context = 'BreakinMotor';\n    }\n    // if(context == 'claimofflinemotorib'){\n    //   context = \"claimofflinemotornia,claimofflinemotorprivate,claimofflinemotoruiic,claimofflinemotornao\";\n    // }\n    // if(context == 'claimonlinemotorib'){\n    //   context = \"claimonlinemotordc,claimonlinemotorqc,claimonlinemotorpayment\";\n    // }\n    let queues = this.state.queues;\n    const filterContext = queues.filter( (queue)=> queue.queuename == context);\n    //console.log(filterContext);\n    let newContext = '';\n    if(filterContext.length > 0){\n      this.setState({ wraptime : filterContext[0].wraptime});\n      if(filterContext[0].isMaster == 1){\n        newContext=filterContext[0].child\n      }else{\n        newContext=filterContext[0].queuename\n      }\n    }\n\n    const user = getuser();\n    if (this.state.SelectedSupervisors.length > 0) {\n      managerid = this.state.SelectedSupervisors.join()\n    }\n\n    if (managerid == \"\" && context == \"\") {\n      managerid = user.EmployeeId;\n      this.setState({ SelectedSupervisors: [managerid] });\n    }\n    if (managerid || context){\n    GetRealTimeAgentData(managerid, newContext, function (results) {\n      this.setState({ AgentData: results.data });\n    }.bind(this));\n  }\n\n  }\n\n  handleShow(e) {\n    this.setState({ SelectedSupervisors: e.SelectedSupervisors });\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.schdular);\n    if (this.userAgent != null)\n      this.userAgent.hangup();\n  }\n\n  changeContext(e, row) {\n    this.setState({ contextName: row.context });\n  }\n\n  clickUnanswered(e, row) {\n    let queuename = row.context;\n    this.setState({clickedQueue : queuename});\n    this.props.GetMySqlData({\n      root: \"unanswered\",\n      queues: queuename,\n    }, function (result) {\n      ////debugger;\n      this.setState({ showModal: true, UnansweredData: result.data.data[0], ModalTitle: \"Unanswered Calls\" });\n    }.bind(this));\n\n  }\n  clickanswered(e, row) {\n    let queuename = row.context;\n    this.setState({clickedQueue : queuename});\n\n    this.props.GetMySqlData({\n      root: \"answered\",\n      queues: queuename,\n    }, function (result) {\n      ////debugger;\n      this.setState({ showModal: true, UnansweredData: result.data.data[0], ModalTitle: \"Answered Calls\" });\n    }.bind(this));\n\n  }\n\n  clickMoreinfo(e, row) {//debugger;\n    let uniqueid = row.callid;\n    let queues = this.state.queues;\n    let queue = this.state.clickedQueue;\n\n    const queueData = queues.find((item) => item.queuename.toLowerCase() === queue.toLowerCase());\n\n    // if (queue == 'breakinmotor'){\n    //   var queueServerIp = \"10.0.91.32\";\n    // }else{\n    var queueServerIp = queueData.server_ip;\n    // }\n\n    this.props.GetMySqlData({\n      root: \"moreinfo\",\n      uniqueid: uniqueid,\n      queueServerIp: queueServerIp,\n    }, function (result) {////debugger;\n      this.setState({ showMoreInfoModal: true, MoreInfoData: result.data.data[0] });\n    }.bind(this));\n\n  }\n\n  getLastUpdatedOn(row) {\n    if(this.state.wraptime && row.Status == \"IDLE\"){\n      let lastupdatetime = moment(row.LastUpdatedOn).format('YYYY-MM-DD HH:mm:ss');\n      let currentTime = moment(row.ServerTime).format('YYYY-MM-DD HH:mm:ss');//moment().format(\"YYYY-MM-DD HH:mm:ss\");\n      var diff = (moment(currentTime,\"YYYY-MM-DD HH:mm:ss\").diff(moment(lastupdatetime,\"YYYY-MM-DD HH:mm:ss\")))/ 1000;\n\n      if(diff > this.state.wraptime){\n        let lastsincetime =  moment(row.LastUpdatedOn).add(this.state.wraptime, 'seconds').format('YYYY-MM-DD HH:mm:ss');\n        console.log('agent',row.AgentCode,'since',lastsincetime,'currenttime',currentTime);\n        console.log('agent',row.AgentCode,moment(lastsincetime).fromNow());\n        return lastsincetime;\n      }else{\n        return row.LastUpdatedOn;\n      }\n\n    }else{\n      return row.LastUpdatedOn;\n    }\n\n  }\n\n  displayStatus(row) {\n    // var diff = (new Date() - new Date(row.LastUpdatedOn)) / 1000;\n    // if (diff > 60 && row.Status == \"IDLE\") {\n    //   return \"Away\";\n    // } else return row.Status;\n    let BargeWithAgent = this.state.BargeWithAgent;\n    if (BargeWithAgent && BargeWithAgent.AgentCode == row.AgentCode && row.Status != \"BUSY\") {\n\n      // if (this.userAgent) {\n      //   this.userAgent.hangup();\n      //   this.userAgent = null;        \n      // }\n      // this.setState({ onBarge: false, BargeWith: \"\" });\n      this.unbargecall();\n    }\n    else if (BargeWithAgent && BargeWithAgent.AgentCode == row.AgentCode && row.Status == \"BUSY\") {\n      // if (this.userAgent == null) {\n      //   this.bargecall(null, BargeWithAgent);\n      // }\n    }\n    console.log('wraptime',this.state.wraptime);\n    let status = row.Status;\n    if(this.state.wraptime && row.Status == \"IDLE\"){\n      let lastupdatetime = moment(row.LastUpdatedOn).format('YYYY-MM-DD HH:mm:ss');\n      let currentTime =  moment(row.ServerTime).format('YYYY-MM-DD HH:mm:ss');//moment().format(\"YYYY-MM-DD HH:mm:ss\");\n      var diff = (moment(currentTime,\"YYYY-MM-DD HH:mm:ss\").diff(moment(lastupdatetime,\"YYYY-MM-DD HH:mm:ss\")))/ 1000;\n\n      if(diff < this.state.wraptime){\n        console.log('agent',row.AgentCode,'lastupdatetime',lastupdatetime,'currenttime',currentTime,'diff',diff);\n        status = \"OnWrap\";\n      }else{\n        status = row.Status;\n      }\n\n    }\n    return status.toUpperCase()\n  }\n\n  unbargecall(e) {\n    if (this.userAgent) {\n      this.userAgent.hangup();\n      this.userAgent = null;\n    }\n    this.setState({ onBarge: false, BargeWith: \"\", BargeWithAgent: null });\n  }\n\n\n  bargecall(e, row) {\n    try {\n      if (this.userAgent) {\n        this.userAgent.hangup();\n        this.userAgent = null\n      }\n      //if (!this.state.onBarge) {\n\n      let user = {\n        Display: getuser().EmployeeId,\n        User: getuser().EmployeeId,\n        Pass: getuser().EmployeeId,\n        Realm: row.Asterisk_Url,\n        WSServer: \"wss://\" + row.Asterisk_Url + \":8089/ws\"\n      }\n      this.LoginAsteriskServer(user, function () {\n        setTimeout(function () {\n\n          if (this.userAgent) {\n            let target = \"*222\" + row.AgentCode;\n            if (row.DIDNo) {\n              target = \"*222\" + row.DIDNo;\n            }\n\n            this.userAgent.call(target);\n          }\n          this.setState({ onBarge: true, BargeWith: row.AgentCode, BargeWithAgent: row });\n\n          // setTimeout(function () {\n          //   //this.forceUpdate();\n\n          // }.bind(this), 500);\n\n        }.bind(this), 1000);\n      }.bind(this), function () {\n        document.getElementById(row.AgentCode).checked = false;\n      }.bind(this));\n\n      // }\n      // else {\n      //   toast(\"Close previous call barging\", { type: 'error' });\n      //   e.target.checked = false;\n      //   return false;\n      // }\n\n\n    } catch (e) {\n\n    }\n\n  }\n\n  LoginAsteriskServer(user, onsuccess, onerror) {\n\n    if (user) {\n      var config = {\n        media: {\n          remote: {\n            //video: document.getElementById('remoteVideo'),\n            // This is necessary to do an audio/video call as opposed to just a video call\n            audio: document.getElementById('audioRemote')\n          }\n        },\n        ua: {\n          uri: user.User + '@' + user.Realm,\n          wsServers: [user.WSServer],\n          authorizationUser: user.Display,\n          password: user.Pass\n        }\n      }\n\n      if (Web) {\n        this.userAgent = new Web.Simple(config);\n\n        //let remoteElem = document.getElementById('audioRemote');\n        //let localElem = document.getElementById('audioLocal');\n        this.userAgent.on('connected', function (e) {\n          toast(\"Barging Connected!\", { type: 'success' });\n        });\n        this.userAgent.on('disconnected', function (e) {\n\n        });\n        this.userAgent.on('registered', function (e) {\n          if (onsuccess) {\n            onsuccess();\n          }\n\n        });\n        this.userAgent.on('registrationFailed', function (e) {\n          toast(\"Make sure your VPN is connected!\", { type: 'error' });\n        });\n        this.userAgent.on('unregistered', function (e) {\n          toast(\"Dialer issue please contact administrator!\", { type: 'error' });\n          if (onerror) {\n            onerror();\n          }\n\n        });\n        this.userAgent.on('userMediaFailed', function (e) {\n\n        });\n        this.userAgent.on('userMediaRequest', function (e) {\n\n        });\n        this.userAgent.on('userMedia', function (e) {\n\n        });\n        this.userAgent.on('invite', function (e) {\n\n        });\n        this.userAgent.on('addStream', function (stream) {\n\n        });\n        this.userAgent.on('ended', function (stream) {\n\n        });\n      }\n    }\n\n    setTimeout(function () {\n      if (this.userAgent && this.userAgent.ua && this.userAgent.ua.isRegistered() == false) {\n        toast(\"Make sure your VPN is connected!\", { type: 'error' });\n      }\n    }.bind(this), 10000);\n    return this.userAgent;\n  }\n  // componentWillReceiveProps(nextProps) {\n  //   if (!nextProps.CommonData.isError) {\n  //     //this.setState({ queues: nextProps.CommonData[\"getqueue\"] });\n  //     //this.setState({ UnansweredData: nextProps.CommonData[\"unanswered\"] });\n  //   }\n  // }\n\n  play(number) {\n    var audio = document.getElementById('audio_' + number);\n    var icon = document.getElementById(\"play\" + number);\n    if (audio.paused) {\n      audio.play();\n      icon.classList.remove(\"fa-play-circle\");\n      icon.classList.add(\"fa-stop-circle\");\n      this.CheckAudioFinishedPlay(audio, icon);\n     \n    } else {\n      audio.pause();\n      audio.currentTime = 0\n      icon.classList.remove(\"fa-stop-circle\");\n      icon.classList.add(\"fa-play-circle\");\n    }\n  }\n\n  CheckAudioFinishedPlay(audio, icon){//debugger;\n    audio.onended = function() {\n      icon.classList.remove(\"fa-stop-circle\");\n      icon.classList.add(\"fa-play-circle\");\n     };\n  }\n\n  statuschange(e) {\n    this.setState({ key: e.target.value });\n  }\n\n  filterdata(e) {\n\n    let alldata = this.state.AgentData\n    let that = this;\n    if (this.state.key === \"ALL\") {\n      return alldata;\n    }\n    if (this.state.key === \"Away\") {\n      let AgentData = [];\n      alldata.forEach(element => {\n        var diff = (new Date() - new Date(element.LastUpdatedOn)) / 1000;\n        if (diff > 60 && element.Status === \"IDLE\") {\n          AgentData.push(element);\n        }\n      });\n      return AgentData;\n    }\n\n    let AgentData = [];\n    alldata.forEach(element => {\n      if (this.state.key.indexOf(element.Status) > -1) {\n        AgentData.push(element);\n      }\n    });\n    return AgentData;\n  }\n  _handleKeyDown(e) {\n\n    if (e.key === 'Enter') {\n      this.setState({ SelectedSupervisors: [e.target.value] });\n    }\n  }\n\n  _handleOnClick(e) {\n\n\n    this.setState({ SelectedSupervisors: [document.getElementById(\"EmpId\").value] });\n\n  }\n\n  renderTotalData() {\n\n\n    let tr = [];\n    let QueueData = this.state.QueueData;\n    //console.log('..............................',QueueData);\n    if (QueueData && QueueData.length > 0) {\n\n      QueueData.forEach(element => {\n        tr.push(<tr className={this.state.contextName == element.context ? \"active\" : \"\"}>\n          <td>{<a onClick={(e) => this.changeContext(e, element)} data-myattribute=\"check\" className=\"abutton clickMe\">{element.context}</a>}</td>\n          {/* <td>{element.answered}</td> */}\n          <td>{<a onClick={(e) => this.clickanswered(e, element)} className=\"abutton\">{element.answered}</a>}</td>\n          <td>{<a onClick={(e) => this.clickUnanswered(e, element)} className=\"abutton\">{element.unanswered}</a>}</td>\n          <td className={element.waitingibcalls > 0 ? \"waiting_call_gt0\" : \"\"}>{element.waitingibcalls}</td>\n          <td className={element.waitingctccalls > 0 ? \"waiting_call_gt0\" : \"\"}>{element.waitingctccalls}</td>\n          <td className={element.waitingassignedcalls > 0 ? \"waiting_call_gt0\" : \"\"}>{element.waitingassignedcalls}</td>\n          <td>{element.totalcalls}</td>\n        </tr>)\n      });\n      return <Table responsive>\n        <thead className=\"text-primary\">\n          <tr>\n            <th>context</th>\n            <th>answered</th>\n            <th>unanswered</th>\n            <th>waitingibcalls</th>\n            <th>waitingctccalls</th>\n            <th>waitingassignedcalls</th>\n            <th>totalcalls</th>\n          </tr>\n        </thead>\n        <tbody>\n          {tr}\n        </tbody>\n      </Table>\n    }\n    else {\n      return null;\n    }\n  }\n\n\n  render() {\n    const columns = this.columnlist;\n\n    const unansweredcolumns = this.unansweredlist;\n    const moreinfocolumns = this.moreinfolist;\n\n    const totalcolumns = this.totalcolumnlist;\n    const data = this.filterdata();\n    const managerid = getUrlParameter(\"m\");\n    const context = getUrlParameter(\"c\");\n\n    const { PageTitle, UnansweredData, MoreInfoData } = this.state;\n\n    return (\n      <>\n        <div className=\"content\">\n          <ToastContainer />\n          <Row>\n            <Col md=\"12\">\n              <Card>\n                <CardHeader>\n                  <Row>\n                    <Col md={3}>\n                      <CardTitle tag=\"h4\">Queues</CardTitle>\n                    </Col>\n                    <Col md={9}>\n\n                    </Col>\n                  </Row>\n\n                </CardHeader>\n\n                <CardBody>\n                  <div className=\"queuetable\">\n                    {this.renderTotalData()}\n                  </div>\n                </CardBody>\n\n              </Card>\n\n\n\n\n            </Col>\n\n          </Row>\n          <Row>\n            <Col md=\"12\">\n              <Card>\n                <CardHeader>\n\n                  <Row>\n                    <Col md={3}>\n                      <CardTitle tag=\"h4\">{PageTitle}</CardTitle>\n                    </Col>\n                    <Col md={4}>\n                      <div>\n                      Queue Name : {this.state.contextName}\n                      </div>\n                    </Col>\n                    \n                    <Col md={3}>\n                      <div className=\"input-group hide\">\n\n                        <Form.Control required type=\"text\" name=\"EmpId\" id=\"EmpId\" onKeyDown={this._handleKeyDown} onChange={(e) => this.setState({ username: e.target.value })} value={this.state.username} placeholder={\"Enter Supervisor Id\"} />\n                        <div className=\"input-group-append\">\n                          <button onClick={(e) => this._handleOnClick(e)} className=\"btn btn-primary input-group-button\"><i className=\"fa fa-search\" aria-hidden=\"true\"></i></button>\n\n                        </div>\n                      </div>\n                    </Col>\n                    <Col md={2}>\n                      <div className=\"form-group \">\n                        <select className=\"form-control\" onChange={this.statuschange}>\n                          <option value=\"ALL\">ALL</option>\n                          <option value=\"IDLE\">IDLE</option>\n                          <option value=\"Away\">Away</option>\n                          <option value=\"BUSY\">BUSY</option>\n                          <option value=\"Lunch,Tea,Training,Meeting,Day End\">Break</option>\n                          <option value=\"PAUSE\">PAUSE</option>\n                          <option value=\"Auto Logout,LOGOUT\">LOGOUT</option>\n                        </select>\n                      </div>\n                      {\n                        (managerid == '' && context == ' ') ? <ManagerHierarchy handleShow={this.handleShow} value={/EmployeeId/g} ></ManagerHierarchy> : null\n                      }\n                      <button id=\"BargeWith\" onClick={(e) => this.unbargecall(e)} className={this.state.BargeWith == \"\" ? \"hide\" : \"btn btn-primary hangupwith show\"} ><i className=\"fa fa-volume-off\" aria-hidden=\"true\"></i> Hang Up With: {this.state.BargeWith}</button>\n                    </Col>\n\n                  </Row>\n\n                </CardHeader>\n\n                <CardBody>\n                  {/* {this.renderTotalData()} */}\n\n                  <div className=\"statusdata\">\n                    <DataTable\n                      columns={columns}\n                      data={data}\n                      pagination={false}\n                      striped={true}\n                      noHeader={true}\n                      highlightOnHover\n                      dense\n\n                    />\n\n                  </div>\n                </CardBody>\n\n              </Card>\n            </Col>\n            <audio id=\"audioRemote\"></audio>\n            <audio id=\"audioLocal\"></audio>\n\n          </Row>\n          <audio src=\"\" id={\"audio1\"}></audio>\n          <audio src=\"\" id={\"audio2\"}></audio>\n\n          <Modal show={this.state.showModal} onHide={() => this.setState({ showModal: false })} dialogClassName=\"modal-70w\">\n            <Modal.Header closeButton>\n              <Modal.Title>{this.state.ModalTitle}</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n              <div className=\"modaldata\">\n                <DataTable\n                  columns={unansweredcolumns}\n                  data={(UnansweredData && UnansweredData.length > 0) ? UnansweredData : []}\n                  pagination={false}\n                  striped={true}\n                  noHeader={true}\n                  highlightOnHover\n                  dense\n                  pagination={true}\n                />\n              </div>\n            </Modal.Body>\n            <Modal.Footer>\n\n            </Modal.Footer>\n          </Modal>\n          <Modal show={this.state.showMoreInfoModal} onHide={() => this.setState({ showMoreInfoModal: false })} dialogClassName=\"modal-90w\">\n            <Modal.Header closeButton>\n              <Modal.Title></Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n              <div className=\"modalmoreinfodata\">\n                <DataTable\n                  columns={moreinfocolumns}\n                  data={(MoreInfoData && MoreInfoData.length > 0) ? MoreInfoData : []}\n                  pagination={false}\n                  striped={true}\n                  noHeader={true}\n                  highlightOnHover\n                  dense\n\n                />\n              </div>\n            </Modal.Body>\n            <Modal.Footer>\n\n            </Modal.Footer>\n          </Modal>\n        </div>\n      </>\n    );\n  }\n}\n\n\nfunction mapStateToProps(state) {\n  return {\n    CommonData: state.CommonData\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  {\n    GetCommonData,\n    GetCommonspData,\n    GetMySqlData\n  }\n)(RealTimePanelQueuewise);\n\n\n\n\n"],"sourceRoot":""}