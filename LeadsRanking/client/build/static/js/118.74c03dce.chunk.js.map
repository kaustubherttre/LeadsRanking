{"version":3,"sources":["views/ChatAgentConfigure.jsx"],"names":["ChatAgentConfigure","props","handleChange","e","formvalue","state","od","target","type","id","checked","_isAMomentObject","format","parseInt","value","setState","ModalValueChanged","isLoaded","showModal","items","store","activePage","root","departmentId","PageTitle","FormTitle","event","user","departmentchange","bind","handleRemove","handleClose","handleShow","handleSave","selectedrow","columnlist","name","label","hide","searchable","editable","setTimeout","this","getuser","nextProps","CommonData","isError","columns","fnDatatableCol","push","cell","row","aria-label","variant","onClick","handleEdit","className","aria-hidden","window","confirm","DeleteData","body","username","data","status","toast","error","GetCommonData","cols","c","con","Object","assign","document","getElementsByName","length","reportValidity","JSON","parse","stringify","console","log","fnCleanData","UpdateData","querydata","_id","addRecord","module","nd","ts","Date","by","UserId","message","departmentid","limit","skip","md","tag","Group","as","Col","controlId","firstoption","col","config","enabled","statename","Idfield","Displayfield","onChange","disabled","extention","export","print","show","onHide","dialogClassName","Header","closeButton","Title","Body","map","fnRenderfrmControl","Footer","condition","React","Component","connect"],"mappings":"kXA8BMA,E,kDACJ,WAAYC,GAAQ,IAAD,uBACjB,cAAMA,IA+NRC,aAAe,SAACC,EAAGF,GACjB,IAAIG,EAAY,EAAKC,MAAMD,UAClB,EAAKC,MAAMC,GAEhBH,EAAEI,QAA2B,YAAjBJ,EAAEI,OAAOC,KACvBJ,EAAUD,EAAEI,OAAOE,IAAMN,EAAEI,OAAOG,QAE3BP,EAAEQ,iBACTP,EAAUH,GAASE,EAAES,SAGrBR,EAAUD,EAAEI,OAAOE,IAAwB,WAAlBN,EAAEI,OAAOC,KAAoBK,SAASV,EAAEI,OAAOO,OAASX,EAAEI,OAAOO,MAK5F,EAAKC,SAAS,CAAEX,UAAWA,EAAWY,mBAAmB,KA9OzD,EAAKX,MAAQ,CACXY,UAAU,EACVC,WAAW,EACXC,MAAO,GACPC,MAAO,GACPC,WAAY,EACZC,KAAM,6BACNC,aAAc,IAEdC,UAAW,2BACXC,UAAW,GACXrB,UAAW,GACXsB,MAAO,GACPV,mBAAmB,EACnBW,KAAM,IAER,EAAKC,iBAAmB,EAAKA,iBAAiBC,KAAtB,gBACxB,EAAKC,aAAe,EAAKA,aAAaD,KAAlB,gBACpB,EAAKE,YAAc,EAAKA,YAAYF,KAAjB,gBACnB,EAAKG,WAAa,EAAKA,WAAWH,KAAhB,gBAClB,EAAKI,WAAa,EAAKA,WAAWJ,KAAhB,gBAClB,EAAKK,YAAc,CAAC,SAAY,GAAI,YAAc,EAAO,SAAW,EAAO,SAAW,EAAO,QAAU,GACvG,EAAKC,WAAa,CAChB,CACEC,KAAM,MACNC,MAAO,KACP7B,KAAM,SACN8B,MAAM,GAER,CACEF,KAAM,WACNC,MAAO,WACP7B,KAAM,SACN+B,YAAY,EACZC,UAAU,GAEZ,CACEJ,KAAM,QACNC,MAAO,WACP7B,KAAM,SACNgC,UAAU,GAEZ,CACEJ,KAAM,QACNC,MAAO,QACP7B,KAAM,SACN+B,YAAY,GAEd,CACEH,KAAM,QACNC,MAAO,YACP7B,KAAM,UAER,CACE4B,KAAM,aACNC,MAAO,aACP7B,KAAM,UAER,CACE4B,KAAM,WACNC,MAAO,WACP7B,KAAM,SACNgC,UAAU,GAGZ,CACEJ,KAAM,aACNC,MAAO,aACP7B,KAAM,QAER,CACE4B,KAAM,UACNC,MAAO,UACP7B,KAAM,QAER,CAEE4B,KAAM,UACNC,MAAO,UACP7B,KAAM,QAER,CACE4B,KAAM,SACNC,MAAO,SACP7B,KAAM,SAtFO,S,qDA8FnB,WAEEiC,WAAW,WACTC,KAAK3B,SAAS,CAAEY,KAAMgB,iBACtBd,KAAKa,MAAO,O,uCAKhB,SAA0BE,GAEnBA,EAAUC,WAAWC,UAExBJ,KAAK3B,SAAS,CAAEI,MAAOyB,EAAUC,WAAWH,KAAKrC,MAAMiB,QAEvDoB,KAAK3B,SAAS,CAAEK,MAAOwB,EAAUC,gB,4BAMrC,WAAkB,IAAD,OAEXE,EAAUC,YAAeN,KAAKP,YASlC,OAPAY,EAAQE,KAAK,CACXb,KAAM,SACNc,KAAM,SAAAC,GAAG,OAAI,kBAAC,IAAD,CAAaC,aAAW,iBACnC,kBAAC,IAAD,CAAQC,QAAQ,YAAYC,QAAS,kBAAM,EAAKC,WAAWJ,KAAM,uBAAGK,UAAU,wBAAwBC,cAAY,UAClH,kBAAC,IAAD,CAAQJ,QAAQ,YAAYC,QAAS,WAAYI,OAAOC,QAAQ,+CAA+C,EAAK7B,aAAaqB,KAAO,uBAAGK,UAAU,cAAcC,cAAY,cAG5KV,I,0BAEV,SAAaI,GAEVT,KAAKzC,MAAM2D,WAAW,CACpBtC,KAAMoB,KAAKrC,MAAMiB,KACjBuC,KAAM,CAACtC,aAAc4B,EAAI5B,aAAcuC,SAAUX,EAAIW,YACpD,SAAUC,GACa,MAArBA,EAAKA,KAAKC,OACXC,YAAM,iBAAkB,CAAEzD,KAAM,YAEhCyD,IAAMC,MAAM,iCAGhBzB,WAAW,WACTC,KAAKzC,MAAMkE,cAAc,CACvB7C,KAAMoB,KAAKrC,MAAMiB,KACjB8C,KAAM,GACNC,EAAG,IACHC,IAAK,CAAE,aAAgBnB,EAAI5B,iBAE7BM,KAAKa,MAAO,O,wBAGhB,SAAWS,GACTT,KAAK3B,SAAS,CAAET,GAAIiE,OAAOC,OAAO,GAAIrB,EAAK,IAAK/C,UAAWmE,OAAOC,OAAO,GAAIrB,EAAK,IAAKzB,MAAO,OAAQR,WAAW,EAAMO,UAAW,kB,yBAEpI,WACEiB,KAAK3B,SAAS,CAAEG,WAAW,M,wBAE7B,WACEwB,KAAK3B,SAAS,CAAEX,UAAU,eAAKsC,KAAKR,aAAcR,MAAO,MAAOR,WAAW,EAAMO,UAAW,qB,wBAG9F,WACE,GAAIgD,SAASC,kBAAkB,yBAAyBC,OAAS,GAC/DF,SAASC,kBAAkB,yBAAyB,GAAGE,iBAAkB,CAEzE,IAAIxE,EAAYyE,KAAKC,MAAMD,KAAKE,UAAUrC,KAAKrC,MAAMD,YACrD4E,QAAQC,IAAI,YAAa7E,GACzBsC,KAAKwC,YAAY9E,GACjB,IAAIK,EAAKL,EAAS,IAGlB,UAFOA,EAAS,IAEQ,QAApBsC,KAAKrC,MAAMqB,MAAiB,CAC9BgB,KAAKwC,YAAY9E,GAEPsC,KAAKzC,MAAMkF,WAAW,CAC9B7D,KAAMoB,KAAKrC,MAAMiB,KACjBuC,KAAMzD,EACNgF,UAAW,CAAEC,IAAK5E,GAClB4D,EAAG,MAEF,SAAUN,GACXE,YAAM,6BAA8B,CAAEzD,KAAM,eAK9CkC,KAAKzC,MAAMqF,UAAU,CACnBhE,KAAM,UACNuC,KAAM,CACJ0B,OAAQ,+BACRjF,GAAIoC,KAAKrC,MAAMC,GACfkF,GAAIpF,EACJqF,GAAI,IAAIC,KACRC,GAAIhD,cAAUiD,UAEf,SAAU7B,GACXE,YAAM,sBAAuB,CAAEzD,KAAM,oBAGvCJ,EAAS,aAAmBsC,KAAKrC,MAAMkB,aACvCmB,KAAKzC,MAAMqF,UAAU,CACnBhE,KAAMoB,KAAKrC,MAAMiB,KACjBuC,KAAMzD,IACL,SAAU2D,GACa,MAArBA,EAAKA,KAAKC,OACXC,IAAMC,MAAMH,EAAKA,KAAK8B,SAEtB5B,YAAM,2BAA4B,CAAEzD,KAAM,eAGhD,IAAIsF,EAAe1F,EAAS,aAE5BqC,WAAW,WACTC,KAAKzC,MAAMkE,cAAc,CACvB7C,KAAMoB,KAAKrC,MAAMiB,KACjB8C,KAAM,GACNC,EAAG,IACHC,IAAK,CAAE,aAAgBwB,MAEzBjE,KAAKa,MAAO,KAEdA,KAAK3B,SAAS,CAAEG,WAAW,IAE7B,OAAO,I,yBAqBT,SAAYd,GACVA,EAAY8E,YAAYxC,KAAKP,WAAY/B,GACzCsC,KAAK3B,SAAS,CAAEX,UAAWA,M,8BAG7B,SAAiBD,GACfuC,KAAK3B,SAAS,CAACQ,aAAcpB,EAAEI,OAAOO,QACtC4B,KAAKzC,MAAMkE,cAAc,CACvB4B,MAAO,GACPC,KAAM,EACN1E,KAAMoB,KAAKrC,MAAMiB,KACjB8C,KAAM,GACNC,EAAG,IACHC,IAAK,CAAE,aAAgBnE,EAAEI,OAAOO,W,oBAKpC,WAAU,IAAD,OACDiC,EAAUL,KAAKM,iBACrB,EAAwFN,KAAKrC,MAArFc,EAAR,EAAQA,MAAOK,EAAf,EAAeA,UAAWN,EAA1B,EAA0BA,UAAWO,EAArC,EAAqCA,UAAWrB,EAAhD,EAAgDA,UAAWY,EAA3D,EAA2DA,kBAAmBU,EAA9E,EAA8EA,MAC9EsD,QAAQC,IAAI,cAAe9D,GAiB3B,OACE,oCACE,yBAAKqC,UAAU,WACb,kBAAC,IAAD,MACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKyC,GAAG,MACN,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKA,GAAI,GACP,kBAAC,IAAD,CAAWC,IAAI,MAAM1E,IAEvB,kBAAC,IAAD,CAAKyE,GAAI,GACP,kBAAC,IAAKE,MAAN,CAAYC,GAAIC,IAAKJ,GAAI,GAAIK,UAAU,uBACrC,kBAAC,IAAD,CAAUC,YAAY,oBAAoBC,IA5BzB,CACnCC,OACA,CACEnF,KAAM,sBACN8C,KAAM,CAAEiB,IAAK,EAAGjD,KAAM,GACtBkC,IAAK,CAAEoC,SAAS,GAChBC,UAAW,GACXtG,OAAO,EACPuG,QAAS,OACTC,aAAc,UAmB+EC,SAAUpE,KAAKd,qBAMjG,kBAAC,IAAD,CAAKqE,GAAI,GACN,kBAAC,IAAD,CAAQc,SAAoC,MAA1BrE,KAAKrC,MAAMkB,eAAoB,EAAM8B,QAAQ,UAAUC,QAASZ,KAAKV,YAAvF,eAIN,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEe,QAASA,EACTgB,KAAM5C,EACN6F,WAAW,EACXC,QAAQ,EACRC,OAAO,QAOjB,kBAAC,IAAD,CAAOC,KAAMjG,EAAWkG,OAAQ1E,KAAKX,YAAasF,gBAAgB,aAChE,kBAAC,IAAMC,OAAP,CAAcC,aAAW,GACvB,kBAAC,IAAMC,MAAP,KAAc/F,IAEhB,kBAAC,IAAMgG,KAAP,KACE,kBAAC,IAAD,CAAMrF,KAAK,yBACT,kBAAC,IAAD,KACGM,KAAKP,WAAWuF,KAAI,SAAAlB,GAAG,OACtBmB,YAAmBnB,EAAKpG,EAAW,EAAKF,aAAcwB,SAK9D,kBAAC,IAAMkG,OAAP,KACE,kBAAC,IAAD,CAAQvE,QAAQ,YAAYC,QAASZ,KAAKX,aAA1C,SAGA,kBAAC,KAAD,CAAI8F,UAAW7G,GACb,kBAAC,OAAD,KACE,2BAAOR,KAAK,SAASM,MAAM,eAAe0C,UAAU,kBAAkBF,QAASZ,KAAKT,uB,GAnVrE6F,IAAMC,WAqWxBC,uBANf,SAAyB3H,GACvB,MAAO,CACLwC,WAAYxC,EAAMwC,eAIA,GAGlBsB,kBACAmB,cACAH,gBALkB,0BAMlBG,KANkB,2BAOlB1B,KAPkB,GAAPoE,CASbhI","file":"static/js/118.74c03dce.chunk.js","sourcesContent":["\r\nimport React from \"react\";\r\nimport { ButtonGroup, Button, Modal, Form } from 'react-bootstrap';\r\nimport {\r\n  GetCommonData, addRecord, UpdateData, DeleteData\r\n} from \"../store/actions/CommonMongoAction\";\r\n\r\nimport { If, Then } from 'react-if';\r\n//import { If, Then, Else, When, Unless, Switch, Case, Default } from 'react-if';\r\n\r\nimport { connect } from \"react-redux\";\r\n// import { Link } from \"react-router-dom\";\r\nimport DataTable from './Common/DataTableWithFilter';\r\nimport DropDown from './Common/DropDownListMongo';\r\n\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nimport { fnRenderfrmControl, fnDatatableCol, fnCleanData } from '../utility/utility.jsx';\r\n// reactstrap components\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  Row,\r\n  Col\r\n} from \"reactstrap\";\r\nimport { getuser } from \"utility/utility\";\r\n\r\nclass ChatAgentConfigure extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isLoaded: false,\r\n      showModal: false,\r\n      items: [],\r\n      store: [],\r\n      activePage: 1,\r\n      root: \"livechat_department_agents\",\r\n      departmentId: \"0\",\r\n\r\n      PageTitle: \"Chat Agent Configuration\",\r\n      FormTitle: \"\",\r\n      formvalue: {},\r\n      event: \"\",\r\n      ModalValueChanged: false,\r\n      user: {}\r\n    };\r\n    this.departmentchange = this.departmentchange.bind(this);\r\n    this.handleRemove = this.handleRemove.bind(this);\r\n    this.handleClose = this.handleClose.bind(this);\r\n    this.handleShow = this.handleShow.bind(this);\r\n    this.handleSave = this.handleSave.bind(this);\r\n    this.selectedrow = {\"username\": \"\", \"isOutbound\": false, \"chatbot\": false, \"offline\": false, \"newcar\": false }\r\n    this.columnlist = [\r\n      {\r\n        name: \"_id\",\r\n        label: \"id\",\r\n        type: \"hidden\",\r\n        hide: true,\r\n      },\r\n      {\r\n        name: \"username\",\r\n        label: \"Username\",\r\n        type: \"string\",\r\n        searchable: true,\r\n        editable: false\r\n      },\r\n      {\r\n        name: \"count\",\r\n        label: \"OpenChat\",\r\n        type: \"number\",\r\n        editable: false\r\n      },\r\n      {\r\n        name: \"order\",\r\n        label: \"Grade\",\r\n        type: \"number\",\r\n        searchable: true,\r\n      },\r\n      {\r\n        name: \"limit\",\r\n        label: \"OpenLimit\",\r\n        type: \"number\"\r\n      },\r\n      {\r\n        name: \"dailylimit\",\r\n        label: \"Dailylimit\",\r\n        type: \"number\"\r\n      },\r\n      {\r\n        name: \"assigned\",\r\n        label: \"Assigned\",\r\n        type: \"number\",\r\n        editable: false\r\n      },\r\n\r\n      {\r\n        name: \"isOutbound\",\r\n        label: \"IsOutbound\",\r\n        type: \"bool\"\r\n      },\r\n      {\r\n        name: \"chatbot\",\r\n        label: \"Chatbot\",\r\n        type: \"bool\"\r\n      },\r\n      {\r\n \r\n        name: \"offline\",\r\n        label: \"Offline\",\r\n        type: \"bool\"\r\n      },\r\n      {\r\n        name: \"newcar\",\r\n        label: \"Newcar\",\r\n        type: \"bool\"\r\n      },\r\n    ];\r\n    let count = 0;\r\n  }\r\n\r\n\r\n\r\n  componentDidMount() {\r\n\r\n    setTimeout(function () {\r\n      this.setState({ user: getuser() });\r\n    }.bind(this), 500);\r\n  }\r\n\r\n\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n\r\n    if (!nextProps.CommonData.isError) {\r\n\r\n      this.setState({ items: nextProps.CommonData[this.state.root] });\r\n\r\n      this.setState({ store: nextProps.CommonData });\r\n    }\r\n\r\n  }\r\n\r\n\r\n  fnDatatableCol() {\r\n\r\n    var columns = fnDatatableCol(this.columnlist);\r\n\r\n    columns.push({\r\n      name: \"Action\",\r\n      cell: row => <ButtonGroup aria-label=\"Basic example\">\r\n        <Button variant=\"secondary\" onClick={() => this.handleEdit(row)}><i className=\"fa fa-pencil-square-o\" aria-hidden=\"true\"></i></Button>\r\n        <Button variant=\"secondary\" onClick={() => { if (window.confirm('Are you sure you wish to block this agent?')) this.handleRemove(row)}}><i className=\"fa fa-trash\" aria-hidden=\"true\"></i></Button>\r\n      </ButtonGroup>\r\n    });\r\n    return columns;\r\n  }\r\n handleRemove(row){\r\n\r\n    this.props.DeleteData({\r\n      root: this.state.root,\r\n      body: {departmentId: row.departmentId, username: row.username}\r\n    }, function (data) {\r\n      if(data.data.status === 200) \r\n        toast(\"Agent removed!\", { type: 'success' });\r\n      else \r\n        toast.error(\"Agent could not be removed\"); \r\n    })\r\n\r\n    setTimeout(function () {\r\n      this.props.GetCommonData({\r\n        root: this.state.root,\r\n        cols: {},\r\n        c: \"L\",\r\n        con: { \"departmentId\": row.departmentId},\r\n      });\r\n    }.bind(this), 1000);\r\n\r\n  }\r\n  handleEdit(row) {\r\n    this.setState({ od: Object.assign({}, row, {}), formvalue: Object.assign({}, row, {}), event: \"Edit\", showModal: true, FormTitle: \"Edit Record\" });\r\n  }\r\n  handleClose() {\r\n    this.setState({ showModal: false });\r\n  }\r\n  handleShow() {\r\n    this.setState({ formvalue: {...this.selectedrow}, event: \"Add\", showModal: true, FormTitle: \"Add New Record\" });\r\n  }\r\n\r\n  handleSave() {\r\n    if (document.getElementsByName(\"frmChatAgentConfigure\").length > 0 &&\r\n      document.getElementsByName(\"frmChatAgentConfigure\")[0].reportValidity()) {\r\n\r\n      let formvalue = JSON.parse(JSON.stringify(this.state.formvalue));\r\n      console.log(\"formvalue\", formvalue);\r\n      this.fnCleanData(formvalue);\r\n      let id = formvalue[\"_id\"];\r\n      delete formvalue[\"_id\"]\r\n\r\n      if (this.state.event == \"Edit\") {\r\n        this.fnCleanData(formvalue);\r\n\r\n        let res = this.props.UpdateData({\r\n          root: this.state.root,\r\n          body: formvalue,\r\n          querydata: { _id: id },\r\n          c: \"L\",\r\n\r\n        }, function (data) {\r\n          toast(\"Record Saved Successfully!\", { type: 'success' });\r\n        });\r\n\r\n\r\n\r\n        this.props.addRecord({\r\n          root: \"History\",\r\n          body: {\r\n            module: \"ChatAgentDepartmentConfigure\",\r\n            od: this.state.od,\r\n            nd: formvalue,\r\n            ts: new Date(),\r\n            by: getuser().UserId\r\n          }\r\n        }, function (data) {\r\n          toast(\"History Maintained!\", { type: 'success' });\r\n        });\r\n      } else{\r\n        formvalue[\"departmentId\"] = this.state.departmentId; \r\n        this.props.addRecord({\r\n          root: this.state.root,\r\n          body: formvalue\r\n        }, function (data) {\r\n          if(data.data.status === 400){\r\n            toast.error(data.data.message) ; \r\n          } else\r\n            toast(\"User Added Successfully!\", { type: 'success' });\r\n        });\r\n      }\r\n      let departmentid = formvalue[\"departmentId\"];\r\n\r\n      setTimeout(function () {\r\n        this.props.GetCommonData({\r\n          root: this.state.root,\r\n          cols: {},\r\n          c: \"L\",\r\n          con: { \"departmentId\": departmentid },\r\n        });\r\n      }.bind(this), 1000);\r\n\r\n      this.setState({ showModal: false });\r\n    }\r\n    return false;\r\n  }\r\n  handleChange = (e, props) => {\r\n    let formvalue = this.state.formvalue;\r\n    let od = this.state.od;\r\n\r\n    if (e.target && e.target.type == \"checkbox\") {\r\n      formvalue[e.target.id] = e.target.checked;\r\n    }\r\n    else if (e._isAMomentObject) {\r\n      formvalue[props] = e.format()\r\n    }\r\n    else {\r\n      formvalue[e.target.id] = e.target.type === 'number' ? parseInt(e.target.value) : e.target.value;\r\n    }\r\n    //debugger;\r\n    //let Changed = CompareJson(od, formvalue);\r\n\r\n    this.setState({ formvalue: formvalue, ModalValueChanged: true });\r\n  }\r\n\r\n  fnCleanData(formvalue) {\r\n    formvalue = fnCleanData(this.columnlist, formvalue);\r\n    this.setState({ formvalue: formvalue });\r\n  }\r\n\r\n  departmentchange(e) {\r\n    this.setState({departmentId: e.target.value}); \r\n    this.props.GetCommonData({\r\n      limit: 10,\r\n      skip: 0,\r\n      root: this.state.root,\r\n      cols: {},\r\n      c: \"L\",\r\n      con: { \"departmentId\": e.target.value },\r\n    });\r\n\r\n  }\r\n\r\n  render() {\r\n    const columns = this.fnDatatableCol();\r\n    const { items, PageTitle, showModal, FormTitle, formvalue, ModalValueChanged, event } = this.state;\r\n    console.log(\"renderitems\", items);\r\n    // let departments = [];\r\n    // departments.push(items);\r\n    const ChatAgentDepartmentConfigure = {\r\n      config:\r\n      {\r\n        root: \"livechat_department\",\r\n        cols: { _id: 1, name: 1 },\r\n        con: { enabled: true },\r\n        statename: \"\",\r\n        state: true,\r\n        Idfield: /_id/g,\r\n        Displayfield: /name/g,\r\n      }\r\n    }\r\n\r\n\r\n    return (\r\n      <>\r\n        <div className=\"content\">\r\n          <ToastContainer />\r\n          <Row>\r\n            <Col md=\"12\">\r\n              <Card>\r\n                <CardHeader>\r\n                  <Row>\r\n                    <Col md={7}>\r\n                      <CardTitle tag=\"h4\">{PageTitle}</CardTitle>\r\n                    </Col>\r\n                    <Col md={3}>\r\n                      <Form.Group as={Col} md={12} controlId=\"Department_dropdown\">\r\n                        <DropDown firstoption=\"Select Department\" col={ChatAgentDepartmentConfigure} onChange={this.departmentchange}>\r\n\r\n                        </DropDown>\r\n                      </Form.Group>\r\n\r\n                    </Col>\r\n                   <Col md={2}>\r\n                      <Button disabled={this.state.departmentId===\"0\"&&true} variant=\"primary\" onClick={this.handleShow}>Add User</Button>\r\n                    </Col>\r\n                   </Row>\r\n                </CardHeader>\r\n                <CardBody>\r\n                  <DataTable\r\n                    columns={columns}\r\n                    data={items}\r\n                    extention={true}\r\n                    export={false}\r\n                    print={false}\r\n                  />\r\n                </CardBody>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n\r\n          <Modal show={showModal} onHide={this.handleClose} dialogClassName=\"modal-90w\">\r\n            <Modal.Header closeButton>\r\n              <Modal.Title>{FormTitle}</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n              <Form name=\"frmChatAgentConfigure\">\r\n                <Row>\r\n                  {this.columnlist.map(col => (\r\n                    fnRenderfrmControl(col, formvalue, this.handleChange, event)\r\n                  ))}\r\n                </Row>\r\n              </Form>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n              <Button variant=\"secondary\" onClick={this.handleClose}>\r\n                Close\r\n          </Button>\r\n              <If condition={ModalValueChanged}>\r\n                <Then>\r\n                  <input type=\"submit\" value=\"Save Changes\" className=\"btn btn-primary\" onClick={this.handleSave} />\r\n                </Then>\r\n              </If>\r\n            </Modal.Footer>\r\n          </Modal>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    CommonData: state.CommonData\r\n  };\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    GetCommonData,\r\n    addRecord,\r\n    UpdateData,\r\n    addRecord,\r\n    DeleteData\r\n   }\r\n)(ChatAgentConfigure);"],"sourceRoot":""}